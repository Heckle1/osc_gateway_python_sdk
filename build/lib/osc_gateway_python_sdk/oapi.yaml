components:
  schemas:
    AcceptNetPeeringRequest:
      properties:
        DryRun: {description: AcceptNetPeeringRequest_DryRun, type: boolean}
        NetPeeringId: {description: AcceptNetPeeringRequest_NetPeeringId, type: string}
      required: [NetPeeringId]
      type: object
    AcceptNetPeeringResponse:
      properties:
        NetPeering: {$ref: '#/components/schemas/NetPeering'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    AccepterNet:
      description: AccepterNet
      properties:
        AccountId: {description: AccepterNet_AccountId, type: string}
        IpRange: {description: AccepterNet_IpRange, type: string}
        NetId: {description: AccepterNet_NetId, type: string}
      type: object
    AccessLog:
      description: AccessLog
      properties:
        IsEnabled: {description: AccessLog_IsEnabled, type: boolean}
        OsuBucketName: {description: AccessLog_OsuBucketName, type: string}
        OsuBucketPrefix: {description: AccessLog_OsuBucketPrefix, type: string}
        PublicationInterval: {description: AccessLog_PublicationInterval, type: integer}
      type: object
    Account:
      description: Account
      properties:
        AccountId: {description: Account_AccountId, type: string}
        City: {description: Account_City, type: string}
        CompanyName: {description: Account_CompanyName, type: string}
        Country: {description: Account_Country, type: string}
        CustomerId: {description: Account_CustomerId, type: string}
        Email: {description: Account_Email, type: string}
        FirstName: {description: Account_FirstName, type: string}
        JobTitle: {description: Account_JobTitle, type: string}
        LastName: {description: Account_LastName, type: string}
        Mobile: {description: Account_Mobile, type: string}
        Phone: {description: Account_Phone, type: string}
        StateProvince: {description: Account_StateProvince, type: string}
        VatNumber: {description: Account_VatNumber, type: string}
        ZipCode: {description: Account_ZipCode, type: string}
      type: object
    ApiKey:
      description: ApiKey
      properties:
        AccountId: {description: ApiKey_AccountId, type: string}
        ApiKeyId: {description: ApiKey_ApiKeyId, type: string}
        SecretKey: {description: ApiKey_SecretKey, type: string}
        State: {description: ApiKey_State, type: string}
        Tags:
          description: ApiKey_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        UserName: {description: ApiKey_UserName, type: string}
      type: object
    ApplicationStickyCookiePolicy:
      description: ApplicationStickyCookiePolicy
      properties:
        CookieName: {description: ApplicationStickyCookiePolicy_CookieName, type: string}
        PolicyName: {description: ApplicationStickyCookiePolicy_PolicyName, type: string}
      type: object
    Attribute:
      description: Attribute
      properties:
        Key: {description: Attribute_Key, type: string}
        Value: {description: Attribute_Value, type: string}
      type: object
    AuthenticateAccountRequest:
      properties:
        DryRun: {description: AuthenticateAccountRequest_DryRun, type: boolean}
        Login: {description: AuthenticateAccountRequest_Login, type: string}
        Password: {description: AuthenticateAccountRequest_Password, type: string}
      required: [Login, Password]
      type: object
    AuthenticateAccountResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    BackendVmHealth:
      description: BackendVmHealth
      properties:
        Description: {description: BackendVmHealth_Description, type: string}
        State: {description: BackendVmHealth_State, type: string}
        StateReason: {description: BackendVmHealth_StateReason, type: string}
        VmId: {description: BackendVmHealth_VmId, type: string}
      type: object
    BlockDeviceMapping:
      description: BlockDeviceMapping
      properties:
        Bsu: {$ref: '#/components/schemas/Bsu'}
        DeviceName: {description: BlockDeviceMapping_DeviceName, type: string}
        NoDevice: {description: BlockDeviceMapping_NoDevice, type: string}
        VirtualDeviceName: {description: BlockDeviceMapping_VirtualDeviceName, type: string}
      type: object
    BlockDeviceMappingCreated:
      description: BlockDeviceMappingCreated
      properties:
        Bsu: {$ref: '#/components/schemas/BsuCreated'}
        DeviceName: {description: BlockDeviceMappingCreated_DeviceName, type: string}
      type: object
    BlockDeviceMappingImage:
      description: BlockDeviceMappingImage
      properties:
        Bsu: {$ref: '#/components/schemas/BsuToCreate'}
        DeviceName: {description: BlockDeviceMappingImage_DeviceName, type: string}
        VirtualDeviceName: {description: BlockDeviceMappingImage_VirtualDeviceName,
          type: string}
      type: object
    BlockDeviceMappingVmCreation:
      description: BlockDeviceMappingVmCreation
      properties:
        Bsu: {$ref: '#/components/schemas/BsuToCreate'}
        DeviceName: {description: BlockDeviceMappingVmCreation_DeviceName, type: string}
        NoDevice: {description: BlockDeviceMappingVmCreation_NoDevice, type: string}
        VirtualDeviceName: {description: BlockDeviceMappingVmCreation_VirtualDeviceName,
          type: string}
      type: object
    BlockDeviceMappingVmUpdate:
      description: BlockDeviceMappingVmUpdate
      properties:
        Bsu: {$ref: '#/components/schemas/BsuToUpdateVm'}
        DeviceName: {description: BlockDeviceMappingVmUpdate_DeviceName, type: string}
        NoDevice: {description: BlockDeviceMappingVmUpdate_NoDevice, type: string}
        VirtualDeviceName: {description: BlockDeviceMappingVmUpdate_VirtualDeviceName,
          type: string}
      type: object
    Bsu:
      description: Bsu
      properties:
        DeleteOnVmDeletion: {description: Bsu_DeleteOnVmDeletion, type: boolean}
        Iops: {description: Bsu_Iops, type: integer}
        LinkDate: {description: Bsu_LinkDate, format: date, type: string}
        SnapshotId: {description: Bsu_SnapshotId, type: string}
        VolumeId: {description: Bsu_VolumeId, type: string}
        VolumeSize: {description: Bsu_VolumeSize, type: integer}
        VolumeType: {description: Bsu_VolumeType, type: string}
      type: object
    BsuCreated:
      description: BsuCreated
      properties:
        DeleteOnVmDeletion: {description: BsuCreated_DeleteOnVmDeletion, type: boolean}
        LinkDate: {description: BsuCreated_LinkDate, format: date, type: string}
        State: {description: BsuCreated_State, type: string}
        VolumeId: {description: BsuCreated_VolumeId, type: string}
      type: object
    BsuToCreate:
      description: BsuToCreate
      properties:
        DeleteOnVmDeletion: {description: BsuToCreate_DeleteOnVmDeletion, type: boolean}
        Iops: {description: BsuToCreate_Iops, type: integer}
        SnapshotId: {description: BsuToCreate_SnapshotId, type: string}
        VolumeSize: {description: BsuToCreate_VolumeSize, type: integer}
        VolumeType: {description: BsuToCreate_VolumeType, type: string}
      type: object
    BsuToUpdateVm:
      description: BsuToUpdateVm
      properties:
        DeleteOnVmDeletion: {description: BsuToUpdateVm_DeleteOnVmDeletion, type: boolean}
        VolumeId: {description: BsuToUpdateVm_VolumeId, type: string}
      type: object
    CatalogAttribute:
      description: CatalogAttribute
      properties:
        Key: {description: CatalogAttribute_Key, type: string}
        Value: {description: CatalogAttribute_Value, type: string}
      type: object
    CatalogEntry:
      description: CatalogEntry
      properties:
        CatalogAttributes:
          description: CatalogEntry_CatalogAttributes
          items: {$ref: '#/components/schemas/CatalogAttribute'}
          type: array
        EntryKey: {description: CatalogEntry_EntryKey, type: string}
        EntryValue: {description: CatalogEntry_EntryValue, type: string}
        ShortDescription: {description: CatalogEntry_ShortDescription, type: string}
      type: object
    Catalog_0:
      description: Catalog_0
      properties:
        Domain: {description: Catalog_0_Domain, type: string}
        Instance: {description: Catalog_0_Instance, type: string}
        SourceRegionName: {description: Catalog_0_SourceRegionName, type: string}
        TargetRegionName: {description: Catalog_0_TargetRegionName, type: string}
        Version: {description: Catalog_0_Version, type: string}
      type: object
    Catalog_1:
      description: Catalog_1
      properties:
        CatalogAttributes:
          description: Catalog_1_CatalogAttributes
          items: {$ref: '#/components/schemas/CatalogAttribute'}
          type: array
        CatalogEntries:
          description: Catalog_1_CatalogEntries
          items: {$ref: '#/components/schemas/CatalogEntry'}
          type: array
      type: object
    CheckSignatureRequest:
      properties:
        ApiKeyId: {description: CheckSignatureRequest_ApiKeyId, type: string}
        DryRun: {description: CheckSignatureRequest_DryRun, type: boolean}
        RegionName: {description: CheckSignatureRequest_RegionName, type: string}
        RequestDate: {description: CheckSignatureRequest_RequestDate, format: date,
          type: string}
        Service: {description: CheckSignatureRequest_Service, type: string}
        Signature: {description: CheckSignatureRequest_Signature, type: string}
        SignedContent: {description: CheckSignatureRequest_SignedContent, type: string}
      required: [ApiKeyId, RequestDate, RegionName, Service, Signature, SignedContent]
      type: object
    CheckSignatureResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ClientGateway:
      description: ClientGateway
      properties:
        BgpAsn: {description: ClientGateway_BgpAsn, type: integer}
        ClientGatewayId: {description: ClientGateway_ClientGatewayId, type: string}
        ConnectionType: {description: ClientGateway_ConnectionType, type: string}
        PublicIp: {description: ClientGateway_PublicIp, type: string}
        State: {description: ClientGateway_State, type: string}
        Tags:
          description: ClientGateway_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    ConsumptionEntries:
      description: ConsumptionEntries
      properties:
        Category: {description: ConsumptionEntries_Category, type: string}
        ConsumptionValue: {description: ConsumptionEntries_ConsumptionValue, type: string}
        Entry: {description: ConsumptionEntries_Entry, type: string}
        ResourceType: {description: ConsumptionEntries_ResourceType, type: string}
        Service: {description: ConsumptionEntries_Service, type: string}
        ShortDescription: {description: ConsumptionEntries_ShortDescription, type: string}
      type: object
    CopyAccountRequest:
      properties:
        DestinationRegionName: {description: CopyAccountRequest_DestinationRegionName,
          type: string}
        DryRun: {description: CopyAccountRequest_DryRun, type: boolean}
        QuotaProfile: {description: CopyAccountRequest_QuotaProfile, type: string}
      required: [DestinationRegionName]
      type: object
    CopyAccountResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateAccountRequest:
      properties:
        AccountId: {description: CreateAccountRequest_AccountId, type: string}
        ApiKeys:
          description: CreateAccountRequest_ApiKeys
          items: {$ref: '#/components/schemas/ApiKey'}
          type: array
        City: {description: CreateAccountRequest_City, type: string}
        CompanyName: {description: CreateAccountRequest_CompanyName, type: string}
        Country: {description: CreateAccountRequest_Country, type: string}
        CustomerId: {description: CreateAccountRequest_CustomerId, type: string}
        DryRun: {description: CreateAccountRequest_DryRun, type: boolean}
        Email: {description: CreateAccountRequest_Email, type: string}
        FirstName: {description: CreateAccountRequest_FirstName, type: string}
        JobTitle: {description: CreateAccountRequest_JobTitle, type: string}
        LastName: {description: CreateAccountRequest_LastName, type: string}
        Mobile: {description: CreateAccountRequest_Mobile, type: string}
        Password: {description: CreateAccountRequest_Password, type: string}
        Phone: {description: CreateAccountRequest_Phone, type: string}
        QuotaProfile: {description: CreateAccountRequest_QuotaProfile, type: string}
        StateProvince: {description: CreateAccountRequest_StateProvince, type: string}
        VatNumber: {description: CreateAccountRequest_VatNumber, type: string}
        ZipCode: {description: CreateAccountRequest_ZipCode, type: string}
      required: [City, CompanyName, Country, CustomerId, Email, FirstName, LastName,
        Password]
      type: object
    CreateAccountResponse:
      properties:
        Account: {$ref: '#/components/schemas/Account'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateApiKeyRequest:
      properties:
        ApiKeyId: {description: CreateApiKeyRequest_ApiKeyId, type: string}
        DryRun: {description: CreateApiKeyRequest_DryRun, type: boolean}
        SecretKey: {description: CreateApiKeyRequest_SecretKey, type: string}
        Tags:
          description: CreateApiKeyRequest_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        UserName: {description: CreateApiKeyRequest_UserName, type: string}
      type: object
    CreateApiKeyResponse:
      properties:
        ApiKey: {$ref: '#/components/schemas/ApiKey'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateClientGatewayRequest:
      properties:
        BgpAsn: {description: CreateClientGatewayRequest_BgpAsn, type: integer}
        ConnectionType: {description: CreateClientGatewayRequest_ConnectionType, type: string}
        DryRun: {description: CreateClientGatewayRequest_DryRun, type: boolean}
        PublicIp: {description: CreateClientGatewayRequest_PublicIp, type: string}
      required: [BgpAsn, PublicIp, ConnectionType]
      type: object
    CreateClientGatewayResponse:
      properties:
        ClientGateway: {$ref: '#/components/schemas/ClientGateway'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateDhcpOptionsRequest:
      properties:
        DomainName: {description: CreateDhcpOptionsRequest_DomainName, type: string}
        DomainNameServers:
          description: CreateDhcpOptionsRequest_DomainNameServers
          items: {type: string}
          type: array
        DryRun: {description: CreateDhcpOptionsRequest_DryRun, type: boolean}
        NtpServers:
          description: CreateDhcpOptionsRequest_NtpServers
          items: {type: string}
          type: array
      type: object
    CreateDhcpOptionsResponse:
      properties:
        DhcpOptionsSet: {$ref: '#/components/schemas/DhcpOptionsSet'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateDirectLinkInterfaceRequest:
      properties:
        DirectLinkId: {description: CreateDirectLinkInterfaceRequest_DirectLinkId,
          type: string}
        DirectLinkInterface: {$ref: '#/components/schemas/DirectLinkInterface'}
        DryRun: {description: CreateDirectLinkInterfaceRequest_DryRun, type: boolean}
      required: [DirectLinkId, DirectLinkInterface]
      type: object
    CreateDirectLinkInterfaceResponse:
      properties:
        DirectLinkInterface: {$ref: '#/components/schemas/DirectLinkInterfaces'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateDirectLinkRequest:
      properties:
        Bandwidth: {description: CreateDirectLinkRequest_Bandwidth, type: string}
        DirectLinkName: {description: CreateDirectLinkRequest_DirectLinkName, type: string}
        DryRun: {description: CreateDirectLinkRequest_DryRun, type: boolean}
        Location: {description: CreateDirectLinkRequest_Location, type: string}
      required: [Bandwidth, DirectLinkName, Location]
      type: object
    CreateDirectLinkResponse:
      properties:
        DirectLink: {$ref: '#/components/schemas/DirectLink'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateImageExportTaskRequest:
      properties:
        DryRun: {description: CreateImageExportTaskRequest_DryRun, type: boolean}
        ImageId: {description: CreateImageExportTaskRequest_ImageId, type: string}
        OsuExport: {$ref: '#/components/schemas/OsuExport'}
      required: [OsuExport, ImageId]
      type: object
    CreateImageExportTaskResponse:
      properties:
        ImageExportTask: {$ref: '#/components/schemas/ImageExportTask'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateImageRequest:
      properties:
        Architecture: {description: CreateImageRequest_Architecture, type: string}
        BlockDeviceMappings:
          description: CreateImageRequest_BlockDeviceMappings
          items: {$ref: '#/components/schemas/BlockDeviceMappingImage'}
          type: array
        Description: {description: CreateImageRequest_Description, type: string}
        DryRun: {description: CreateImageRequest_DryRun, type: boolean}
        FileLocation: {description: CreateImageRequest_FileLocation, type: string}
        ImageName: {description: CreateImageRequest_ImageName, type: string}
        NoReboot: {description: CreateImageRequest_NoReboot, type: boolean}
        RootDeviceName: {description: CreateImageRequest_RootDeviceName, type: string}
        SourceImageId: {description: CreateImageRequest_SourceImageId, type: string}
        SourceRegionName: {description: CreateImageRequest_SourceRegionName, type: string}
        VmId: {description: CreateImageRequest_VmId, type: string}
      type: object
    CreateImageResponse:
      properties:
        Image: {$ref: '#/components/schemas/Image'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateInternetServiceRequest:
      properties:
        DryRun: {description: CreateInternetServiceRequest_DryRun, type: boolean}
      type: object
    CreateInternetServiceResponse:
      properties:
        InternetService: {$ref: '#/components/schemas/InternetService'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateKeypairRequest:
      properties:
        DryRun: {description: CreateKeypairRequest_DryRun, type: boolean}
        KeypairName: {description: CreateKeypairRequest_KeypairName, type: string}
        PublicKey: {description: CreateKeypairRequest_PublicKey, type: string}
      required: [KeypairName]
      type: object
    CreateKeypairResponse:
      properties:
        Keypair: {$ref: '#/components/schemas/KeypairCreated'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateListenerRuleRequest:
      properties:
        DryRun: {description: CreateListenerRuleRequest_DryRun, type: boolean}
        Listener: {$ref: '#/components/schemas/LoadBalancerLight'}
        ListenerRule: {$ref: '#/components/schemas/ListenerRuleForCreation'}
        VmIds:
          description: CreateListenerRuleRequest_VmIds
          items: {type: string}
          type: array
      required: [VmIds, Listener, ListenerRule]
      type: object
    CreateListenerRuleResponse:
      properties:
        ListenerRule: {$ref: '#/components/schemas/ListenerRule'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateLoadBalancerListenersRequest:
      properties:
        DryRun: {description: CreateLoadBalancerListenersRequest_DryRun, type: boolean}
        Listeners:
          description: CreateLoadBalancerListenersRequest_Listeners
          items: {$ref: '#/components/schemas/ListenerForCreation'}
          type: array
        LoadBalancerName: {description: CreateLoadBalancerListenersRequest_LoadBalancerName,
          type: string}
      required: [Listeners, LoadBalancerName]
      type: object
    CreateLoadBalancerListenersResponse:
      properties:
        LoadBalancer: {$ref: '#/components/schemas/LoadBalancer'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateLoadBalancerPolicyRequest:
      properties:
        CookieName: {description: CreateLoadBalancerPolicyRequest_CookieName, type: string}
        DryRun: {description: CreateLoadBalancerPolicyRequest_DryRun, type: boolean}
        LoadBalancerName: {description: CreateLoadBalancerPolicyRequest_LoadBalancerName,
          type: string}
        PolicyName: {description: CreateLoadBalancerPolicyRequest_PolicyName, type: string}
        PolicyType: {description: CreateLoadBalancerPolicyRequest_PolicyType, type: string}
      required: [PolicyType, LoadBalancerName, PolicyName]
      type: object
    CreateLoadBalancerPolicyResponse:
      properties:
        LoadBalancer: {$ref: '#/components/schemas/LoadBalancer'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateLoadBalancerRequest:
      properties:
        DryRun: {description: CreateLoadBalancerRequest_DryRun, type: boolean}
        Listeners:
          description: CreateLoadBalancerRequest_Listeners
          items: {$ref: '#/components/schemas/ListenerForCreation'}
          type: array
        LoadBalancerName: {description: CreateLoadBalancerRequest_LoadBalancerName,
          type: string}
        LoadBalancerType: {description: CreateLoadBalancerRequest_LoadBalancerType,
          type: string}
        SecurityGroups:
          description: CreateLoadBalancerRequest_SecurityGroups
          items: {type: string}
          type: array
        Subnets:
          description: CreateLoadBalancerRequest_Subnets
          items: {type: string}
          type: array
        SubregionNames:
          description: CreateLoadBalancerRequest_SubregionNames
          items: {type: string}
          type: array
        Tags:
          description: CreateLoadBalancerRequest_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      required: [Listeners, LoadBalancerName, SubregionNames]
      type: object
    CreateLoadBalancerResponse:
      properties:
        LoadBalancer: {$ref: '#/components/schemas/LoadBalancer'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateNatServiceRequest:
      properties:
        DryRun: {description: CreateNatServiceRequest_DryRun, type: boolean}
        PublicIpId: {description: CreateNatServiceRequest_PublicIpId, type: string}
        SubnetId: {description: CreateNatServiceRequest_SubnetId, type: string}
      required: [PublicIpId, SubnetId]
      type: object
    CreateNatServiceResponse:
      properties:
        NatService: {$ref: '#/components/schemas/NatService'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateNetAccessPointRequest:
      properties:
        DryRun: {description: CreateNetAccessPointRequest_DryRun, type: boolean}
        NetId: {description: CreateNetAccessPointRequest_NetId, type: string}
        RouteTableIds:
          description: CreateNetAccessPointRequest_RouteTableIds
          items: {type: string}
          type: array
        ServiceName: {description: CreateNetAccessPointRequest_ServiceName, type: string}
      required: [ServiceName, NetId]
      type: object
    CreateNetAccessPointResponse:
      properties:
        NetAccessPoint: {$ref: '#/components/schemas/NetAccessPoint'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateNetPeeringRequest:
      properties:
        AccepterNetId: {description: CreateNetPeeringRequest_AccepterNetId, type: string}
        DryRun: {description: CreateNetPeeringRequest_DryRun, type: boolean}
        SourceNetId: {description: CreateNetPeeringRequest_SourceNetId, type: string}
      required: [AccepterNetId, SourceNetId]
      type: object
    CreateNetPeeringResponse:
      properties:
        NetPeering: {$ref: '#/components/schemas/NetPeering'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateNetRequest:
      properties:
        DryRun: {description: CreateNetRequest_DryRun, type: boolean}
        IpRange: {description: CreateNetRequest_IpRange, type: string}
        Tenancy: {description: CreateNetRequest_Tenancy, type: string}
      required: [IpRange]
      type: object
    CreateNetResponse:
      properties:
        Net: {$ref: '#/components/schemas/Net'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateNicRequest:
      properties:
        Description: {description: CreateNicRequest_Description, type: string}
        DryRun: {description: CreateNicRequest_DryRun, type: boolean}
        PrivateIps:
          description: CreateNicRequest_PrivateIps
          items: {$ref: '#/components/schemas/PrivateIpLight'}
          type: array
        SecurityGroupIds:
          description: CreateNicRequest_SecurityGroupIds
          items: {type: string}
          type: array
        SubnetId: {description: CreateNicRequest_SubnetId, type: string}
      required: [SubnetId]
      type: object
    CreateNicResponse:
      properties:
        Nic: {$ref: '#/components/schemas/Nic'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreatePolicyRequest:
      properties:
        Description: {description: CreatePolicyRequest_Description, type: string}
        Document: {description: CreatePolicyRequest_Document, type: string}
        DryRun: {description: CreatePolicyRequest_DryRun, type: boolean}
        Path: {description: CreatePolicyRequest_Path, type: string}
        PolicyName: {description: CreatePolicyRequest_PolicyName, type: string}
      required: [Document, PolicyName]
      type: object
    CreatePolicyResponse:
      properties:
        Policy: {$ref: '#/components/schemas/Policy'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreatePublicIpRequest:
      properties:
        DryRun: {description: CreatePublicIpRequest_DryRun, type: boolean}
      type: object
    CreatePublicIpResponse:
      properties:
        PublicIp: {$ref: '#/components/schemas/PublicIp'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateRouteRequest:
      properties:
        DestinationIpRange: {description: CreateRouteRequest_DestinationIpRange, type: string}
        DryRun: {description: CreateRouteRequest_DryRun, type: boolean}
        GatewayId: {description: CreateRouteRequest_GatewayId, type: string}
        NatServiceId: {description: CreateRouteRequest_NatServiceId, type: string}
        NetPeeringId: {description: CreateRouteRequest_NetPeeringId, type: string}
        NicId: {description: CreateRouteRequest_NicId, type: string}
        RouteTableId: {description: CreateRouteRequest_RouteTableId, type: string}
        VmId: {description: CreateRouteRequest_VmId, type: string}
      required: [DestinationIpRange, RouteTableId]
      type: object
    CreateRouteResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        RouteTable: {$ref: '#/components/schemas/RouteTable'}
      type: object
    CreateRouteTableRequest:
      properties:
        DryRun: {description: CreateRouteTableRequest_DryRun, type: boolean}
        NetId: {description: CreateRouteTableRequest_NetId, type: string}
      required: [NetId]
      type: object
    CreateRouteTableResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        RouteTable: {$ref: '#/components/schemas/RouteTable'}
      type: object
    CreateSecurityGroupRequest:
      properties:
        Description: {description: CreateSecurityGroupRequest_Description, type: string}
        DryRun: {description: CreateSecurityGroupRequest_DryRun, type: boolean}
        NetId: {description: CreateSecurityGroupRequest_NetId, type: string}
        SecurityGroupName: {description: CreateSecurityGroupRequest_SecurityGroupName,
          type: string}
      required: [Description, SecurityGroupName]
      type: object
    CreateSecurityGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        SecurityGroup: {$ref: '#/components/schemas/SecurityGroup'}
      type: object
    CreateSecurityGroupRuleRequest:
      properties:
        DryRun: {description: CreateSecurityGroupRuleRequest_DryRun, type: boolean}
        Flow: {description: CreateSecurityGroupRuleRequest_Flow, type: string}
        FromPortRange: {description: CreateSecurityGroupRuleRequest_FromPortRange,
          type: integer}
        IpProtocol: {description: CreateSecurityGroupRuleRequest_IpProtocol, type: string}
        IpRange: {description: CreateSecurityGroupRuleRequest_IpRange, type: string}
        Rules:
          description: CreateSecurityGroupRuleRequest_Rules
          items: {$ref: '#/components/schemas/SecurityGroupRule'}
          type: array
        SecurityGroupAccountIdToLink: {description: CreateSecurityGroupRuleRequest_SecurityGroupAccountIdToLink,
          type: string}
        SecurityGroupId: {description: CreateSecurityGroupRuleRequest_SecurityGroupId,
          type: string}
        SecurityGroupNameToLink: {description: CreateSecurityGroupRuleRequest_SecurityGroupNameToLink,
          type: string}
        ToPortRange: {description: CreateSecurityGroupRuleRequest_ToPortRange, type: integer}
      required: [SecurityGroupId, Flow]
      type: object
    CreateSecurityGroupRuleResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        SecurityGroup: {$ref: '#/components/schemas/SecurityGroup'}
      type: object
    CreateServerCertificateRequest:
      properties:
        DryRun: {description: CreateServerCertificateRequest_DryRun, type: boolean}
        PrivateKey: {description: CreateServerCertificateRequest_PrivateKey, type: string}
        ServerCertificateBody: {description: CreateServerCertificateRequest_ServerCertificateBody,
          type: string}
        ServerCertificateChain: {description: CreateServerCertificateRequest_ServerCertificateChain,
          type: string}
        ServerCertificateName: {description: CreateServerCertificateRequest_ServerCertificateName,
          type: string}
        ServerCertificatePath: {description: CreateServerCertificateRequest_ServerCertificatePath,
          type: string}
      required: [ServerCertificateBody, PrivateKey, ServerCertificateName]
      type: object
    CreateServerCertificateResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        ServerCertificate: {$ref: '#/components/schemas/ServerCertificate'}
      type: object
    CreateSnapshotExportTaskRequest:
      properties:
        DryRun: {description: CreateSnapshotExportTaskRequest_DryRun, type: boolean}
        OsuExport: {$ref: '#/components/schemas/OsuExport'}
        SnapshotId: {description: CreateSnapshotExportTaskRequest_SnapshotId, type: string}
      required: [OsuExport, SnapshotId]
      type: object
    CreateSnapshotExportTaskResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        SnapshotExportTask: {$ref: '#/components/schemas/SnapshotExportTask'}
      type: object
    CreateSnapshotRequest:
      properties:
        Description: {description: CreateSnapshotRequest_Description, type: string}
        DryRun: {description: CreateSnapshotRequest_DryRun, type: boolean}
        FileLocation: {description: CreateSnapshotRequest_FileLocation, type: string}
        SnapshotSize: {description: CreateSnapshotRequest_SnapshotSize, type: integer}
        SourceRegionName: {description: CreateSnapshotRequest_SourceRegionName, type: string}
        SourceSnapshotId: {description: CreateSnapshotRequest_SourceSnapshotId, type: string}
        VolumeId: {description: CreateSnapshotRequest_VolumeId, type: string}
      type: object
    CreateSnapshotResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Snapshot: {$ref: '#/components/schemas/Snapshot'}
      type: object
    CreateSubnetRequest:
      properties:
        DryRun: {description: CreateSubnetRequest_DryRun, type: boolean}
        IpRange: {description: CreateSubnetRequest_IpRange, type: string}
        NetId: {description: CreateSubnetRequest_NetId, type: string}
        SubregionName: {description: CreateSubnetRequest_SubregionName, type: string}
      required: [IpRange, NetId]
      type: object
    CreateSubnetResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Subnet: {$ref: '#/components/schemas/Subnet'}
      type: object
    CreateTagsRequest:
      properties:
        DryRun: {description: CreateTagsRequest_DryRun, type: boolean}
        ResourceIds:
          description: CreateTagsRequest_ResourceIds
          items: {type: string}
          type: array
        Tags:
          description: CreateTagsRequest_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      required: [ResourceIds, Tags]
      type: object
    CreateTagsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    CreateUserGroupRequest:
      properties:
        DryRun: {description: CreateUserGroupRequest_DryRun, type: boolean}
        Path: {description: CreateUserGroupRequest_Path, type: string}
        UserGroupName: {description: CreateUserGroupRequest_UserGroupName, type: string}
      required: [UserGroupName]
      type: object
    CreateUserGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        UserGroup: {$ref: '#/components/schemas/UserGroup'}
      type: object
    CreateUserRequest:
      properties:
        DryRun: {description: CreateUserRequest_DryRun, type: boolean}
        Path: {description: CreateUserRequest_Path, type: string}
        UserName: {description: CreateUserRequest_UserName, type: string}
      required: [UserName]
      type: object
    CreateUserResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        User: {$ref: '#/components/schemas/User'}
      type: object
    CreateVirtualGatewayRequest:
      properties:
        ConnectionType: {description: CreateVirtualGatewayRequest_ConnectionType,
          type: string}
        DryRun: {description: CreateVirtualGatewayRequest_DryRun, type: boolean}
      required: [ConnectionType]
      type: object
    CreateVirtualGatewayResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VirtualGateway: {$ref: '#/components/schemas/VirtualGateway'}
      type: object
    CreateVmsRequest:
      properties:
        BlockDeviceMappings:
          description: CreateVmsRequest_BlockDeviceMappings
          items: {$ref: '#/components/schemas/BlockDeviceMappingVmCreation'}
          type: array
        BootOnCreation: {description: CreateVmsRequest_BootOnCreation, type: boolean}
        BsuOptimized: {description: CreateVmsRequest_BsuOptimized, type: boolean}
        ClientToken: {description: CreateVmsRequest_ClientToken, type: string}
        DeletionProtection: {description: CreateVmsRequest_DeletionProtection, type: boolean}
        DryRun: {description: CreateVmsRequest_DryRun, type: boolean}
        ImageId: {description: CreateVmsRequest_ImageId, type: string}
        KeypairName: {description: CreateVmsRequest_KeypairName, type: string}
        MaxVmsCount: {description: CreateVmsRequest_MaxVmsCount, type: integer}
        MinVmsCount: {description: CreateVmsRequest_MinVmsCount, type: integer}
        Nics:
          description: CreateVmsRequest_Nics
          items: {$ref: '#/components/schemas/NicForVmCreation'}
          type: array
        Placement: {$ref: '#/components/schemas/Placement'}
        PrivateIps:
          description: CreateVmsRequest_PrivateIps
          items: {type: string}
          type: array
        SecurityGroupIds:
          description: CreateVmsRequest_SecurityGroupIds
          items: {type: string}
          type: array
        SecurityGroups:
          description: CreateVmsRequest_SecurityGroups
          items: {type: string}
          type: array
        SubnetId: {description: CreateVmsRequest_SubnetId, type: string}
        UserData: {description: CreateVmsRequest_UserData, type: string}
        VmInitiatedShutdownBehavior: {description: CreateVmsRequest_VmInitiatedShutdownBehavior,
          type: string}
        VmType: {description: CreateVmsRequest_VmType, type: string}
      required: [ImageId]
      type: object
    CreateVmsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Vms:
          description: CreateVmsResponse_Vms
          items: {$ref: '#/components/schemas/Vm'}
          type: array
      type: object
    CreateVolumeRequest:
      properties:
        DryRun: {description: CreateVolumeRequest_DryRun, type: boolean}
        Iops: {description: CreateVolumeRequest_Iops, type: integer}
        Size: {description: CreateVolumeRequest_Size, type: integer}
        SnapshotId: {description: CreateVolumeRequest_SnapshotId, type: string}
        SubregionName: {description: CreateVolumeRequest_SubregionName, type: string}
        VolumeType: {description: CreateVolumeRequest_VolumeType, type: string}
      required: [SubregionName]
      type: object
    CreateVolumeResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Volume: {$ref: '#/components/schemas/Volume'}
      type: object
    CreateVpnConnectionRequest:
      properties:
        ClientGatewayId: {description: CreateVpnConnectionRequest_ClientGatewayId,
          type: string}
        ConnectionType: {description: CreateVpnConnectionRequest_ConnectionType, type: string}
        DryRun: {description: CreateVpnConnectionRequest_DryRun, type: boolean}
        StaticRoutesOnly: {description: CreateVpnConnectionRequest_StaticRoutesOnly,
          type: boolean}
        VirtualGatewayId: {description: CreateVpnConnectionRequest_VirtualGatewayId,
          type: string}
      required: [ClientGatewayId, ConnectionType, VirtualGatewayId]
      type: object
    CreateVpnConnectionResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VpnConnection: {$ref: '#/components/schemas/VpnConnection'}
      type: object
    CreateVpnConnectionRouteRequest:
      properties:
        DestinationIpRange: {description: CreateVpnConnectionRouteRequest_DestinationIpRange,
          type: string}
        DryRun: {description: CreateVpnConnectionRouteRequest_DryRun, type: boolean}
        VpnConnectionId: {description: CreateVpnConnectionRouteRequest_VpnConnectionId,
          type: string}
      required: [DestinationIpRange, VpnConnectionId]
      type: object
    CreateVpnConnectionRouteResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteApiKeyRequest:
      properties:
        ApiKeyId: {description: DeleteApiKeyRequest_ApiKeyId, type: string}
        DryRun: {description: DeleteApiKeyRequest_DryRun, type: boolean}
      required: [ApiKeyId]
      type: object
    DeleteApiKeyResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteClientGatewayRequest:
      properties:
        ClientGatewayId: {description: DeleteClientGatewayRequest_ClientGatewayId,
          type: string}
        DryRun: {description: DeleteClientGatewayRequest_DryRun, type: boolean}
      required: [ClientGatewayId]
      type: object
    DeleteClientGatewayResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteDhcpOptionsRequest:
      properties:
        DhcpOptionsSetId: {description: DeleteDhcpOptionsRequest_DhcpOptionsSetId,
          type: string}
        DryRun: {description: DeleteDhcpOptionsRequest_DryRun, type: boolean}
      required: [DhcpOptionsSetId]
      type: object
    DeleteDhcpOptionsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteDirectLinkInterfaceRequest:
      properties:
        DirectLinkInterfaceId: {description: DeleteDirectLinkInterfaceRequest_DirectLinkInterfaceId,
          type: string}
        DryRun: {description: DeleteDirectLinkInterfaceRequest_DryRun, type: boolean}
      required: [DirectLinkInterfaceId]
      type: object
    DeleteDirectLinkInterfaceResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteDirectLinkRequest:
      properties:
        DirectLinkId: {description: DeleteDirectLinkRequest_DirectLinkId, type: string}
        DryRun: {description: DeleteDirectLinkRequest_DryRun, type: boolean}
      required: [DirectLinkId]
      type: object
    DeleteDirectLinkResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteExportTaskRequest:
      properties:
        DryRun: {description: DeleteExportTaskRequest_DryRun, type: boolean}
        ExportTaskId: {description: DeleteExportTaskRequest_ExportTaskId, type: string}
      required: [ExportTaskId]
      type: object
    DeleteExportTaskResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteImageRequest:
      properties:
        DryRun: {description: DeleteImageRequest_DryRun, type: boolean}
        ImageId: {description: DeleteImageRequest_ImageId, type: string}
      required: [ImageId]
      type: object
    DeleteImageResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteInternetServiceRequest:
      properties:
        DryRun: {description: DeleteInternetServiceRequest_DryRun, type: boolean}
        InternetServiceId: {description: DeleteInternetServiceRequest_InternetServiceId,
          type: string}
      required: [InternetServiceId]
      type: object
    DeleteInternetServiceResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteKeypairRequest:
      properties:
        DryRun: {description: DeleteKeypairRequest_DryRun, type: boolean}
        KeypairName: {description: DeleteKeypairRequest_KeypairName, type: string}
      required: [KeypairName]
      type: object
    DeleteKeypairResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteListenerRuleRequest:
      properties:
        DryRun: {description: DeleteListenerRuleRequest_DryRun, type: boolean}
        ListenerRuleName: {description: DeleteListenerRuleRequest_ListenerRuleName,
          type: string}
      required: [ListenerRuleName]
      type: object
    DeleteListenerRuleResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteLoadBalancerListenersRequest:
      properties:
        DryRun: {description: DeleteLoadBalancerListenersRequest_DryRun, type: boolean}
        LoadBalancerName: {description: DeleteLoadBalancerListenersRequest_LoadBalancerName,
          type: string}
        LoadBalancerPorts:
          description: DeleteLoadBalancerListenersRequest_LoadBalancerPorts
          items: {type: integer}
          type: array
      required: [LoadBalancerName, LoadBalancerPorts]
      type: object
    DeleteLoadBalancerListenersResponse:
      properties:
        LoadBalancer: {$ref: '#/components/schemas/LoadBalancer'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteLoadBalancerPolicyRequest:
      properties:
        DryRun: {description: DeleteLoadBalancerPolicyRequest_DryRun, type: boolean}
        LoadBalancerName: {description: DeleteLoadBalancerPolicyRequest_LoadBalancerName,
          type: string}
        PolicyName: {description: DeleteLoadBalancerPolicyRequest_PolicyName, type: string}
      required: [LoadBalancerName, PolicyName]
      type: object
    DeleteLoadBalancerPolicyResponse:
      properties:
        LoadBalancer: {$ref: '#/components/schemas/LoadBalancer'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteLoadBalancerRequest:
      properties:
        DryRun: {description: DeleteLoadBalancerRequest_DryRun, type: boolean}
        LoadBalancerName: {description: DeleteLoadBalancerRequest_LoadBalancerName,
          type: string}
      required: [LoadBalancerName]
      type: object
    DeleteLoadBalancerResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteNatServiceRequest:
      properties:
        DryRun: {description: DeleteNatServiceRequest_DryRun, type: boolean}
        NatServiceId: {description: DeleteNatServiceRequest_NatServiceId, type: string}
      required: [NatServiceId]
      type: object
    DeleteNatServiceResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteNetAccessPointRequest:
      properties:
        DryRun: {description: DeleteNetAccessPointRequest_DryRun, type: boolean}
        NetAccessPointId: {description: DeleteNetAccessPointRequest_NetAccessPointId,
          type: string}
      required: [NetAccessPointId]
      type: object
    DeleteNetAccessPointResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteNetPeeringRequest:
      properties:
        DryRun: {description: DeleteNetPeeringRequest_DryRun, type: boolean}
        NetPeeringId: {description: DeleteNetPeeringRequest_NetPeeringId, type: string}
      required: [NetPeeringId]
      type: object
    DeleteNetPeeringResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteNetRequest:
      properties:
        DryRun: {description: DeleteNetRequest_DryRun, type: boolean}
        NetId: {description: DeleteNetRequest_NetId, type: string}
      required: [NetId]
      type: object
    DeleteNetResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteNicRequest:
      properties:
        DryRun: {description: DeleteNicRequest_DryRun, type: boolean}
        NicId: {description: DeleteNicRequest_NicId, type: string}
      required: [NicId]
      type: object
    DeleteNicResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeletePolicyRequest:
      properties:
        DryRun: {description: DeletePolicyRequest_DryRun, type: boolean}
        PolicyId: {description: DeletePolicyRequest_PolicyId, type: string}
      required: [PolicyId]
      type: object
    DeletePolicyResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeletePublicIpRequest:
      properties:
        DryRun: {description: DeletePublicIpRequest_DryRun, type: boolean}
        PublicIp: {description: DeletePublicIpRequest_PublicIp, type: string}
        PublicIpId: {description: DeletePublicIpRequest_PublicIpId, type: string}
      type: object
    DeletePublicIpResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteRouteRequest:
      properties:
        DestinationIpRange: {description: DeleteRouteRequest_DestinationIpRange, type: string}
        DryRun: {description: DeleteRouteRequest_DryRun, type: boolean}
        RouteTableId: {description: DeleteRouteRequest_RouteTableId, type: string}
      required: [RouteTableId, DestinationIpRange]
      type: object
    DeleteRouteResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        RouteTable: {$ref: '#/components/schemas/RouteTable'}
      type: object
    DeleteRouteTableRequest:
      properties:
        DryRun: {description: DeleteRouteTableRequest_DryRun, type: boolean}
        RouteTableId: {description: DeleteRouteTableRequest_RouteTableId, type: string}
      required: [RouteTableId]
      type: object
    DeleteRouteTableResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteSecurityGroupRequest:
      properties:
        DryRun: {description: DeleteSecurityGroupRequest_DryRun, type: boolean}
        SecurityGroupId: {description: DeleteSecurityGroupRequest_SecurityGroupId,
          type: string}
        SecurityGroupName: {description: DeleteSecurityGroupRequest_SecurityGroupName,
          type: string}
      type: object
    DeleteSecurityGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteSecurityGroupRuleRequest:
      properties:
        DryRun: {description: DeleteSecurityGroupRuleRequest_DryRun, type: boolean}
        Flow: {description: DeleteSecurityGroupRuleRequest_Flow, type: string}
        FromPortRange: {description: DeleteSecurityGroupRuleRequest_FromPortRange,
          type: integer}
        IpProtocol: {description: DeleteSecurityGroupRuleRequest_IpProtocol, type: string}
        IpRange: {description: DeleteSecurityGroupRuleRequest_IpRange, type: string}
        Rules:
          description: DeleteSecurityGroupRuleRequest_Rules
          items: {$ref: '#/components/schemas/SecurityGroupRule'}
          type: array
        SecurityGroupAccountIdToUnlink: {description: DeleteSecurityGroupRuleRequest_SecurityGroupAccountIdToUnlink,
          type: string}
        SecurityGroupId: {description: DeleteSecurityGroupRuleRequest_SecurityGroupId,
          type: string}
        SecurityGroupNameToUnlink: {description: DeleteSecurityGroupRuleRequest_SecurityGroupNameToUnlink,
          type: string}
        ToPortRange: {description: DeleteSecurityGroupRuleRequest_ToPortRange, type: integer}
      required: [SecurityGroupId, Flow]
      type: object
    DeleteSecurityGroupRuleResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        SecurityGroup: {$ref: '#/components/schemas/SecurityGroup'}
      type: object
    DeleteServerCertificateRequest:
      properties:
        DryRun: {description: DeleteServerCertificateRequest_DryRun, type: boolean}
        ServerCertificateName: {description: DeleteServerCertificateRequest_ServerCertificateName,
          type: string}
      required: [ServerCertificateName]
      type: object
    DeleteServerCertificateResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteSnapshotRequest:
      properties:
        DryRun: {description: DeleteSnapshotRequest_DryRun, type: boolean}
        SnapshotId: {description: DeleteSnapshotRequest_SnapshotId, type: string}
      required: [SnapshotId]
      type: object
    DeleteSnapshotResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteSubnetRequest:
      properties:
        DryRun: {description: DeleteSubnetRequest_DryRun, type: boolean}
        SubnetId: {description: DeleteSubnetRequest_SubnetId, type: string}
      required: [SubnetId]
      type: object
    DeleteSubnetResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteTagsRequest:
      properties:
        DryRun: {description: DeleteTagsRequest_DryRun, type: boolean}
        ResourceIds:
          description: DeleteTagsRequest_ResourceIds
          items: {type: string}
          type: array
        Tags:
          description: DeleteTagsRequest_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      required: [ResourceIds, Tags]
      type: object
    DeleteTagsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteUserGroupRequest:
      properties:
        DryRun: {description: DeleteUserGroupRequest_DryRun, type: boolean}
        UserGroupName: {description: DeleteUserGroupRequest_UserGroupName, type: string}
      required: [UserGroupName]
      type: object
    DeleteUserGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteUserRequest:
      properties:
        DryRun: {description: DeleteUserRequest_DryRun, type: boolean}
        UserName: {description: DeleteUserRequest_UserName, type: string}
      required: [UserName]
      type: object
    DeleteUserResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteVirtualGatewayRequest:
      properties:
        DryRun: {description: DeleteVirtualGatewayRequest_DryRun, type: boolean}
        VirtualGatewayId: {description: DeleteVirtualGatewayRequest_VirtualGatewayId,
          type: string}
      required: [VirtualGatewayId]
      type: object
    DeleteVirtualGatewayResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteVmsRequest:
      properties:
        DryRun: {description: DeleteVmsRequest_DryRun, type: boolean}
        VmIds:
          description: DeleteVmsRequest_VmIds
          items: {type: string}
          type: array
      required: [VmIds]
      type: object
    DeleteVmsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Vms:
          description: DeleteVmsResponse_Vms
          items: {$ref: '#/components/schemas/VmState'}
          type: array
      type: object
    DeleteVolumeRequest:
      properties:
        DryRun: {description: DeleteVolumeRequest_DryRun, type: boolean}
        VolumeId: {description: DeleteVolumeRequest_VolumeId, type: string}
      required: [VolumeId]
      type: object
    DeleteVolumeResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteVpnConnectionRequest:
      properties:
        DryRun: {description: DeleteVpnConnectionRequest_DryRun, type: boolean}
        VpnConnectionId: {description: DeleteVpnConnectionRequest_VpnConnectionId,
          type: string}
      required: [VpnConnectionId]
      type: object
    DeleteVpnConnectionResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeleteVpnConnectionRouteRequest:
      properties:
        DestinationIpRange: {description: DeleteVpnConnectionRouteRequest_DestinationIpRange,
          type: string}
        DryRun: {description: DeleteVpnConnectionRouteRequest_DryRun, type: boolean}
        VpnConnectionId: {description: DeleteVpnConnectionRouteRequest_VpnConnectionId,
          type: string}
      required: [DestinationIpRange, VpnConnectionId]
      type: object
    DeleteVpnConnectionRouteResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeregisterUserInUserGroupRequest:
      properties:
        DryRun: {description: DeregisterUserInUserGroupRequest_DryRun, type: boolean}
        UserGroupName: {description: DeregisterUserInUserGroupRequest_UserGroupName,
          type: string}
        UserName: {description: DeregisterUserInUserGroupRequest_UserName, type: string}
      required: [UserGroupName, UserName]
      type: object
    DeregisterUserInUserGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DeregisterVmsInLoadBalancerRequest:
      properties:
        BackendVmIds:
          description: DeregisterVmsInLoadBalancerRequest_BackendVmIds
          items: {type: string}
          type: array
        DryRun: {description: DeregisterVmsInLoadBalancerRequest_DryRun, type: boolean}
        LoadBalancerName: {description: DeregisterVmsInLoadBalancerRequest_LoadBalancerName,
          type: string}
      required: [BackendVmIds, LoadBalancerName]
      type: object
    DeregisterVmsInLoadBalancerResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    DhcpOptionsSet:
      description: DhcpOptionsSet
      properties:
        Default: {description: DhcpOptionsSet_Default, type: boolean}
        DhcpOptionsName: {description: DhcpOptionsSet_DhcpOptionsName, type: string}
        DhcpOptionsSetId: {description: DhcpOptionsSet_DhcpOptionsSetId, type: string}
        DomainName: {description: DhcpOptionsSet_DomainName, type: string}
        DomainNameServers:
          description: DhcpOptionsSet_DomainNameServers
          items: {type: string}
          type: array
        NtpServers:
          description: DhcpOptionsSet_NtpServers
          items: {type: string}
          type: array
        Tags:
          description: DhcpOptionsSet_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    DirectLink:
      description: DirectLink
      properties:
        AccountId: {description: DirectLink_AccountId, type: string}
        Bandwidth: {description: DirectLink_Bandwidth, type: string}
        DirectLinkId: {description: DirectLink_DirectLinkId, type: string}
        DirectLinkName: {description: DirectLink_DirectLinkName, type: string}
        Location: {description: DirectLink_Location, type: string}
        RegionName: {description: DirectLink_RegionName, type: string}
        State: {description: DirectLink_State, type: string}
      type: object
    DirectLinkInterface:
      description: DirectLinkInterface
      properties:
        BgpAsn: {description: DirectLinkInterface_BgpAsn, type: integer}
        BgpKey: {description: DirectLinkInterface_BgpKey, type: string}
        ClientPrivateIp: {description: DirectLinkInterface_ClientPrivateIp, type: string}
        DirectLinkInterfaceName: {description: DirectLinkInterface_DirectLinkInterfaceName,
          type: string}
        OutscalePrivateIp: {description: DirectLinkInterface_OutscalePrivateIp, type: string}
        VirtualGatewayId: {description: DirectLinkInterface_VirtualGatewayId, type: string}
        Vlan: {description: DirectLinkInterface_Vlan, type: integer}
      required: [BgpAsn, DirectLinkInterfaceName, VirtualGatewayId, Vlan]
      type: object
    DirectLinkInterfaces:
      description: DirectLinkInterfaces
      properties:
        AccountId: {description: DirectLinkInterfaces_AccountId, type: string}
        BgpAsn: {description: DirectLinkInterfaces_BgpAsn, type: integer}
        BgpKey: {description: DirectLinkInterfaces_BgpKey, type: string}
        ClientPrivateIp: {description: DirectLinkInterfaces_ClientPrivateIp, type: string}
        DirectLinkId: {description: DirectLinkInterfaces_DirectLinkId, type: string}
        DirectLinkInterfaceId: {description: DirectLinkInterfaces_DirectLinkInterfaceId,
          type: string}
        DirectLinkInterfaceName: {description: DirectLinkInterfaces_DirectLinkInterfaceName,
          type: string}
        InterfaceType: {description: DirectLinkInterfaces_InterfaceType, type: string}
        Location: {description: DirectLinkInterfaces_Location, type: string}
        OutscalePrivateIp: {description: DirectLinkInterfaces_OutscalePrivateIp, type: string}
        State: {description: DirectLinkInterfaces_State, type: string}
        VirtualGatewayId: {description: DirectLinkInterfaces_VirtualGatewayId, type: string}
        Vlan: {description: DirectLinkInterfaces_Vlan, type: integer}
      type: object
    ErrorResponse:
      properties:
        Errors:
          description: ErrorResponse_Errors
          items: {$ref: '#/components/schemas/Errors'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
    Errors:
      description: Errors
      properties:
        Code: {description: Errors_Code, type: string}
        Details: {description: Errors_Details, type: string}
        Type: {description: Errors_Type, type: string}
      type: object
    FiltersApiLog:
      description: FiltersApiLog
      properties:
        QueryAccessKeys:
          description: FiltersApiLog_QueryAccessKeys
          items: {type: string}
          type: array
        QueryApiNames:
          description: FiltersApiLog_QueryApiNames
          items: {type: string}
          type: array
        QueryCallNames:
          description: FiltersApiLog_QueryCallNames
          items: {type: string}
          type: array
        QueryDateAfter: {description: FiltersApiLog_QueryDateAfter, format: date,
          type: string}
        QueryDateBefore: {description: FiltersApiLog_QueryDateBefore, format: date,
          type: string}
        QueryIpAddresses:
          description: FiltersApiLog_QueryIpAddresses
          items: {type: string}
          type: array
        QueryUserAgents:
          description: FiltersApiLog_QueryUserAgents
          items: {type: string}
          type: array
        RequestIds:
          description: FiltersApiLog_RequestIds
          items: {type: string}
          type: array
        ResponseStatusCodes:
          description: FiltersApiLog_ResponseStatusCodes
          items: {type: integer}
          type: array
      type: object
    FiltersClientGateway:
      description: FiltersClientGateway
      properties:
        BgpAsns:
          description: FiltersClientGateway_BgpAsns
          items: {type: integer}
          type: array
        ClientGatewayIds:
          description: FiltersClientGateway_ClientGatewayIds
          items: {type: string}
          type: array
        ConnectionTypes:
          description: FiltersClientGateway_ConnectionTypes
          items: {type: string}
          type: array
        PublicIps:
          description: FiltersClientGateway_PublicIps
          items: {type: string}
          type: array
        States:
          description: FiltersClientGateway_States
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersClientGateway_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersClientGateway_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersClientGateway_Tags
          items: {type: string}
          type: array
      type: object
    FiltersDhcpOptions:
      description: FiltersDhcpOptions
      properties:
        Default: {description: FiltersDhcpOptions_Default, type: boolean}
        DhcpOptionsSetIds:
          description: FiltersDhcpOptions_DhcpOptionsSetIds
          items: {type: string}
          type: array
        DomainNameServers:
          description: FiltersDhcpOptions_DomainNameServers
          items: {type: string}
          type: array
        DomainNames:
          description: FiltersDhcpOptions_DomainNames
          items: {type: string}
          type: array
        NtpServers:
          description: FiltersDhcpOptions_NtpServers
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersDhcpOptions_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersDhcpOptions_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersDhcpOptions_Tags
          items: {type: string}
          type: array
      type: object
    FiltersDirectLink:
      description: FiltersDirectLink
      properties:
        DirectLinkIds:
          description: FiltersDirectLink_DirectLinkIds
          items: {type: string}
          type: array
      type: object
    FiltersDirectLinkInterface:
      description: FiltersDirectLinkInterface
      properties:
        DirectLinkIds:
          description: FiltersDirectLinkInterface_DirectLinkIds
          items: {type: string}
          type: array
        DirectLinkInterfaceIds:
          description: FiltersDirectLinkInterface_DirectLinkInterfaceIds
          items: {type: string}
          type: array
      type: object
    FiltersExportTask:
      description: FiltersExportTask
      properties:
        TaskIds:
          description: FiltersExportTask_TaskIds
          items: {type: string}
          type: array
      type: object
    FiltersImage:
      description: FiltersImage
      properties:
        AccountAliases:
          description: FiltersImage_AccountAliases
          items: {type: string}
          type: array
        AccountIds:
          description: FiltersImage_AccountIds
          items: {type: string}
          type: array
        Architectures:
          description: FiltersImage_Architectures
          items: {type: string}
          type: array
        BlockDeviceMappingDeleteOnVmDeletion: {description: FiltersImage_BlockDeviceMappingDeleteOnVmDeletion,
          type: boolean}
        BlockDeviceMappingDeviceNames:
          description: FiltersImage_BlockDeviceMappingDeviceNames
          items: {type: string}
          type: array
        BlockDeviceMappingSnapshotIds:
          description: FiltersImage_BlockDeviceMappingSnapshotIds
          items: {type: string}
          type: array
        BlockDeviceMappingVolumeSizes:
          description: FiltersImage_BlockDeviceMappingVolumeSizes
          items: {type: integer}
          type: array
        BlockDeviceMappingVolumeTypes:
          description: FiltersImage_BlockDeviceMappingVolumeTypes
          items: {type: string}
          type: array
        Descriptions:
          description: FiltersImage_Descriptions
          items: {type: string}
          type: array
        FileLocations:
          description: FiltersImage_FileLocations
          items: {type: string}
          type: array
        Hypervisors:
          description: FiltersImage_Hypervisors
          items: {type: string}
          type: array
        ImageIds:
          description: FiltersImage_ImageIds
          items: {type: string}
          type: array
        ImageNames:
          description: FiltersImage_ImageNames
          items: {type: string}
          type: array
        ImageTypes:
          description: FiltersImage_ImageTypes
          items: {type: string}
          type: array
        KernelIds:
          description: FiltersImage_KernelIds
          items: {type: string}
          type: array
        PermissionsToLaunchAccountIds:
          description: FiltersImage_PermissionsToLaunchAccountIds
          items: {type: string}
          type: array
        PermissionsToLaunchGlobalPermission: {description: FiltersImage_PermissionsToLaunchGlobalPermission,
          type: boolean}
        ProductCodes:
          description: FiltersImage_ProductCodes
          items: {type: string}
          type: array
        RamDiskIds:
          description: FiltersImage_RamDiskIds
          items: {type: string}
          type: array
        RootDeviceNames:
          description: FiltersImage_RootDeviceNames
          items: {type: string}
          type: array
        RootDeviceTypes:
          description: FiltersImage_RootDeviceTypes
          items: {type: string}
          type: array
        States:
          description: FiltersImage_States
          items: {type: string}
          type: array
        Systems:
          description: FiltersImage_System
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersImage_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersImage_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersImage_Tags
          items: {type: string}
          type: array
        VirtualizationTypes:
          description: FiltersImage_VirtualizationTypes
          items: {type: string}
          type: array
      type: object
    FiltersInternetService:
      description: FiltersInternetService
      properties:
        InternetServiceIds:
          description: FiltersInternetService_InternetServiceIds
          items: {type: string}
          type: array
        LinkNetIds:
          description: FiltersInternetService_LinkNetIds
          items: {type: string}
          type: array
        LinkStates:
          description: FiltersInternetService_LinkStates
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersInternetService_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersInternetService_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersInternetService_Tags
          items: {type: string}
          type: array
      type: object
    FiltersKeypair:
      description: FiltersKeypair
      properties:
        KeypairFingerprints:
          description: FiltersKeypair_KeypairFingerprints
          items: {type: string}
          type: array
        KeypairNames:
          description: FiltersKeypair_KeypairNames
          items: {type: string}
          type: array
      type: object
    FiltersListenerRule:
      description: FiltersListenerRule
      properties:
        ListenerRuleNames:
          description: FiltersListenerRule_ListenerRuleNames
          items: {type: string}
          type: array
      type: object
    FiltersLoadBalancer:
      description: FiltersLoadBalancer
      properties:
        LoadBalancerNames:
          description: FiltersLoadBalancer_LoadBalancerNames
          items: {type: string}
          type: array
      type: object
    FiltersNatService:
      description: FiltersNatService
      properties:
        NatServiceIds:
          description: FiltersNatService_NatServiceIds
          items: {type: string}
          type: array
        NetIds:
          description: FiltersNatService_NetIds
          items: {type: string}
          type: array
        States:
          description: FiltersNatService_States
          items: {type: string}
          type: array
        SubnetIds:
          description: FiltersNatService_SubnetIds
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersNatService_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersNatService_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersNatService_Tags
          items: {type: string}
          type: array
      type: object
    FiltersNet:
      description: FiltersNet
      properties:
        DhcpOptionsSetIds:
          description: FiltersNet_DhcpOptionsSetIds
          items: {type: string}
          type: array
        IpRanges:
          description: FiltersNet_IpRanges
          items: {type: string}
          type: array
        IsDefault: {description: FiltersNet_IsDefault, type: boolean}
        NetIds:
          description: FiltersNet_NetIds
          items: {type: string}
          type: array
        States:
          description: FiltersNet_States
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersNet_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersNet_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersNet_Tags
          items: {type: string}
          type: array
      type: object
    FiltersNetAccessPoint:
      description: FiltersNetAccessPoint
      properties:
        NetAccessPointIds:
          description: FiltersNetAccessPoint_NetAccessPointIds
          items: {type: string}
          type: array
        NetIds:
          description: FiltersNetAccessPoint_NetIds
          items: {type: string}
          type: array
        ServiceNames:
          description: FiltersNetAccessPoint_ServiceNames
          items: {type: string}
          type: array
        States:
          description: FiltersNetAccessPoint_States
          items: {type: string}
          type: array
      type: object
    FiltersNetPeering:
      description: FiltersNetPeering
      properties:
        AccepterNetAccountIds:
          description: FiltersNetPeering_AccepterNetAccountIds
          items: {type: string}
          type: array
        AccepterNetIpRanges:
          description: FiltersNetPeering_AccepterNetIpRanges
          items: {type: string}
          type: array
        AccepterNetNetIds:
          description: FiltersNetPeering_AccepterNetNetIds
          items: {type: string}
          type: array
        NetPeeringIds:
          description: FiltersNetPeering_NetPeeringIds
          items: {type: string}
          type: array
        SourceNetAccountIds:
          description: FiltersNetPeering_SourceNetAccountIds
          items: {type: string}
          type: array
        SourceNetIpRanges:
          description: FiltersNetPeering_SourceNetIpRanges
          items: {type: string}
          type: array
        SourceNetNetIds:
          description: FiltersNetPeering_SourceNetNetIds
          items: {type: string}
          type: array
        StateMessages:
          description: FiltersNetPeering_StateMessages
          items: {type: string}
          type: array
        StateNames:
          description: FiltersNetPeering_StateNames
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersNetPeering_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersNetPeering_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersNetPeering_Tags
          items: {type: string}
          type: array
      type: object
    FiltersNic:
      description: FiltersNic
      properties:
        AccountIds:
          description: FiltersNic_AccountIds
          items: {type: string}
          type: array
        ActivatedChecks:
          description: FiltersNic_ActivatedChecks
          items: {type: string}
          type: array
        Descriptions:
          description: FiltersNic_Descriptions
          items: {type: string}
          type: array
        LinkNicDeleteOnVmDeletion: {description: FiltersNic_LinkNicDeleteOnVmDeletion,
          type: boolean}
        LinkNicLinkDates:
          description: FiltersNic_LinkNicLinkDates
          items: {format: date, type: string}
          type: array
        LinkNicLinkNicIds:
          description: FiltersNic_LinkNicLinkNicIds
          items: {type: string}
          type: array
        LinkNicSortNumbers:
          description: FiltersNic_LinkNicSortNumbers
          items: {type: integer}
          type: array
        LinkNicStates:
          description: FiltersNic_LinkNicStates
          items: {type: string}
          type: array
        LinkNicVmAccountIds:
          description: FiltersNic_LinkNicVmAccountIds
          items: {type: string}
          type: array
        LinkNicVmIds:
          description: FiltersNic_LinkNicVmIds
          items: {type: string}
          type: array
        LinkPublicIpAccountIds:
          description: FiltersNic_LinkPublicIpAccountIds
          items: {type: string}
          type: array
        LinkPublicIpLinkPublicIpIds:
          description: FiltersNic_LinkPublicIpLinkPublicIpIds
          items: {type: string}
          type: array
        LinkPublicIpPublicIpIds:
          description: FiltersNic_LinkPublicIpPublicIpIds
          items: {type: string}
          type: array
        LinkPublicIpPublicIps:
          description: FiltersNic_LinkPublicIpPublicIps
          items: {type: string}
          type: array
        MacAddresses:
          description: FiltersNic_MacAddresses
          items: {type: string}
          type: array
        NetIds:
          description: FiltersNic_NetIds
          items: {type: string}
          type: array
        NicIds:
          description: FiltersNic_NicIds
          items: {type: string}
          type: array
        PrivateDnsNames:
          description: FiltersNic_PrivateDnsNames
          items: {type: string}
          type: array
        PrivateIpsLinkPublicIpAccountIds:
          description: FiltersNic_PrivateIpsLinkPublicIpAccountIds
          items: {type: string}
          type: array
        PrivateIpsLinkPublicIpPublicIps:
          description: FiltersNic_PrivateIpsLinkPublicIpPublicIps
          items: {type: string}
          type: array
        PrivateIpsPrimaryIp: {description: FiltersNic_PrivateIpsPrimaryIp, type: boolean}
        PrivateIpsPrivateIps:
          description: FiltersNic_PrivateIpsPrivateIps
          items: {type: string}
          type: array
        SecurityGroupIds:
          description: FiltersNic_SecurityGroupIds
          items: {type: string}
          type: array
        SecurityGroupNames:
          description: FiltersNic_SecurityGroupNames
          items: {type: string}
          type: array
        States:
          description: FiltersNic_States
          items: {type: string}
          type: array
        SubnetIds:
          description: FiltersNic_SubnetIds
          items: {type: string}
          type: array
        SubregionNames:
          description: FiltersNic_SubregionNames
          items: {type: string}
          type: array
      type: object
    FiltersOldFormat:
      description: FiltersOldFormat
      properties:
        Name: {description: FiltersOldFormat_Name, type: string}
        Values:
          description: FiltersOldFormat_Values
          items: {type: string}
          type: array
      type: object
    FiltersProductType:
      description: FiltersProductType
      properties:
        ProductTypeIds:
          description: FiltersProductType_ProductTypeIds
          items: {type: string}
          type: array
      type: object
    FiltersPublicIp:
      description: FiltersPublicIp
      properties:
        LinkPublicIpIds:
          description: FiltersPublicIp_LinkPublicIpIds
          items: {type: string}
          type: array
        NicAccountIds:
          description: FiltersPublicIp_NicAccountIds
          items: {type: string}
          type: array
        NicIds:
          description: FiltersPublicIp_NicIds
          items: {type: string}
          type: array
        Placements:
          description: FiltersPublicIp_Placements
          items: {type: string}
          type: array
        PrivateIps:
          description: FiltersPublicIp_PrivateIps
          items: {type: string}
          type: array
        PublicIpIds:
          description: FiltersPublicIp_PublicIpIds
          items: {type: string}
          type: array
        PublicIps:
          description: FiltersPublicIp_PublicIps
          items: {type: string}
          type: array
        VmIds:
          description: FiltersPublicIp_VmIds
          items: {type: string}
          type: array
      type: object
    FiltersQuota:
      description: FiltersQuota
      properties:
        Collections:
          description: FiltersQuota_Collections
          items: {type: string}
          type: array
        QuotaNames:
          description: FiltersQuota_QuotaNames
          items: {type: string}
          type: array
        QuotaTypes:
          description: FiltersQuota_QuotaTypes
          items: {type: string}
          type: array
        ShortDescriptions:
          description: FiltersQuota_ShortDescriptions
          items: {type: string}
          type: array
      type: object
    FiltersRegion:
      description: FiltersRegion
      properties:
        Endpoints:
          description: FiltersRegion_Endpoints
          items: {type: string}
          type: array
        RegionNames:
          description: FiltersRegion_RegionNames
          items: {type: string}
          type: array
      type: object
    FiltersRegionServices:
      description: FiltersRegionServices
      properties:
        Attributes:
          description: FiltersRegionServices_Attributes
          items: {$ref: '#/components/schemas/Attribute'}
          type: array
        Endpoint: {description: FiltersRegionServices_Endpoint, type: string}
        Schema: {description: FiltersRegionServices_Schema, type: string}
        ServiceName: {description: FiltersRegionServices_ServiceName, type: string}
      type: object
    FiltersRouteTable:
      description: FiltersRouteTable
      properties:
        LinkRouteTableIds:
          description: FiltersRouteTable_LinkRouteTableIds
          items: {type: string}
          type: array
        LinkRouteTableLinkRouteTableIds:
          description: FiltersRouteTable_LinkRouteTableLinkRouteTableIds
          items: {type: string}
          type: array
        LinkRouteTableMain: {description: FiltersRouteTable_LinkRouteTableMain, type: boolean}
        LinkSubnetIds:
          description: FiltersRouteTable_LinkSubnetIds
          items: {type: string}
          type: array
        NetIds:
          description: FiltersRouteTable_NetIds
          items: {type: string}
          type: array
        RouteCreationMethods:
          description: FiltersRouteTable_RouteCreationMethods
          items: {type: string}
          type: array
        RouteDestinationIpRanges:
          description: FiltersRouteTable_RouteDestinationIpRanges
          items: {type: string}
          type: array
        RouteDestinationServiceIds:
          description: FiltersRouteTable_RouteDestinationServiceIds
          items: {type: string}
          type: array
        RouteGatewayIds:
          description: FiltersRouteTable_RouteGatewayIds
          items: {type: string}
          type: array
        RouteNatServiceIds:
          description: FiltersRouteTable_RouteNatServiceIds
          items: {type: string}
          type: array
        RouteNetPeeringIds:
          description: FiltersRouteTable_RouteNetPeeringIds
          items: {type: string}
          type: array
        RouteStates:
          description: FiltersRouteTable_RouteStates
          items: {type: string}
          type: array
        RouteTableIds:
          description: FiltersRouteTable_RouteTableIds
          items: {type: string}
          type: array
        RouteVmIds:
          description: FiltersRouteTable_RouteVmIds
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersRouteTable_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersRouteTable_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersRouteTable_Tags
          items: {type: string}
          type: array
      type: object
    FiltersSecurityGroup:
      description: FiltersSecurityGroup
      properties:
        AccountIds:
          description: FiltersSecurityGroup_AccountIds
          items: {type: string}
          type: array
        Descriptions:
          description: FiltersSecurityGroup_Descriptions
          items: {type: string}
          type: array
        InboundRuleAccountIds:
          description: FiltersSecurityGroup_InboundRuleAccountIds
          items: {type: string}
          type: array
        InboundRuleFromPortRanges:
          description: FiltersSecurityGroup_InboundRuleFromPortRanges
          items: {type: integer}
          type: array
        InboundRuleIpRanges:
          description: FiltersSecurityGroup_InboundRuleIpRanges
          items: {type: string}
          type: array
        InboundRuleProtocols:
          description: FiltersSecurityGroup_InboundRuleProtocols
          items: {type: string}
          type: array
        InboundRuleSecurityGroupIds:
          description: FiltersSecurityGroup_InboundRuleSecurityGroupIds
          items: {type: string}
          type: array
        InboundRuleSecurityGroupNames:
          description: FiltersSecurityGroup_InboundRuleSecurityGroupNames
          items: {type: string}
          type: array
        InboundRuleToPortRanges:
          description: FiltersSecurityGroup_InboundRuleToPortRanges
          items: {type: integer}
          type: array
        NetIds:
          description: FiltersSecurityGroup_NetIds
          items: {type: string}
          type: array
        OutboundRuleAccountIds:
          description: FiltersSecurityGroup_OutboundRuleAccountIds
          items: {type: string}
          type: array
        OutboundRuleFromPortRanges:
          description: FiltersSecurityGroup_OutboundRuleFromPortRanges
          items: {type: integer}
          type: array
        OutboundRuleIpRanges:
          description: FiltersSecurityGroup_OutboundRuleIpRanges
          items: {type: string}
          type: array
        OutboundRuleProtocols:
          description: FiltersSecurityGroup_OutboundRuleProtocols
          items: {type: string}
          type: array
        OutboundRuleSecurityGroupIds:
          description: FiltersSecurityGroup_OutboundRuleSecurityGroupIds
          items: {type: string}
          type: array
        OutboundRuleSecurityGroupNames:
          description: FiltersSecurityGroup_OutboundRuleSecurityGroupNames
          items: {type: string}
          type: array
        OutboundRuleToPortRanges:
          description: FiltersSecurityGroup_OutboundRuleToPortRanges
          items: {type: integer}
          type: array
        SecurityGroupIds:
          description: FiltersSecurityGroup_SecurityGroupIds
          items: {type: string}
          type: array
        SecurityGroupNames:
          description: FiltersSecurityGroup_SecurityGroupNames
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersSecurityGroup_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersSecurityGroup_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersSecurityGroup_Tags
          items: {type: string}
          type: array
      type: object
    FiltersService:
      description: FiltersService
      properties:
        ServiceIds:
          description: FiltersService_ServiceIds
          items: {type: string}
          type: array
        ServiceNames:
          description: FiltersService_ServiceNames
          items: {type: string}
          type: array
      type: object
    FiltersSnapshot:
      description: FiltersSnapshot
      properties:
        AccountAliases:
          description: FiltersSnapshot_AccountAliases
          items: {type: string}
          type: array
        AccountIds:
          description: FiltersSnapshot_AccountIds
          items: {type: string}
          type: array
        Descriptions:
          description: FiltersSnapshot_Descriptions
          items: {type: string}
          type: array
        PermissionsToCreateVolumeAccountIds:
          description: FiltersSnapshot_PermissionsToCreateVolumeAccountIds
          items: {type: string}
          type: array
        PermissionsToCreateVolumeGlobalPermission: {description: FiltersSnapshot_PermissionsToCreateVolumeGlobalPermission,
          type: boolean}
        Progresses:
          description: FiltersSnapshot_Progresses
          items: {type: integer}
          type: array
        SnapshotIds:
          description: FiltersSnapshot_SnapshotIds
          items: {type: string}
          type: array
        States:
          description: FiltersSnapshot_States
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersSnapshot_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersSnapshot_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersSnapshot_Tags
          items: {type: string}
          type: array
        VolumeIds:
          description: FiltersSnapshot_VolumeIds
          items: {type: string}
          type: array
        VolumeSizes:
          description: FiltersSnapshot_VolumeSizes
          items: {type: integer}
          type: array
      type: object
    FiltersSubnet:
      description: FiltersSubnet
      properties:
        AvailableIpsCounts:
          description: FiltersSubnet_AvailableIpsCounts
          items: {type: integer}
          type: array
        IpRanges:
          description: FiltersSubnet_IpRanges
          items: {type: string}
          type: array
        NetIds:
          description: FiltersSubnet_NetIds
          items: {type: string}
          type: array
        States:
          description: FiltersSubnet_States
          items: {type: string}
          type: array
        SubnetIds:
          description: FiltersSubnet_SubnetIds
          items: {type: string}
          type: array
        SubregionNames:
          description: FiltersSubnet_SubregionNames
          items: {type: string}
          type: array
      type: object
    FiltersSubregion:
      description: FiltersSubregion
      properties:
        SubregionNames:
          description: FiltersSubregion_SubregionNames
          items: {type: string}
          type: array
      type: object
    FiltersTag:
      description: FiltersTag
      properties:
        Keys:
          description: FiltersTag_Keys
          items: {type: string}
          type: array
        ResourceIds:
          description: FiltersTag_ResourceIds
          items: {type: string}
          type: array
        ResourceTypes:
          description: FiltersTag_ResourceTypes
          items: {type: string}
          type: array
        Values:
          description: FiltersTag_Values
          items: {type: string}
          type: array
      type: object
    FiltersUserGroup:
      description: FiltersUserGroup
      properties:
        Paths:
          description: FiltersUserGroup_Paths
          items: {type: string}
          type: array
        UserNames:
          description: FiltersUserGroup_UserNames
          items: {type: string}
          type: array
      type: object
    FiltersVirtualGateway:
      description: FiltersVirtualGateway
      properties:
        ConnectionTypes:
          description: FiltersVirtualGateway_ConnectionTypes
          items: {type: string}
          type: array
        LinkNetIds:
          description: FiltersVirtualGateway_LinkNetIds
          items: {type: string}
          type: array
        LinkStates:
          description: FiltersVirtualGateway_LinkStates
          items: {type: string}
          type: array
        States:
          description: FiltersVirtualGateway_States
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersVirtualGateway_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersVirtualGateway_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersVirtualGateway_Tags
          items: {type: string}
          type: array
        VirtualGatewayIds:
          description: FiltersVirtualGateway_VirtualGatewayIds
          items: {type: string}
          type: array
      type: object
    FiltersVm:
      description: FiltersVm
      properties:
        AccountIds:
          description: FiltersVm_AccountIds
          items: {type: string}
          type: array
        ActivatedCheck: {description: FiltersVm_ActivatedCheck, type: boolean}
        Architectures:
          description: FiltersVm_Architectures
          items: {type: string}
          type: array
        BlockDeviceMappingDeleteOnVmDeletion: {description: FiltersVm_BlockDeviceMappingDeleteOnVmDeletion,
          type: boolean}
        BlockDeviceMappingDeviceNames:
          description: FiltersVm_BlockDeviceMappingDeviceNames
          items: {type: string}
          type: array
        BlockDeviceMappingLinkDates:
          description: FiltersVm_BlockDeviceMappingLinkDates
          items: {format: date, type: string}
          type: array
        BlockDeviceMappingStates:
          description: FiltersVm_BlockDeviceMappingStates
          items: {type: string}
          type: array
        BlockDeviceMappingVolumeIds:
          description: FiltersVm_BlockDeviceMappingVolumeIds
          items: {type: string}
          type: array
        Comments:
          description: FiltersVm_Comments
          items: {type: string}
          type: array
        CreationDates:
          description: FiltersVm_CreationDates
          items: {format: date, type: string}
          type: array
        DnsNames:
          description: FiltersVm_DnsNames
          items: {type: string}
          type: array
        Hypervisors:
          description: FiltersVm_Hypervisors
          items: {type: string}
          type: array
        ImageIds:
          description: FiltersVm_ImageIds
          items: {type: string}
          type: array
        KernelIds:
          description: FiltersVm_KernelIds
          items: {type: string}
          type: array
        KeypairNames:
          description: FiltersVm_KeypairNames
          items: {type: string}
          type: array
        LaunchSortNumbers:
          description: FiltersVm_LaunchSortNumbers
          items: {type: integer}
          type: array
        LinkNicDeleteOnVmDeletion: {description: FiltersVm_LinkNicDeleteOnVmDeletion,
          type: boolean}
        LinkNicLinkDates:
          description: FiltersVm_LinkNicLinkDates
          items: {format: date, type: string}
          type: array
        LinkNicLinkNicIds:
          description: FiltersVm_LinkNicLinkNicIds
          items: {type: string}
          type: array
        LinkNicLinkPublicIpIds:
          description: FiltersVm_LinkNicLinkPublicIpIds
          items: {type: string}
          type: array
        LinkNicNicIds:
          description: FiltersVm_LinkNicNicIds
          items: {type: string}
          type: array
        LinkNicNicSortNumbers:
          description: FiltersVm_LinkNicNicSortNumbers
          items: {type: integer}
          type: array
        LinkNicPublicIpAccountIds:
          description: FiltersVm_LinkNicPublicIpAccountIds
          items: {type: string}
          type: array
        LinkNicPublicIpIds:
          description: FiltersVm_LinkNicPublicIpIds
          items: {type: string}
          type: array
        LinkNicPublicIps:
          description: FiltersVm_LinkNicPublicIps
          items: {type: string}
          type: array
        LinkNicStates:
          description: FiltersVm_LinkNicStates
          items: {type: string}
          type: array
        LinkNicVmAccountIds:
          description: FiltersVm_LinkNicVmAccountIds
          items: {type: string}
          type: array
        LinkNicVmIds:
          description: FiltersVm_LinkNicVmIds
          items: {type: string}
          type: array
        MonitoringStates:
          description: FiltersVm_MonitoringStates
          items: {type: string}
          type: array
        NetIds:
          description: FiltersVm_NetIds
          items: {type: string}
          type: array
        NicAccountIds:
          description: FiltersVm_NicAccountIds
          items: {type: string}
          type: array
        NicActivatedCheck: {description: FiltersVm_NicActivatedCheck, type: boolean}
        NicDescriptions:
          description: FiltersVm_NicDescriptions
          items: {type: string}
          type: array
        NicMacAddresses:
          description: FiltersVm_NicMacAddresses
          items: {type: string}
          type: array
        NicNetIds:
          description: FiltersVm_NicNetIds
          items: {type: string}
          type: array
        NicNicIds:
          description: FiltersVm_NicNicIds
          items: {type: string}
          type: array
        NicPrivateDnsNames:
          description: FiltersVm_NicPrivateDnsNames
          items: {type: string}
          type: array
        NicSecurityGroupIds:
          description: FiltersVm_NicSecurityGroupIds
          items: {type: string}
          type: array
        NicSecurityGroupNames:
          description: FiltersVm_NicSecurityGroupNames
          items: {type: string}
          type: array
        NicStates:
          description: FiltersVm_NicStates
          items: {type: string}
          type: array
        NicSubnetIds:
          description: FiltersVm_NicSubnetIds
          items: {type: string}
          type: array
        NicSubregionNames:
          description: FiltersVm_NicSubregionNames
          items: {type: string}
          type: array
        PlacementGroups:
          description: FiltersVm_PlacementGroups
          items: {type: string}
          type: array
        PrivateDnsNames:
          description: FiltersVm_PrivateDnsNames
          items: {type: string}
          type: array
        PrivateIpLinkPrivateIpAccountIds:
          description: FiltersVm_PrivateIpLinkPrivateIpAccountIds
          items: {type: string}
          type: array
        PrivateIpLinkPublicIps:
          description: FiltersVm_PrivateIpLinkPublicIps
          items: {type: string}
          type: array
        PrivateIpPrimaryIps:
          description: FiltersVm_PrivateIpPrimaryIps
          items: {type: string}
          type: array
        PrivateIpPrivateIps:
          description: FiltersVm_PrivateIpPrivateIps
          items: {type: string}
          type: array
        PrivateIps:
          description: FiltersVm_PrivateIps
          items: {type: string}
          type: array
        ProductCodes:
          description: FiltersVm_ProductCodes
          items: {type: string}
          type: array
        PublicIps:
          description: FiltersVm_PublicIps
          items: {type: string}
          type: array
        RamDiskIds:
          description: FiltersVm_RamDiskIds
          items: {type: string}
          type: array
        RootDeviceNames:
          description: FiltersVm_RootDeviceNames
          items: {type: string}
          type: array
        RootDeviceTypes:
          description: FiltersVm_RootDeviceTypes
          items: {type: string}
          type: array
        SecurityGroupIds:
          description: FiltersVm_SecurityGroupIds
          items: {type: string}
          type: array
        SecurityGroupNames:
          description: FiltersVm_SecurityGroupNames
          items: {type: string}
          type: array
        SpotVmRequestIds:
          description: FiltersVm_SpotVmRequestIds
          items: {type: string}
          type: array
        SpotVms:
          description: FiltersVm_SpotVms
          items: {type: string}
          type: array
        StateComments:
          description: FiltersVm_StateComments
          items: {type: string}
          type: array
        SubnetIds:
          description: FiltersVm_SubnetIds
          items: {type: string}
          type: array
        SubregionNames:
          description: FiltersVm_SubregionNames
          items: {type: string}
          type: array
        Systems:
          description: FiltersVm_Systems
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersVm_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersVm_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersVm_Tags
          items: {type: string}
          type: array
        Tenancies:
          description: FiltersVm_Tenancies
          items: {type: string}
          type: array
        Tokens:
          description: FiltersVm_Tokens
          items: {type: string}
          type: array
        VirtualizationTypes:
          description: FiltersVm_VirtualizationTypes
          items: {type: string}
          type: array
        VmIds:
          description: FiltersVm_VmIds
          items: {type: string}
          type: array
        VmStates:
          description: FiltersVm_VmStates
          items: {type: string}
          type: array
        VmTypes:
          description: FiltersVm_VmTypes
          items: {type: string}
          type: array
        VmsSecurityGroupIds:
          description: FiltersVm_VmsSecurityGroupIds
          items: {type: string}
          type: array
        VmsSecurityGroupNames:
          description: FiltersVm_VmsSecurityGroupNames
          items: {type: string}
          type: array
      type: object
    FiltersVmType:
      description: FiltersVmType
      properties:
        BsuOptimized: {description: FiltersVmType_BsuOptimized, type: boolean}
        MemorySizes:
          description: FiltersVmType_MemorySizes
          items: {type: integer}
          type: array
        VcoreCounts:
          description: FiltersVmType_VcoreCounts
          items: {type: integer}
          type: array
        VmTypeNames:
          description: FiltersVmType_VmTypeNames
          items: {type: string}
          type: array
        VolumeCounts:
          description: FiltersVmType_VolumeCounts
          items: {type: integer}
          type: array
        VolumeSizes:
          description: FiltersVmType_VolumeSizes
          items: {type: integer}
          type: array
      type: object
    FiltersVmsState:
      description: FiltersVmsState
      properties:
        MaintenanceEventCodes:
          description: FiltersVmsState_MaintenanceEventCodes
          items: {type: string}
          type: array
        MaintenanceEventDescriptions:
          description: FiltersVmsState_MaintenanceEventDescriptions
          items: {type: string}
          type: array
        MaintenanceEventsNotAfter:
          description: FiltersVmsState_MaintenanceEventsNotAfter
          items: {format: date, type: string}
          type: array
        MaintenanceEventsNotBefore:
          description: FiltersVmsState_MaintenanceEventsNotBefore
          items: {format: date, type: string}
          type: array
        SubregionNames:
          description: FiltersVmsState_SubregionNames
          items: {type: string}
          type: array
        VmIds:
          description: FiltersVmsState_VmIds
          items: {type: string}
          type: array
        VmStates:
          description: FiltersVmsState_VmStates
          items: {type: string}
          type: array
      type: object
    FiltersVolume:
      description: FiltersVolume
      properties:
        CreationDates:
          description: FiltersVolume_CreationDates
          items: {format: date, type: string}
          type: array
        LinkVolumeDeleteOnVmDeletion: {description: FiltersVolume_LinkVolumeDeleteOnVmDeletion,
          type: boolean}
        LinkVolumeDeviceNames:
          description: FiltersVolume_LinkVolumeDeviceNames
          items: {type: string}
          type: array
        LinkVolumeLinkDates:
          description: FiltersVolume_LinkVolumeLinkDates
          items: {format: date, type: string}
          type: array
        LinkVolumeLinkStates:
          description: FiltersVolume_LinkVolumeLinkStates
          items: {type: string}
          type: array
        LinkVolumeVmIds:
          description: FiltersVolume_LinkVolumeVmIds
          items: {type: string}
          type: array
        SnapshotIds:
          description: FiltersVolume_SnapshotIds
          items: {type: string}
          type: array
        SubregionNames:
          description: FiltersVolume_SubregionNames
          items: {type: string}
          type: array
        TagKeys:
          description: FiltersVolume_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersVolume_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersVolume_Tags
          items: {type: string}
          type: array
        VolumeIds:
          description: FiltersVolume_VolumeIds
          items: {type: string}
          type: array
        VolumeSizes:
          description: FiltersVolume_VolumeSizes
          items: {type: integer}
          type: array
        VolumeStates:
          description: FiltersVolume_VolumeStates
          items: {type: string}
          type: array
        VolumeTypes:
          description: FiltersVolume_VolumeTypes
          items: {type: string}
          type: array
      type: object
    FiltersVpnConnection:
      description: FiltersVpnConnection
      properties:
        BgpAsns:
          description: FiltersVpnConnection_BgpAsns
          items: {type: integer}
          type: array
        ClientGatewayConfigurations:
          description: FiltersVpnConnection_ClientGatewayConfiguration
          items: {type: string}
          type: array
        ClientGatewayIds:
          description: FiltersVpnConnection_ClientGatewayIds
          items: {type: string}
          type: array
        ConnectionTypes:
          description: FiltersVpnConnection_ConnectionTypes
          items: {type: string}
          type: array
        RouteDestinationIpRanges:
          description: FiltersVpnConnection_RouteDestinationIpRange
          items: {type: string}
          type: array
        States:
          description: FiltersVpnConnection_States
          items: {type: string}
          type: array
        StaticRoutesOnly: {description: FiltersVpnConnection_StaticRoutesOnly, type: boolean}
        TagKeys:
          description: FiltersVpnConnection_TagKeys
          items: {type: string}
          type: array
        TagValues:
          description: FiltersVpnConnection_TagValues
          items: {type: string}
          type: array
        Tags:
          description: FiltersVpnConnection_Tags
          items: {type: string}
          type: array
        VirtualGatewayIds:
          description: FiltersVpnConnection_VirtualGatewayIds
          items: {type: string}
          type: array
        VpnConnectionIds:
          description: FiltersVpnConnection_VpnConnectionIds
          items: {type: string}
          type: array
      type: object
    HealthCheck:
      description: HealthCheck
      properties:
        CheckInterval: {description: HealthCheck_CheckInterval, type: integer}
        HealthyThreshold: {description: HealthCheck_HealthyThreshold, type: integer}
        Path: {description: HealthCheck_Path, type: string}
        Port: {description: HealthCheck_Port, type: integer}
        Protocol: {description: HealthCheck_Protocol, type: string}
        Timeout: {description: HealthCheck_Timeout, type: integer}
        UnhealthyThreshold: {description: HealthCheck_UnhealthyThreshold, type: integer}
      required: [CheckInterval, HealthyThreshold, Path, Port, Protocol, Timeout, UnhealthyThreshold]
      type: object
    Image:
      description: Image
      properties:
        AccountAlias: {description: Image_AccountAlias, type: string}
        AccountId: {description: Image_AccountId, type: string}
        Architecture: {description: Image_Architecture, type: string}
        BlockDeviceMappings:
          description: Image_BlockDeviceMappings
          items: {$ref: '#/components/schemas/BlockDeviceMappingImage'}
          type: array
        CreationDate: {description: Image_CreationDate, format: date, type: string}
        Description: {description: Image_Description, type: string}
        FileLocation: {description: Image_FileLocation, type: string}
        ImageId: {description: Image_ImageId, type: string}
        ImageName: {description: Image_ImageName, type: string}
        ImageType: {description: Image_ImageType, type: string}
        PermissionsToLaunch: {$ref: '#/components/schemas/PermissionsOnResource'}
        ProductCodes:
          description: Image_ProductCodes
          items: {type: string}
          type: array
        RootDeviceName: {description: Image_RootDeviceName, type: string}
        RootDeviceType: {description: Image_RootDeviceType, type: string}
        State: {description: Image_State, type: string}
        StateComment: {$ref: '#/components/schemas/StateComment'}
        Tags:
          description: Image_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    ImageExportTask:
      description: ImageExportTask
      properties:
        Comment: {description: ImageExportTask_Comment, type: string}
        ImageId: {description: ImageExportTask_ImageId, type: string}
        OsuExport: {$ref: '#/components/schemas/OsuExport'}
        Progress: {description: ImageExportTask_Progress, type: integer}
        State: {description: ImageExportTask_State, type: string}
        TaskId: {description: ImageExportTask_TaskId, type: string}
      type: object
    InternetService:
      description: InternetService
      properties:
        InternetServiceId: {description: InternetService_InternetServiceId, type: string}
        NetId: {description: InternetService_NetId, type: string}
        State: {description: InternetService_State, type: string}
        Tags:
          description: InternetService_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    Item:
      description: Item
      properties:
        AccountId: {description: Item_AccountId, type: string}
        Catalog:
          description: Item_Catalog
          items: {$ref: '#/components/schemas/Catalog_0'}
          type: array
        ComsuptionValue: {description: Item_ComsuptionValue, format: float, type: number}
        Entry: {description: Item_Entry, type: string}
        FromDate: {description: Item_FromDate, format: date, type: string}
        PayingAccountId: {description: Item_PayingAccountId, type: string}
        Service: {description: Item_Service, type: string}
        SubregionName: {description: Item_SubregionName, type: string}
        ToDate: {description: Item_ToDate, format: date, type: string}
        Type: {description: Item_Type, type: string}
      type: object
    Keypair:
      description: Keypair
      properties:
        KeypairFingerprint: {description: Keypair_KeypairFingerprint, type: string}
        KeypairName: {description: Keypair_KeypairName, type: string}
      type: object
    KeypairCreated:
      description: KeypairCreated
      properties:
        KeypairFingerprint: {description: KeypairCreated_KeypairFingerprint, type: string}
        KeypairName: {description: KeypairCreated_KeypairName, type: string}
        PrivateKey: {description: KeypairCreated_PrivateKey, type: string}
      type: object
    LinkInternetServiceRequest:
      properties:
        DryRun: {description: LinkInternetServiceRequest_DryRun, type: boolean}
        InternetServiceId: {description: LinkInternetServiceRequest_InternetServiceId,
          type: string}
        NetId: {description: LinkInternetServiceRequest_NetId, type: string}
      required: [InternetServiceId, NetId]
      type: object
    LinkInternetServiceResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkNic:
      description: LinkNic
      properties:
        DeleteOnVmDeletion: {description: LinkNic_DeleteOnVmDeletion, type: boolean}
        DeviceNumber: {description: LinkNic_DeviceNumber, type: integer}
        LinkNicId: {description: LinkNic_LinkNicId, type: string}
        State: {description: LinkNic_State, type: string}
        VmAccountId: {description: LinkNic_VmAccountId, type: string}
        VmId: {description: LinkNic_VmId, type: string}
      type: object
    LinkNicLight:
      description: LinkNicLight
      properties:
        DeleteOnVmDeletion: {description: LinkNicLight_DeleteOnVmDeletion, type: boolean}
        DeviceNumber: {description: LinkNicLight_DeviceNumber, type: integer}
        LinkNicId: {description: LinkNicLight_LinkNicId, type: string}
        State: {description: LinkNicLight_State, type: string}
      type: object
    LinkNicRequest:
      properties:
        DeviceNumber: {description: LinkNicRequest_DeviceNumber, type: integer}
        DryRun: {description: LinkNicRequest_DryRun, type: boolean}
        NicId: {description: LinkNicRequest_NicId, type: string}
        VmId: {description: LinkNicRequest_VmId, type: string}
      required: [DeviceNumber, VmId, NicId]
      type: object
    LinkNicResponse:
      properties:
        LinkNicId: {description: LinkNicResponse_LinkNicId, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkNicToUpdate:
      description: LinkNicToUpdate
      properties:
        DeleteOnVmDeletion: {description: LinkNicToUpdate_DeleteOnVmDeletion, type: boolean}
        LinkNicId: {description: LinkNicToUpdate_LinkNicId, type: string}
      type: object
    LinkPolicyRequest:
      properties:
        DryRun: {description: LinkPolicyRequest_DryRun, type: boolean}
        PolicyId: {description: LinkPolicyRequest_PolicyId, type: string}
        UserGroupName: {description: LinkPolicyRequest_UserGroupName, type: string}
        UserName: {description: LinkPolicyRequest_UserName, type: string}
      required: [PolicyId]
      type: object
    LinkPolicyResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkPrivateIpsRequest:
      properties:
        AllowRelink: {description: LinkPrivateIpsRequest_AllowRelink, type: boolean}
        DryRun: {description: LinkPrivateIpsRequest_DryRun, type: boolean}
        NicId: {description: LinkPrivateIpsRequest_NicId, type: string}
        PrivateIps:
          description: LinkPrivateIpsRequest_PrivateIps
          items: {type: string}
          type: array
        SecondaryPrivateIpCount: {description: LinkPrivateIpsRequest_SecondaryPrivateIpCount,
          type: integer}
      required: [NicId]
      type: object
    LinkPrivateIpsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkPublicIp:
      description: LinkPublicIp
      properties:
        LinkPublicIpId: {description: LinkPublicIp_LinkPublicIpId, type: string}
        PublicDnsName: {description: LinkPublicIp_PublicDnsName, type: string}
        PublicIp: {description: LinkPublicIp_PublicIp, type: string}
        PublicIpAccountId: {description: LinkPublicIp_PublicIpAccountId, type: string}
        PublicIpId: {description: LinkPublicIp_PublicIpId, type: string}
      type: object
    LinkPublicIpLightForVm:
      description: LinkPublicIpLightForVm
      properties:
        PublicDnsName: {description: LinkPublicIpLightForVm_PublicDnsName, type: string}
        PublicIp: {description: LinkPublicIpLightForVm_PublicIp, type: string}
        PublicIpAccountId: {description: LinkPublicIpLightForVm_PublicIpAccountId,
          type: string}
      type: object
    LinkPublicIpRequest:
      properties:
        AllowRelink: {description: LinkPublicIpRequest_AllowRelink, type: boolean}
        DryRun: {description: LinkPublicIpRequest_DryRun, type: boolean}
        NicId: {description: LinkPublicIpRequest_NicId, type: string}
        PrivateIp: {description: LinkPublicIpRequest_PrivateIp, type: string}
        PublicIp: {description: LinkPublicIpRequest_PublicIp, type: string}
        PublicIpId: {description: LinkPublicIpRequest_PublicIpId, type: string}
        VmId: {description: LinkPublicIpRequest_VmId, type: string}
      type: object
    LinkPublicIpResponse:
      properties:
        LinkPublicIpId: {description: LinkPublicIpResponse_LinkPublicIpId, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkRouteTable:
      description: LinkRouteTable
      properties:
        LinkRouteTableId: {description: LinkRouteTable_LinkRouteTableId, type: string}
        Main: {description: LinkRouteTable_Main, type: boolean}
        RouteTableId: {description: LinkRouteTable_RouteTableId, type: string}
        SubnetId: {description: LinkRouteTable_SubnetId, type: string}
      type: object
    LinkRouteTableRequest:
      properties:
        DryRun: {description: LinkRouteTableRequest_DryRun, type: boolean}
        RouteTableId: {description: LinkRouteTableRequest_RouteTableId, type: string}
        SubnetId: {description: LinkRouteTableRequest_SubnetId, type: string}
      required: [RouteTableId, SubnetId]
      type: object
    LinkRouteTableResponse:
      properties:
        LinkRouteTableId: {description: LinkRouteTableResponse_LinkRouteTableId, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkVirtualGatewayRequest:
      properties:
        DryRun: {description: LinkVirtualGatewayRequest_DryRun, type: boolean}
        NetId: {description: LinkVirtualGatewayRequest_NetId, type: string}
        VirtualGatewayId: {description: LinkVirtualGatewayRequest_VirtualGatewayId,
          type: string}
      required: [NetId, VirtualGatewayId]
      type: object
    LinkVirtualGatewayResponse:
      properties:
        NetToVirtualGatewayLink: {$ref: '#/components/schemas/NetToVirtualGatewayLink'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkVolumeRequest:
      properties:
        DeviceName: {description: LinkVolumeRequest_DeviceName, type: string}
        DryRun: {description: LinkVolumeRequest_DryRun, type: boolean}
        VmId: {description: LinkVolumeRequest_VmId, type: string}
        VolumeId: {description: LinkVolumeRequest_VolumeId, type: string}
      required: [DeviceName, VmId, VolumeId]
      type: object
    LinkVolumeResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    LinkedVolume:
      description: LinkedVolume
      properties:
        DeleteOnVmDeletion: {description: LinkedVolume_DeleteOnVmDeletion, type: boolean}
        DeviceName: {description: LinkedVolume_DeviceName, type: string}
        State: {description: LinkedVolume_State, type: string}
        VmId: {description: LinkedVolume_VmId, type: string}
        VolumeId: {description: LinkedVolume_VolumeId, type: string}
      type: object
    Listener:
      description: Listener
      properties:
        BackendPort: {description: Listener_BackendPort, type: integer}
        BackendProtocol: {description: Listener_BackendProtocol, type: string}
        LoadBalancerPort: {description: Listener_LoadBalancerPort, type: integer}
        LoadBalancerProtocol: {description: Listener_LoadBalancerProtocol, type: string}
        PolicyNames:
          description: Listener_PolicyNames
          items: {type: string}
          type: array
        ServerCertificateId: {description: Listener_ServerCertificateId, type: string}
      type: object
    ListenerForCreation:
      description: ListenerForCreation
      properties:
        BackendPort: {description: ListenerForCreation_BackendPort, type: integer}
        BackendProtocol: {description: ListenerForCreation_BackendProtocol, type: string}
        LoadBalancerPort: {description: ListenerForCreation_LoadBalancerPort, type: integer}
        LoadBalancerProtocol: {description: ListenerForCreation_LoadBalancerProtocol,
          type: string}
        ServerCertificateId: {description: ListenerForCreation_ServerCertificateId,
          type: string}
      required: [BackendPort, LoadBalancerPort, LoadBalancerProtocol]
      type: object
    ListenerRule:
      description: ListenerRule
      properties:
        Action: {description: ListenerRule_Action, type: string}
        HostNamePattern: {description: ListenerRule_HostNamePattern, type: string}
        ListenerId: {description: ListenerRule_ListenerId, type: string}
        ListenerRuleId: {description: ListenerRule_ListenerRuleId, type: string}
        ListenerRuleName: {description: ListenerRule_ListenerRuleName, type: string}
        PathPattern: {description: ListenerRule_PathPattern, type: string}
        Priority: {description: ListenerRule_Priority, type: integer}
        VmIds:
          description: ListenerRule_VmIds
          items: {type: string}
          type: array
      type: object
    ListenerRuleForCreation:
      description: ListenerRuleForCreation
      properties:
        Action: {description: ListenerRuleForCreation_Action, type: string}
        HostNamePattern: {description: ListenerRuleForCreation_HostNamePattern, type: string}
        ListenerRuleId: {description: ListenerRuleForCreation_ListenerRuleId, type: string}
        ListenerRuleName: {description: ListenerRuleForCreation_ListenerRuleName,
          type: string}
        PathPattern: {description: ListenerRuleForCreation_PathPattern, type: string}
        Priority: {description: ListenerRuleForCreation_Priority, type: integer}
      required: [Priority]
      type: object
    LoadBalancer:
      description: LoadBalancer
      properties:
        AccessLog: {$ref: '#/components/schemas/AccessLog'}
        ApplicationStickyCookiePolicies:
          description: LoadBalancer_ApplicationStickyCookiePolicies
          items: {$ref: '#/components/schemas/ApplicationStickyCookiePolicy'}
          type: array
        BackendVmIds:
          description: LoadBalancer_BackendVmIds
          items: {type: string}
          type: array
        DnsName: {description: LoadBalancer_DnsName, type: string}
        HealthCheck: {$ref: '#/components/schemas/HealthCheck'}
        Listeners:
          description: LoadBalancer_Listeners
          items: {$ref: '#/components/schemas/Listener'}
          type: array
        LoadBalancerName: {description: LoadBalancer_LoadBalancerName, type: string}
        LoadBalancerStickyCookiePolicies:
          description: LoadBalancer_LoadBalancerStickyCookiePolicies
          items: {$ref: '#/components/schemas/LoadBalancerStickyCookiePolicy'}
          type: array
        LoadBalancerType: {description: LoadBalancer_LoadBalancerType, type: string}
        NetId: {description: LoadBalancer_NetId, type: string}
        SecurityGroups:
          description: LoadBalancer_SecurityGroups
          items: {type: string}
          type: array
        SourceSecurityGroup: {$ref: '#/components/schemas/SourceSecurityGroup'}
        Subnets:
          description: LoadBalancer_Subnets
          items: {type: string}
          type: array
        SubregionNames:
          description: LoadBalancer_SubregionNames
          items: {type: string}
          type: array
        Tags:
          description: LoadBalancer_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    LoadBalancerLight:
      description: LoadBalancerLight
      properties:
        LoadBalancerName: {description: LoadBalancerLight_LoadBalancerName, type: string}
        LoadBalancerPort: {description: LoadBalancerLight_LoadBalancerPort, type: integer}
      required: [LoadBalancerName, LoadBalancerPort]
      type: object
    LoadBalancerStickyCookiePolicy:
      description: LoadBalancerStickyCookiePolicy
      properties:
        PolicyName: {description: LoadBalancerStickyCookiePolicy_PolicyName, type: string}
      type: object
    Location:
      description: Location
      properties:
        Code: {description: Location_Code, type: string}
        Name: {description: Location_Name, type: string}
      type: object
    Log:
      description: Log
      properties:
        AccountId: {description: Log_AccountId, type: string}
        CallDuration: {description: Log_CallDuration, type: integer}
        QueryAccessKey: {description: Log_QueryAccessKey, type: string}
        QueryApiName: {description: Log_QueryApiName, type: string}
        QueryApiVersion: {description: Log_QueryApiVersion, type: string}
        QueryCallName: {description: Log_QueryCallName, type: string}
        QueryDate: {description: Log_QueryDate, format: date, type: string}
        QueryHeaderRaw: {description: Log_QueryHeaderRaw, type: string}
        QueryHeaderSize: {description: Log_QueryHeaderSize, type: integer}
        QueryIpAddress: {description: Log_QueryIpAddress, type: string}
        QueryPayloadRaw: {description: Log_QueryPayloadRaw, type: string}
        QueryPayloadSize: {description: Log_QueryPayloadSize, type: integer}
        QueryUserAgent: {description: Log_QueryUserAgent, type: string}
        RequestId: {description: Log_RequestId, type: string}
        ResponseSize: {description: Log_ResponseSize, type: integer}
        ResponseStatusCode: {description: Log_ResponseStatusCode, type: integer}
      type: object
    MaintenanceEvent:
      description: MaintenanceEvent
      properties:
        Code: {description: MaintenanceEvent_Code, type: string}
        Description: {description: MaintenanceEvent_Description, type: string}
        NotAfter: {description: MaintenanceEvent_NotAfter, format: date, type: string}
        NotBefore: {description: MaintenanceEvent_NotBefore, format: date, type: string}
      type: object
    NatService:
      description: NatService
      properties:
        NatServiceId: {description: NatService_NatServiceId, type: string}
        NetId: {description: NatService_NetId, type: string}
        PublicIps:
          description: NatService_PublicIps
          items: {$ref: '#/components/schemas/PublicIpLight'}
          type: array
        State: {description: NatService_State, type: string}
        SubnetId: {description: NatService_SubnetId, type: string}
      type: object
    Net:
      description: Net
      properties:
        DhcpOptionsSetId: {description: Net_DhcpOptionsSetId, type: string}
        IpRange: {description: Net_IpRange, type: string}
        NetId: {description: Net_NetId, type: string}
        State: {description: Net_State, type: string}
        Tags:
          description: Net_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        Tenancy: {description: Net_Tenancy, type: string}
      type: object
    NetAccessPoint:
      description: NetAccessPoint
      properties:
        NetAccessPointId: {description: NetAccessPoint_NetAccessPointId, type: string}
        NetId: {description: NetAccessPoint_NetId, type: string}
        RouteTableIds:
          description: NetAccessPoint_RouteTableIds
          items: {type: string}
          type: array
        ServiceName: {description: NetAccessPoint_ServiceName, type: string}
        State: {description: NetAccessPoint_State, type: string}
      type: object
    NetPeering:
      description: NetPeering
      properties:
        AccepterNet: {$ref: '#/components/schemas/AccepterNet'}
        NetPeeringId: {description: NetPeering_NetPeeringId, type: string}
        SourceNet: {$ref: '#/components/schemas/SourceNet'}
        State: {$ref: '#/components/schemas/NetPeeringState'}
        Tags:
          description: NetPeering_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    NetPeeringState:
      description: NetPeeringState
      properties:
        Message: {description: NetPeeringState_Message, type: string}
        Name: {description: NetPeeringState_Name, type: string}
      type: object
    NetToVirtualGatewayLink:
      description: NetToVirtualGatewayLink
      properties:
        NetId: {description: NetToVirtualGatewayLink_NetId, type: string}
        State: {description: NetToVirtualGatewayLink_State, type: string}
      type: object
    Nic:
      description: Nic
      properties:
        AccountId: {description: Nic_AccountId, type: string}
        Description: {description: Nic_Description, type: string}
        IsSourceDestChecked: {description: Nic_IsSourceDestChecked, type: boolean}
        LinkNic: {$ref: '#/components/schemas/LinkNic'}
        LinkPublicIp: {$ref: '#/components/schemas/LinkPublicIp'}
        MacAddress: {description: Nic_MacAddress, type: string}
        NetId: {description: Nic_NetId, type: string}
        NicId: {description: Nic_NicId, type: string}
        PrivateDnsName: {description: Nic_PrivateDnsName, type: string}
        PrivateIps:
          description: Nic_PrivateIps
          items: {$ref: '#/components/schemas/PrivateIp'}
          type: array
        SecurityGroups:
          description: Nic_SecurityGroups
          items: {$ref: '#/components/schemas/SecurityGroupLight'}
          type: array
        State: {description: Nic_State, type: string}
        SubnetId: {description: Nic_SubnetId, type: string}
        SubregionName: {description: Nic_SubregionName, type: string}
        Tags:
          description: Nic_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    NicForVmCreation:
      description: NicForVmCreation
      properties:
        DeleteOnVmDeletion: {description: NicForVmCreation_DeleteOnVmDeletion, type: boolean}
        Description: {description: NicForVmCreation_Description, type: string}
        DeviceNumber: {description: NicForVmCreation_DeviceNumber, type: integer}
        NicId: {description: NicForVmCreation_NicId, type: string}
        PrivateIps:
          description: NicForVmCreation_PrivateIps
          items: {$ref: '#/components/schemas/PrivateIpLight'}
          type: array
        SecondaryPrivateIpCount: {description: NicForVmCreation_SecondaryPrivateIpCount,
          type: integer}
        SecurityGroupIds:
          description: NicForVmCreation_SecurityGroupIds
          items: {type: string}
          type: array
        SubnetId: {description: NicForVmCreation_SubnetId, type: string}
      type: object
    NicLight:
      description: NicLight
      properties:
        AccountId: {description: NicLight_AccountId, type: string}
        Description: {description: NicLight_Description, type: string}
        IsSourceDestChecked: {description: NicLight_IsSourceDestChecked, type: boolean}
        LinkNic: {$ref: '#/components/schemas/LinkNicLight'}
        LinkPublicIp: {$ref: '#/components/schemas/LinkPublicIpLightForVm'}
        MacAddress: {description: NicLight_MacAddress, type: string}
        NetId: {description: NicLight_NetId, type: string}
        NicId: {description: NicLight_NicId, type: string}
        PrivateDnsName: {description: NicLight_PrivateDnsName, type: string}
        PrivateIps:
          description: NicLight_PrivateIps
          items: {$ref: '#/components/schemas/PrivateIpLightForVm'}
          type: array
        SecurityGroups:
          description: NicLight_SecurityGroups
          items: {$ref: '#/components/schemas/SecurityGroupLight'}
          type: array
        State: {description: NicLight_State, type: string}
        SubnetId: {description: NicLight_SubnetId, type: string}
      type: object
    OsuApiKey:
      description: OsuApiKey
      properties:
        ApiKeyId: {description: OsuApiKey_ApiKeyId, type: string}
        SecretKey: {description: OsuApiKey_SecretKey, type: string}
      type: object
    OsuExport:
      description: OsuExport
      properties:
        DiskImageFormat: {description: OsuExport_DiskImageFormat, type: string}
        OsuApiKey: {$ref: '#/components/schemas/OsuApiKey'}
        OsuBucket: {description: OsuExport_OsuBucket, type: string}
        OsuManifestUrl: {description: OsuExport_OsuManifestUrl, type: string}
        OsuPrefix: {description: OsuExport_OsuPrefix, type: string}
      required: [DiskImageFormat, OsuBucket]
      type: object
    PermissionsOnResource:
      description: PermissionsOnResource
      properties:
        AccountIds:
          description: PermissionsOnResource_AccountIds
          items: {type: string}
          type: array
        GlobalPermission: {description: PermissionsOnResource_GlobalPermission, type: boolean}
      type: object
    PermissionsOnResourceCreation:
      description: PermissionsOnResourceCreation
      properties:
        Additions: {$ref: '#/components/schemas/PermissionsOnResource'}
        Removals: {$ref: '#/components/schemas/PermissionsOnResource'}
      type: object
    Placement:
      description: Placement
      properties:
        SubregionName: {description: Placement_SubregionName, type: string}
        Tenancy: {description: Placement_Tenancy, type: string}
      type: object
    Policy:
      description: Policy
      properties:
        Description: {description: Policy_Description, type: string}
        IsLinkable: {description: Policy_IsLinkable, type: boolean}
        Path: {description: Policy_Path, type: string}
        PolicyDefaultVersionId: {description: Policy_PolicyDefaultVersionId, type: string}
        PolicyId: {description: Policy_PolicyId, type: string}
        PolicyName: {description: Policy_PolicyName, type: string}
        ResourcesCount: {description: Policy_ResourcesCount, type: integer}
      type: object
    PricingDetail:
      description: PricingDetail
      properties:
        Count: {description: PricingDetail_Count, type: integer}
      type: object
    PrivateIp:
      description: PrivateIp
      properties:
        IsPrimary: {description: PrivateIp_IsPrimary, type: boolean}
        LinkPublicIp: {$ref: '#/components/schemas/LinkPublicIp'}
        PrivateDnsName: {description: PrivateIp_PrivateDnsName, type: string}
        PrivateIp: {description: PrivateIp_PrivateIp, type: string}
      type: object
    PrivateIpLight:
      description: PrivateIpLight
      properties:
        IsPrimary: {description: PrivateIpLight_IsPrimary, type: boolean}
        PrivateIp: {description: PrivateIpLight_PrivateIp, type: string}
      type: object
    PrivateIpLightForVm:
      description: PrivateIpLightForVm
      properties:
        IsPrimary: {description: PrivateIpLightForVm_IsPrimary, type: boolean}
        LinkPublicIp: {$ref: '#/components/schemas/LinkPublicIpLightForVm'}
        PrivateDnsName: {description: PrivateIpLightForVm_PrivateDnsName, type: string}
        PrivateIp: {description: PrivateIpLightForVm_PrivateIp, type: string}
      type: object
    ProductType:
      description: ProductType
      properties:
        Description: {description: ProductType_Description, type: string}
        ProductTypeId: {description: ProductType_ProductTypeId, type: string}
        Vendor: {description: ProductType_Vendor, type: string}
      type: object
    PublicIp:
      description: PublicIp
      properties:
        LinkPublicIpId: {description: PublicIp_LinkPublicIpId, type: string}
        NicAccountId: {description: PublicIp_NicAccountId, type: string}
        NicId: {description: PublicIp_NicId, type: string}
        PrivateIp: {description: PublicIp_PrivateIp, type: string}
        PublicIp: {description: PublicIp_PublicIp, type: string}
        PublicIpId: {description: PublicIp_PublicIpId, type: string}
        VmId: {description: PublicIp_VmId, type: string}
      type: object
    PublicIpLight:
      description: PublicIpLight
      properties:
        PublicIp: {description: PublicIpLight_PublicIp, type: string}
        PublicIpId: {description: PublicIpLight_PublicIpId, type: string}
      type: object
    PurchaseReservedVmsOfferRequest:
      properties:
        DryRun: {description: PurchaseReservedVmsOfferRequest_DryRun, type: boolean}
        ReservedVmsOfferId: {description: PurchaseReservedVmsOfferRequest_ReservedVmsOfferId,
          type: string}
        VmCount: {description: PurchaseReservedVmsOfferRequest_VmCount, type: integer}
      required: [VmCount, ReservedVmsOfferId]
      type: object
    PurchaseReservedVmsOfferResponse:
      properties:
        ReservedVmsId: {description: PurchaseReservedVmsOfferResponse_ReservedVmsId,
          type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    Quota:
      description: Quota
      properties:
        AccountId: {description: Quota_AccountId, type: string}
        Description: {description: Quota_Description, type: string}
        MaxValue: {description: Quota_MaxValue, type: integer}
        Name: {description: Quota_Name, type: string}
        QuotaCollection: {description: Quota_QuotaCollection, type: string}
        ShortDescription: {description: Quota_ShortDescription, type: string}
        UsedValue: {description: Quota_UsedValue, type: integer}
      type: object
    QuotaTypes:
      description: QuotaTypes
      properties:
        QuotaType: {description: QuotaTypes_QuotaType, type: string}
        Quotas:
          description: QuotaTypes_Quotas
          items: {$ref: '#/components/schemas/Quota'}
          type: array
      type: object
    ReadAccountConsumptionRequest:
      properties:
        DryRun: {description: ReadAccountConsumptionRequest_DryRun, type: boolean}
        FromDate: {description: ReadAccountConsumptionRequest_FromDate, format: date,
          type: string}
        ToDate: {description: ReadAccountConsumptionRequest_ToDate, format: date,
          type: string}
      required: [FromDate, ToDate]
      type: object
    ReadAccountConsumptionResponse:
      properties:
        ConsumptionEntries: {$ref: '#/components/schemas/ConsumptionEntries'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadAccountRequest:
      properties:
        DryRun: {description: ReadAccountRequest_DryRun, type: boolean}
      type: object
    ReadAccountResponse:
      properties:
        Account: {$ref: '#/components/schemas/Account'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadAdminPasswordRequest:
      properties:
        DryRun: {description: ReadAdminPasswordRequest_DryRun, type: boolean}
        VmId: {description: ReadAdminPasswordRequest_VmId, type: string}
      required: [VmId]
      type: object
    ReadAdminPasswordResponse:
      properties:
        AdminPassword: {description: ReadAdminPasswordResponse_AdminPassword, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VmId: {description: ReadAdminPasswordResponse_VmId, type: string}
      type: object
    ReadApiKeysRequest:
      properties:
        DryRun: {description: ReadApiKeysRequest_DryRun, type: boolean}
        Tags:
          description: ReadApiKeysRequest_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        UserName: {description: ReadApiKeysRequest_UserName, type: string}
      type: object
    ReadApiKeysResponse:
      properties:
        ApiKeys:
          description: ReadApiKeysResponse_ApiKeys
          items: {$ref: '#/components/schemas/ApiKey'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadApiLogsRequest:
      properties:
        DryRun: {description: ReadApiLogsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersApiLog'}
        NextPageToken: {description: ReadApiLogsRequest_NextPageToken, type: string}
        ResultsPerPage: {description: ReadApiLogsRequest_ResultsPerPage, type: integer}
        With: {$ref: '#/components/schemas/With'}
      type: object
    ReadApiLogsResponse:
      properties:
        Logs:
          description: ReadApiLogsResponse_Logs
          items: {$ref: '#/components/schemas/Log'}
          type: array
        NextPageToken: {description: ReadApiLogsResponse_NextPageToken, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadBillableDigestRequest:
      properties:
        AccountId: {description: ReadBillableDigestRequest_AccountId, type: string}
        DryRun: {description: ReadBillableDigestRequest_DryRun, type: boolean}
        FromDate: {description: ReadBillableDigestRequest_FromDate, format: date,
          type: string}
        InvoiceState: {description: ReadBillableDigestRequest_InvoiceState, type: string}
        IsConsolidated: {description: ReadBillableDigestRequest_IsConsolidated, type: boolean}
        ToDate: {description: ReadBillableDigestRequest_ToDate, format: date, type: string}
      required: [AccountId, FromDate, ToDate, InvoiceState]
      type: object
    ReadBillableDigestResponse:
      properties:
        Items:
          description: ReadBillableDigestResponse_Items
          items: {$ref: '#/components/schemas/Item'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadCatalogRequest:
      properties:
        DryRun: {description: ReadCatalogRequest_DryRun, type: boolean}
      type: object
    ReadCatalogResponse:
      properties:
        Catalog: {$ref: '#/components/schemas/Catalog_1'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadClientGatewaysRequest:
      properties:
        DryRun: {description: ReadClientGatewaysRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersClientGateway'}
      type: object
    ReadClientGatewaysResponse:
      properties:
        ClientGateways:
          description: ReadClientGatewaysResponse_ClientGateways
          items: {$ref: '#/components/schemas/ClientGateway'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadConsoleOutputRequest:
      properties:
        DryRun: {description: ReadConsoleOutputRequest_DryRun, type: boolean}
        VmId: {description: ReadConsoleOutputRequest_VmId, type: string}
      required: [VmId]
      type: object
    ReadConsoleOutputResponse:
      properties:
        ConsoleOutput: {description: ReadConsoleOutputResponse_ConsoleOutput, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VmId: {description: ReadConsoleOutputResponse_VmId, type: string}
      type: object
    ReadDhcpOptionsRequest:
      properties:
        DryRun: {description: ReadDhcpOptionsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersDhcpOptions'}
      type: object
    ReadDhcpOptionsResponse:
      properties:
        DhcpOptionsSets:
          description: ReadDhcpOptionsResponse_DhcpOptionsSets
          items: {$ref: '#/components/schemas/DhcpOptionsSet'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadDirectLinkInterfacesRequest:
      properties:
        DryRun: {description: ReadDirectLinkInterfacesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersDirectLinkInterface'}
      type: object
    ReadDirectLinkInterfacesResponse:
      properties:
        DirectLinkInterfaces:
          description: ReadDirectLinkInterfacesResponse_DirectLinkInterfaces
          items: {$ref: '#/components/schemas/DirectLinkInterfaces'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadDirectLinksRequest:
      properties:
        DryRun: {description: ReadDirectLinksRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersDirectLink'}
      type: object
    ReadDirectLinksResponse:
      properties:
        DirectLinks:
          description: ReadDirectLinksResponse_DirectLinks
          items: {$ref: '#/components/schemas/DirectLink'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadImageExportTasksRequest:
      properties:
        DryRun: {description: ReadImageExportTasksRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersExportTask'}
      type: object
    ReadImageExportTasksResponse:
      properties:
        ImageExportTasks:
          description: ReadImageExportTasksResponse_ImageExportTasks
          items: {$ref: '#/components/schemas/ImageExportTask'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadImagesRequest:
      properties:
        DryRun: {description: ReadImagesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersImage'}
      type: object
    ReadImagesResponse:
      properties:
        Images:
          description: ReadImagesResponse_Images
          items: {$ref: '#/components/schemas/Image'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadInternetServicesRequest:
      properties:
        DryRun: {description: ReadInternetServicesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersInternetService'}
      type: object
    ReadInternetServicesResponse:
      properties:
        InternetServices:
          description: ReadInternetServicesResponse_InternetServices
          items: {$ref: '#/components/schemas/InternetService'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadKeypairsRequest:
      properties:
        DryRun: {description: ReadKeypairsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersKeypair'}
      type: object
    ReadKeypairsResponse:
      properties:
        Keypairs:
          description: ReadKeypairsResponse_Keypairs
          items: {$ref: '#/components/schemas/Keypair'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadListenerRulesRequest:
      properties:
        DryRun: {description: ReadListenerRulesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersListenerRule'}
      type: object
    ReadListenerRulesResponse:
      properties:
        ListenerRules:
          description: ReadListenerRulesResponse_ListenerRules
          items: {$ref: '#/components/schemas/ListenerRule'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadLoadBalancersRequest:
      properties:
        DryRun: {description: ReadLoadBalancersRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersLoadBalancer'}
      type: object
    ReadLoadBalancersResponse:
      properties:
        LoadBalancers:
          description: ReadLoadBalancersResponse_LoadBalancers
          items: {$ref: '#/components/schemas/LoadBalancer'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadLocationsRequest:
      properties:
        DryRun: {description: ReadLocationsRequest_DryRun, type: boolean}
      type: object
    ReadLocationsResponse:
      properties:
        Locations:
          description: ReadLocationsResponse_Locations
          items: {$ref: '#/components/schemas/Location'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadNatServicesRequest:
      properties:
        DryRun: {description: ReadNatServicesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersNatService'}
      type: object
    ReadNatServicesResponse:
      properties:
        NatServices:
          description: ReadNatServicesResponse_NatServices
          items: {$ref: '#/components/schemas/NatService'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadNetAccessPointServicesRequest:
      properties:
        DryRun: {description: ReadNetAccessPointServicesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersService'}
      type: object
    ReadNetAccessPointServicesResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Services:
          description: ReadNetAccessPointServicesResponse_Services
          items: {$ref: '#/components/schemas/Service'}
          type: array
      type: object
    ReadNetAccessPointsRequest:
      properties:
        DryRun: {description: ReadNetAccessPointsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersNetAccessPoint'}
      type: object
    ReadNetAccessPointsResponse:
      properties:
        NetAccessPoints:
          description: ReadNetAccessPointsResponse_NetAccessPoints
          items: {$ref: '#/components/schemas/NetAccessPoint'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadNetPeeringsRequest:
      properties:
        DryRun: {description: ReadNetPeeringsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersNetPeering'}
      type: object
    ReadNetPeeringsResponse:
      properties:
        NetPeerings:
          description: ReadNetPeeringsResponse_NetPeerings
          items: {$ref: '#/components/schemas/NetPeering'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadNetsRequest:
      properties:
        DryRun: {description: ReadNetsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersNet'}
      type: object
    ReadNetsResponse:
      properties:
        Nets:
          description: ReadNetsResponse_Nets
          items: {$ref: '#/components/schemas/Net'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadNicsRequest:
      properties:
        DryRun: {description: ReadNicsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersNic'}
      type: object
    ReadNicsResponse:
      properties:
        Nics:
          description: ReadNicsResponse_Nics
          items: {$ref: '#/components/schemas/Nic'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadPoliciesRequest:
      properties:
        DryRun: {description: ReadPoliciesRequest_DryRun, type: boolean}
        IsLinked: {description: ReadPoliciesRequest_IsLinked, type: boolean}
        Path: {description: ReadPoliciesRequest_Path, type: string}
        UserGroupName: {description: ReadPoliciesRequest_UserGroupName, type: string}
        UserName: {description: ReadPoliciesRequest_UserName, type: string}
      type: object
    ReadPoliciesResponse:
      properties:
        Policies:
          description: ReadPoliciesResponse_Policies
          items: {$ref: '#/components/schemas/Policy'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadProductTypesRequest:
      properties:
        DryRun: {description: ReadProductTypesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersProductType'}
      type: object
    ReadProductTypesResponse:
      properties:
        ProductTypes:
          description: ReadProductTypesResponse_ProductTypes
          items: {$ref: '#/components/schemas/ProductType'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadPublicCatalogRequest:
      properties:
        DryRun: {description: ReadPublicCatalogRequest_DryRun, type: boolean}
      type: object
    ReadPublicCatalogResponse:
      properties:
        Catalog: {$ref: '#/components/schemas/Catalog_1'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadPublicIpRangesRequest:
      properties:
        DryRun: {description: ReadPublicIpRangesRequest_DryRun, type: boolean}
      type: object
    ReadPublicIpRangesResponse:
      properties:
        PublicIps:
          description: ReadPublicIpRangesResponse_PublicIps
          items: {type: string}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadPublicIpsRequest:
      properties:
        DryRun: {description: ReadPublicIpsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersPublicIp'}
      type: object
    ReadPublicIpsResponse:
      properties:
        PublicIps:
          description: ReadPublicIpsResponse_PublicIps
          items: {$ref: '#/components/schemas/PublicIp'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadQuotasRequest:
      properties:
        DryRun: {description: ReadQuotasRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersQuota'}
      type: object
    ReadQuotasResponse:
      properties:
        QuotaTypes:
          description: ReadQuotasResponse_QuotaTypes
          items: {$ref: '#/components/schemas/QuotaTypes'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadRegionConfigRequest:
      properties:
        DryRun: {description: ReadRegionConfigRequest_DryRun, type: boolean}
        FromDate: {description: ReadRegionConfigRequest_FromDate, format: date, type: string}
      type: object
    ReadRegionConfigResponse:
      properties:
        RegionConfig: {$ref: '#/components/schemas/RegionConfig'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadRegionsRequest:
      properties:
        DryRun: {description: ReadRegionsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersRegion'}
      type: object
    ReadRegionsResponse:
      properties:
        Regions:
          description: ReadRegionsResponse_Regions
          items: {$ref: '#/components/schemas/Region'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadReservedVmOffersRequest:
      properties:
        DryRun: {description: ReadReservedVmOffersRequest_DryRun, type: boolean}
        Filters:
          description: ReadReservedVmOffersRequest_Filters
          items: {$ref: '#/components/schemas/FiltersOldFormat'}
          type: array
        OfferingType: {description: ReadReservedVmOffersRequest_OfferingType, type: string}
        ProductType: {description: ReadReservedVmOffersRequest_ProductType, type: string}
        ReservedVmsOfferIds:
          description: ReadReservedVmOffersRequest_ReservedVmsOfferIds
          items: {type: string}
          type: array
        SubregionName: {description: ReadReservedVmOffersRequest_SubregionName, type: string}
        Tenancy: {description: ReadReservedVmOffersRequest_Tenancy, type: string}
        VmType: {description: ReadReservedVmOffersRequest_VmType, type: string}
      type: object
    ReadReservedVmOffersResponse:
      properties:
        ReservedVmsOffers:
          description: ReadReservedVmOffersResponse_ReservedVmsOffers
          items: {$ref: '#/components/schemas/ReservedVmsOffer'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadReservedVmsRequest:
      properties:
        DryRun: {description: ReadReservedVmsRequest_DryRun, type: boolean}
        Filters:
          description: ReadReservedVmsRequest_Filters
          items: {$ref: '#/components/schemas/FiltersOldFormat'}
          type: array
        OfferingType: {description: ReadReservedVmsRequest_OfferingType, type: string}
        ReservedVmsIds:
          description: ReadReservedVmsRequest_ReservedVmsIds
          items: {type: string}
          type: array
        SubregionName: {description: ReadReservedVmsRequest_SubregionName, type: string}
      type: object
    ReadReservedVmsResponse:
      properties:
        ReservedVms:
          description: ReadReservedVmsResponse_ReservedVms
          items: {$ref: '#/components/schemas/ReservedVm'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadRouteTablesRequest:
      properties:
        DryRun: {description: ReadRouteTablesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersRouteTable'}
      type: object
    ReadRouteTablesResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        RouteTables:
          description: ReadRouteTablesResponse_RouteTables
          items: {$ref: '#/components/schemas/RouteTable'}
          type: array
      type: object
    ReadSecurityGroupsRequest:
      properties:
        DryRun: {description: ReadSecurityGroupsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersSecurityGroup'}
      type: object
    ReadSecurityGroupsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        SecurityGroups:
          description: ReadSecurityGroupsResponse_SecurityGroups
          items: {$ref: '#/components/schemas/SecurityGroup'}
          type: array
      type: object
    ReadServerCertificatesRequest:
      properties:
        DryRun: {description: ReadServerCertificatesRequest_DryRun, type: boolean}
        Path: {description: ReadServerCertificatesRequest_Path, type: string}
      type: object
    ReadServerCertificatesResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        ServerCertificates:
          description: ReadServerCertificatesResponse_ServerCertificates
          items: {$ref: '#/components/schemas/ServerCertificate'}
          type: array
      type: object
    ReadSnapshotExportTasksRequest:
      properties:
        DryRun: {description: ReadSnapshotExportTasksRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersExportTask'}
      type: object
    ReadSnapshotExportTasksResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        SnapshotExportTasks:
          description: ReadSnapshotExportTasksResponse_SnapshotExportTasks
          items: {$ref: '#/components/schemas/SnapshotExportTask'}
          type: array
      type: object
    ReadSnapshotsRequest:
      properties:
        DryRun: {description: ReadSnapshotsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersSnapshot'}
      type: object
    ReadSnapshotsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Snapshots:
          description: ReadSnapshotsResponse_Snapshots
          items: {$ref: '#/components/schemas/Snapshot'}
          type: array
      type: object
    ReadSubnetsRequest:
      properties:
        DryRun: {description: ReadSubnetsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersSubnet'}
      type: object
    ReadSubnetsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Subnets:
          description: ReadSubnetsResponse_Subnets
          items: {$ref: '#/components/schemas/Subnet'}
          type: array
      type: object
    ReadSubregionsRequest:
      properties:
        DryRun: {description: ReadSubregionsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersSubregion'}
      type: object
    ReadSubregionsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Subregions:
          description: ReadSubregionsResponse_Subregions
          items: {$ref: '#/components/schemas/Subregion'}
          type: array
      type: object
    ReadTagsRequest:
      properties:
        DryRun: {description: ReadTagsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersTag'}
      type: object
    ReadTagsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Tags:
          description: ReadTagsResponse_Tags
          items: {$ref: '#/components/schemas/Tag'}
          type: array
      type: object
    ReadUserGroupsRequest:
      properties:
        DryRun: {description: ReadUserGroupsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersUserGroup'}
      type: object
    ReadUserGroupsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        UserGroups:
          description: ReadUserGroupsResponse_UserGroups
          items: {$ref: '#/components/schemas/UserGroup'}
          type: array
      type: object
    ReadUsersRequest:
      properties:
        DryRun: {description: ReadUsersRequest_DryRun, type: boolean}
        Path: {description: ReadUsersRequest_Path, type: string}
      type: object
    ReadUsersResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Users:
          description: ReadUsersResponse_Users
          items: {$ref: '#/components/schemas/User'}
          type: array
      type: object
    ReadVirtualGatewaysRequest:
      properties:
        DryRun: {description: ReadVirtualGatewaysRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersVirtualGateway'}
      type: object
    ReadVirtualGatewaysResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VirtualGateways:
          description: ReadVirtualGatewaysResponse_VirtualGateways
          items: {$ref: '#/components/schemas/VirtualGateway'}
          type: array
      type: object
    ReadVmTypesRequest:
      properties:
        DryRun: {description: ReadVmTypesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersVmType'}
      type: object
    ReadVmTypesResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VmTypes:
          description: ReadVmTypesResponse_VmTypes
          items: {$ref: '#/components/schemas/VmType'}
          type: array
      type: object
    ReadVmsHealthRequest:
      properties:
        BackendVmIds:
          description: ReadVmsHealthRequest_BackendVmIds
          items: {type: string}
          type: array
        DryRun: {description: ReadVmsHealthRequest_DryRun, type: boolean}
        LoadBalancerName: {description: ReadVmsHealthRequest_LoadBalancerName, type: string}
      required: [LoadBalancerName]
      type: object
    ReadVmsHealthResponse:
      properties:
        BackendVmHealth:
          description: ReadVmsHealthResponse_BackendVmHealth
          items: {$ref: '#/components/schemas/BackendVmHealth'}
          type: array
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReadVmsRequest:
      properties:
        DryRun: {description: ReadVmsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersVm'}
      type: object
    ReadVmsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Vms:
          description: ReadVmsResponse_Vms
          items: {$ref: '#/components/schemas/Vm'}
          type: array
      type: object
    ReadVmsStateRequest:
      properties:
        AllVms: {description: ReadVmsStateRequest_AllVms, type: boolean}
        DryRun: {description: ReadVmsStateRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersVmsState'}
      type: object
    ReadVmsStateResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VmStates:
          description: ReadVmsStateResponse_VmStates
          items: {$ref: '#/components/schemas/VmStates'}
          type: array
      type: object
    ReadVolumesRequest:
      properties:
        DryRun: {description: ReadVolumesRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersVolume'}
      type: object
    ReadVolumesResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Volumes:
          description: ReadVolumesResponse_Volumes
          items: {$ref: '#/components/schemas/Volume'}
          type: array
      type: object
    ReadVpnConnectionsRequest:
      properties:
        DryRun: {description: ReadVpnConnectionsRequest_DryRun, type: boolean}
        Filters: {$ref: '#/components/schemas/FiltersVpnConnection'}
      type: object
    ReadVpnConnectionsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        VpnConnections:
          description: ReadVpnConnectionsResponse_VpnConnections
          items: {$ref: '#/components/schemas/VpnConnection'}
          type: array
      type: object
    RebootVmsRequest:
      properties:
        DryRun: {description: RebootVmsRequest_DryRun, type: boolean}
        VmIds:
          description: RebootVmsRequest_VmIds
          items: {type: string}
          type: array
      required: [VmIds]
      type: object
    RebootVmsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    RecurringCharge:
      description: RecurringCharge
      properties:
        Frequency: {description: RecurringCharge_Frequency, type: string}
      type: object
    Region:
      description: Region
      properties:
        Endpoint: {description: Region_Endpoint, type: string}
        RegionName: {description: Region_RegionName, type: string}
      type: object
    RegionConfig:
      description: RegionConfig
      properties:
        FromDate: {description: RegionConfig_FromDate, format: date, type: string}
        Regions:
          description: RegionConfig_Regions
          items: {$ref: '#/components/schemas/RegionDescription'}
          type: array
        TargetRegion: {$ref: '#/components/schemas/TargetRegion'}
      type: object
    RegionDescription:
      description: RegionDescription
      properties:
        Attributes:
          description: RegionDescription_Attributes
          items: {$ref: '#/components/schemas/Attribute'}
          type: array
        Continent: {description: RegionDescription_Continent, type: string}
        CurrencyCode: {description: RegionDescription_CurrencyCode, type: string}
        Entity: {description: RegionDescription_Entity, type: string}
        IsPublic: {description: RegionDescription_IsPublic, type: boolean}
        IsSynchronized: {description: RegionDescription_IsSynchronized, type: boolean}
        Permissions:
          description: RegionDescription_Permissions
          items: {$ref: '#/components/schemas/RegionDescriptionPermission'}
          type: array
        RegionDomain: {description: RegionDescription_RegionDomain, type: string}
        RegionId: {description: RegionDescription_RegionId, type: string}
        RegionInstance: {description: RegionDescription_RegionInstance, type: string}
        RegionName: {description: RegionDescription_RegionName, type: string}
        SerialFactor: {description: RegionDescription_SerialFactor, type: integer}
        Services:
          description: RegionDescription_Services
          items: {$ref: '#/components/schemas/RegionService'}
          type: array
        SubregionNames:
          description: RegionDescription_SubregionNames
          items: {type: string}
          type: array
      type: object
    RegionDescriptionPermission:
      description: RegionDescriptionPermission
      properties:
        Filter: {description: RegionDescriptionPermission_Filter, type: string}
        PermissionType: {description: RegionDescriptionPermission_PermissionType,
          type: string}
      type: object
    RegionService:
      description: RegionService
      properties:
        Filters:
          description: RegionService_Filters
          items: {$ref: '#/components/schemas/FiltersRegionServices'}
          type: array
        ServiceName: {description: RegionService_ServiceName, type: string}
        ServiceType: {description: RegionService_ServiceType, type: string}
      type: object
    RegisterUserInUserGroupRequest:
      properties:
        DryRun: {description: RegisterUserInUserGroupRequest_DryRun, type: boolean}
        UserGroupName: {description: RegisterUserInUserGroupRequest_UserGroupName,
          type: string}
        UserName: {description: RegisterUserInUserGroupRequest_UserName, type: string}
      required: [UserGroupName, UserName]
      type: object
    RegisterUserInUserGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    RegisterVmsInLoadBalancerRequest:
      properties:
        BackendVmIds:
          description: RegisterVmsInLoadBalancerRequest_BackendVmIds
          items: {type: string}
          type: array
        DryRun: {description: RegisterVmsInLoadBalancerRequest_DryRun, type: boolean}
        LoadBalancerName: {description: RegisterVmsInLoadBalancerRequest_LoadBalancerName,
          type: string}
      required: [BackendVmIds, LoadBalancerName]
      type: object
    RegisterVmsInLoadBalancerResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    RejectNetPeeringRequest:
      properties:
        DryRun: {description: RejectNetPeeringRequest_DryRun, type: boolean}
        NetPeeringId: {description: RejectNetPeeringRequest_NetPeeringId, type: string}
      required: [NetPeeringId]
      type: object
    RejectNetPeeringResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ReservedVm:
      description: ReservedVm
      properties:
        CurrencyCode: {description: ReservedVm_CurrencyCode, type: string}
        OfferingType: {description: ReservedVm_OfferingType, type: string}
        ProductType: {description: ReservedVm_ProductType, type: string}
        RecurringCharges:
          description: ReservedVm_RecurringCharges
          items: {$ref: '#/components/schemas/RecurringCharge'}
          type: array
        ReservedVmsId: {description: ReservedVm_ReservedVmsId, type: string}
        State: {description: ReservedVm_State, type: string}
        SubregionName: {description: ReservedVm_SubregionName, type: string}
        Tenancy: {description: ReservedVm_Tenancy, type: string}
        VmCount: {description: ReservedVm_VmCount, type: integer}
        VmType: {description: ReservedVm_VmType, type: string}
      type: object
    ReservedVmsOffer:
      description: ReservedVmsOffer
      properties:
        CurrencyCode: {description: ReservedVmsOffer_CurrencyCode, type: string}
        Duration: {description: ReservedVmsOffer_Duration, type: integer}
        FixedPrice: {description: ReservedVmsOffer_FixedPrice, format: float, type: number}
        OfferingType: {description: ReservedVmsOffer_OfferingType, type: string}
        PricingDetails:
          description: ReservedVmsOffer_PricingDetails
          items: {$ref: '#/components/schemas/PricingDetail'}
          type: array
        ProductType: {description: ReservedVmsOffer_ProductType, type: string}
        RecurringCharges:
          description: ReservedVmsOffer_RecurringCharges
          items: {$ref: '#/components/schemas/RecurringCharge'}
          type: array
        ReservedVmsOfferId: {description: ReservedVmsOffer_ReservedVmsOfferId, type: string}
        SubregionName: {description: ReservedVmsOffer_SubregionName, type: string}
        Tenancy: {description: ReservedVmsOffer_Tenancy, type: string}
        UsagePrice: {description: ReservedVmsOffer_UsagePrice, format: float, type: number}
        VmType: {description: ReservedVmsOffer_VmType, type: string}
      type: object
    ResetAccountPasswordRequest:
      properties:
        DryRun: {description: ResetAccountPasswordRequest_DryRun, type: boolean}
        Password: {description: ResetAccountPasswordRequest_Password, type: string}
        PasswordToken: {description: ResetAccountPasswordRequest_PasswordToken, type: string}
      required: [Password, PasswordToken]
      type: object
    ResetAccountPasswordResponse:
      properties:
        Email: {description: ResetAccountPasswordResponse_Email, type: string}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ResourceTag:
      description: ResourceTag
      properties:
        Key: {description: ResourceTag_Key, type: string}
        Value: {description: ResourceTag_Value, type: string}
      required: [Key, Value]
      type: object
    ResponseContext:
      description: ResponseContext
      properties:
        RequestId: {description: ResponseContext_RequestId, type: string}
      type: object
    Route:
      description: Route
      properties:
        CreationMethod: {description: Route_CreationMethod, type: string}
        DestinationIpRange: {description: Route_DestinationIpRange, type: string}
        DestinationServiceId: {description: Route_DestinationServiceId, type: string}
        GatewayId: {description: Route_GatewayId, type: string}
        NatServiceId: {description: Route_NatServiceId, type: string}
        NetAccessPointId: {description: Route_NetAccessPointId, type: string}
        NetPeeringId: {description: Route_NetPeeringId, type: string}
        NicId: {description: Route_NicId, type: string}
        State: {description: Route_State, type: string}
        VmAccountId: {description: Route_VmAccountId, type: string}
        VmId: {description: Route_VmId, type: string}
      type: object
    RouteLight:
      description: RouteLight
      properties:
        DestinationIpRange: {description: RouteLight_DestinationIpRange, type: string}
        RouteType: {description: RouteLight_RouteType, type: string}
        State: {description: RouteLight_State, type: string}
      type: object
    RoutePropagatingVirtualGateway:
      description: RoutePropagatingVirtualGateway
      properties:
        VirtualGatewayId: {description: RoutePropagatingVirtualGateway_VirtualGatewayId,
          type: string}
      type: object
    RouteTable:
      description: RouteTable
      properties:
        LinkRouteTables:
          description: RouteTable_LinkRouteTables
          items: {$ref: '#/components/schemas/LinkRouteTable'}
          type: array
        NetId: {description: RouteTable_NetId, type: string}
        RoutePropagatingVirtualGateways:
          description: RouteTable_RoutePropagatingVirtualGateways
          items: {$ref: '#/components/schemas/RoutePropagatingVirtualGateway'}
          type: array
        RouteTableId: {description: RouteTable_RouteTableId, type: string}
        Routes:
          description: RouteTable_Routes
          items: {$ref: '#/components/schemas/Route'}
          type: array
        Tags:
          description: RouteTable_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    SecurityGroup:
      description: SecurityGroup
      properties:
        AccountId: {description: SecurityGroup_AccountId, type: string}
        Description: {description: SecurityGroup_Description, type: string}
        InboundRules:
          description: SecurityGroup_InboundRules
          items: {$ref: '#/components/schemas/SecurityGroupRule'}
          type: array
        NetId: {description: SecurityGroup_NetId, type: string}
        OutboundRules:
          description: SecurityGroup_OutboundRules
          items: {$ref: '#/components/schemas/SecurityGroupRule'}
          type: array
        SecurityGroupId: {description: SecurityGroup_SecurityGroupId, type: string}
        SecurityGroupName: {description: SecurityGroup_SecurityGroupName, type: string}
        Tags:
          description: SecurityGroup_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    SecurityGroupLight:
      description: SecurityGroupLight
      properties:
        SecurityGroupId: {description: SecurityGroupLight_SecurityGroupId, type: string}
        SecurityGroupName: {description: SecurityGroupLight_SecurityGroupName, type: string}
      type: object
    SecurityGroupRule:
      description: SecurityGroupRule
      properties:
        FromPortRange: {description: SecurityGroupRule_FromPortRange, type: integer}
        IpProtocol: {description: SecurityGroupRule_IpProtocol, type: string}
        IpRanges:
          description: SecurityGroupRule_IpRanges
          items: {type: string}
          type: array
        SecurityGroupsMembers:
          description: SecurityGroupRule_SecurityGroupsMembers
          items: {$ref: '#/components/schemas/SecurityGroupsMember'}
          type: array
        ServiceIds:
          description: SecurityGroupRule_ServiceIds
          items: {type: string}
          type: array
        ToPortRange: {description: SecurityGroupRule_ToPortRange, type: integer}
      type: object
    SecurityGroupsMember:
      description: SecurityGroupsMember
      properties:
        AccountId: {description: SecurityGroupsMember_AccountId, type: string}
        SecurityGroupId: {description: SecurityGroupsMember_SecurityGroupId, type: string}
        SecurityGroupName: {description: SecurityGroupsMember_SecurityGroupName, type: string}
      type: object
    SendResetPasswordEmailRequest:
      properties:
        DryRun: {description: SendResetPasswordEmailRequest_DryRun, type: boolean}
        Email: {description: SendResetPasswordEmailRequest_Email, type: string}
      required: [Email]
      type: object
    SendResetPasswordEmailResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    ServerCertificate:
      description: ServerCertificate
      properties:
        Path: {description: ServerCertificate_Path, type: string}
        ServerCertificateId: {description: ServerCertificate_ServerCertificateId,
          type: string}
        ServerCertificateName: {description: ServerCertificate_ServerCertificateName,
          type: string}
      type: object
    Service:
      description: Service
      properties:
        IpRanges:
          description: Service_IpRanges
          items: {type: string}
          type: array
        ServiceId: {description: Service_ServiceId, type: string}
        ServiceName: {description: Service_ServiceName, type: string}
      type: object
    Snapshot:
      description: Snapshot
      properties:
        AccountAlias: {description: Snapshot_AccountAlias, type: string}
        AccountId: {description: Snapshot_AccountId, type: string}
        Description: {description: Snapshot_Description, type: string}
        PermissionsToCreateVolume: {$ref: '#/components/schemas/PermissionsOnResource'}
        Progress: {description: Snapshot_Progress, type: integer}
        SnapshotId: {description: Snapshot_SnapshotId, type: string}
        State: {description: Snapshot_State, type: string}
        Tags:
          description: Snapshot_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        VolumeId: {description: Snapshot_VolumeId, type: string}
        VolumeSize: {description: Snapshot_VolumeSize, type: integer}
      type: object
    SnapshotExportTask:
      description: SnapshotExportTask
      properties:
        Comment: {description: SnapshotExportTask_Comment, type: string}
        OsuExport: {$ref: '#/components/schemas/OsuExport'}
        Progress: {description: SnapshotExportTask_Progress, type: integer}
        SnapshotId: {description: SnapshotExportTask_SnapshotId, type: string}
        State: {description: SnapshotExportTask_State, type: string}
        TaskId: {description: SnapshotExportTask_TaskId, type: string}
      type: object
    SourceNet:
      description: SourceNet
      properties:
        AccountId: {description: SourceNet_AccountId, type: string}
        IpRange: {description: SourceNet_IpRange, type: string}
        NetId: {description: SourceNet_NetId, type: string}
      type: object
    SourceSecurityGroup:
      description: SourceSecurityGroup
      properties:
        SecurityGroupAccountId: {description: SourceSecurityGroup_SecurityGroupAccountId,
          type: string}
        SecurityGroupName: {description: SourceSecurityGroup_SecurityGroupName, type: string}
      type: object
    StartVmsRequest:
      properties:
        DryRun: {description: StartVmsRequest_DryRun, type: boolean}
        VmIds:
          description: StartVmsRequest_VmIds
          items: {type: string}
          type: array
      required: [VmIds]
      type: object
    StartVmsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Vms:
          description: StartVmsResponse_Vms
          items: {$ref: '#/components/schemas/VmState'}
          type: array
      type: object
    StateComment:
      description: StateComment
      properties:
        StateCode: {description: StateComment_StateCode, type: string}
        StateMessage: {description: StateComment_StateMessage, type: string}
      type: object
    StopVmsRequest:
      properties:
        DryRun: {description: StopVmsRequest_DryRun, type: boolean}
        ForceStop: {description: StopVmsRequest_ForceStop, type: boolean}
        VmIds:
          description: StopVmsRequest_VmIds
          items: {type: string}
          type: array
      required: [VmIds]
      type: object
    StopVmsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Vms:
          description: StopVmsResponse_Vms
          items: {$ref: '#/components/schemas/VmState'}
          type: array
      type: object
    Subnet:
      description: Subnet
      properties:
        AvailableIpsCount: {description: Subnet_AvailableIpsCount, type: integer}
        IpRange: {description: Subnet_IpRange, type: string}
        MapPublicIpOnLaunch: {description: Subnet_MapPublicIpOnLaunch, type: boolean}
        NetId: {description: Subnet_NetId, type: string}
        State: {description: Subnet_State, type: string}
        SubnetId: {description: Subnet_SubnetId, type: string}
        SubregionName: {description: Subnet_SubregionName, type: string}
        Tags:
          description: Subnet_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
      type: object
    Subregion:
      description: Subregion
      properties:
        RegionName: {description: Subregion_RegionName, type: string}
        State: {description: Subregion_State, type: string}
        SubregionName: {description: Subregion_SubregionName, type: string}
      type: object
    Tag:
      description: Tag
      properties:
        Key: {description: Tag_Key, type: string}
        ResourceId: {description: Tag_ResourceId, type: string}
        ResourceType: {description: Tag_ResourceType, type: string}
        Value: {description: Tag_Value, type: string}
      type: object
    TargetRegion:
      description: TargetRegion
      properties:
        RegionDomain: {description: TargetRegion_RegionDomain, type: string}
        RegionId: {description: TargetRegion_RegionId, type: string}
        RegionName: {description: TargetRegion_RegionName, type: string}
      type: object
    UnlinkInternetServiceRequest:
      properties:
        DryRun: {description: UnlinkInternetServiceRequest_DryRun, type: boolean}
        InternetServiceId: {description: UnlinkInternetServiceRequest_InternetServiceId,
          type: string}
        NetId: {description: UnlinkInternetServiceRequest_NetId, type: string}
      required: [InternetServiceId, NetId]
      type: object
    UnlinkInternetServiceResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkNicRequest:
      properties:
        DryRun: {description: UnlinkNicRequest_DryRun, type: boolean}
        LinkNicId: {description: UnlinkNicRequest_LinkNicId, type: string}
      required: [LinkNicId]
      type: object
    UnlinkNicResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkPolicyRequest:
      properties:
        DryRun: {description: UnlinkPolicyRequest_DryRun, type: boolean}
        PolicyId: {description: UnlinkPolicyRequest_PolicyId, type: string}
        UserGroupName: {description: UnlinkPolicyRequest_UserGroupName, type: string}
        UserName: {description: UnlinkPolicyRequest_UserName, type: string}
      required: [PolicyId]
      type: object
    UnlinkPolicyResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkPrivateIpsRequest:
      properties:
        DryRun: {description: UnlinkPrivateIpsRequest_DryRun, type: boolean}
        NicId: {description: UnlinkPrivateIpsRequest_NicId, type: string}
        PrivateIps:
          description: UnlinkPrivateIpsRequest_PrivateIps
          items: {type: string}
          type: array
      required: [NicId, PrivateIps]
      type: object
    UnlinkPrivateIpsResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkPublicIpRequest:
      properties:
        DryRun: {description: UnlinkPublicIpRequest_DryRun, type: boolean}
        LinkPublicIpId: {description: UnlinkPublicIpRequest_LinkPublicIpId, type: string}
        PublicIp: {description: UnlinkPublicIpRequest_PublicIp, type: string}
      type: object
    UnlinkPublicIpResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkRouteTableRequest:
      properties:
        DryRun: {description: UnlinkRouteTableRequest_DryRun, type: boolean}
        LinkRouteTableId: {description: UnlinkRouteTableRequest_LinkRouteTableId,
          type: string}
      required: [LinkRouteTableId]
      type: object
    UnlinkRouteTableResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkVirtualGatewayRequest:
      properties:
        DryRun: {description: UnlinkVirtualGatewayRequest_DryRun, type: boolean}
        NetId: {description: UnlinkVirtualGatewayRequest_NetId, type: string}
        VirtualGatewayId: {description: UnlinkVirtualGatewayRequest_VirtualGatewayId,
          type: string}
      required: [NetId, VirtualGatewayId]
      type: object
    UnlinkVirtualGatewayResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UnlinkVolumeRequest:
      properties:
        DryRun: {description: UnlinkVolumeRequest_DryRun, type: boolean}
        ForceUnlink: {description: UnlinkVolumeRequest_ForceUnlink, type: boolean}
        VolumeId: {description: UnlinkVolumeRequest_VolumeId, type: string}
      required: [VolumeId]
      type: object
    UnlinkVolumeResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateAccountRequest:
      properties:
        City: {description: UpdateAccountRequest_City, type: string}
        CompanyName: {description: UpdateAccountRequest_CompanyName, type: string}
        Country: {description: UpdateAccountRequest_Country, type: string}
        DryRun: {description: UpdateAccountRequest_DryRun, type: boolean}
        Email: {description: UpdateAccountRequest_Email, type: string}
        FirstName: {description: UpdateAccountRequest_FirstName, type: string}
        JobTitle: {description: UpdateAccountRequest_JobTitle, type: string}
        LastName: {description: UpdateAccountRequest_LastName, type: string}
        Mobile: {description: UpdateAccountRequest_Mobile, type: string}
        Password: {description: UpdateAccountRequest_Password, type: string}
        Phone: {description: UpdateAccountRequest_Phone, type: string}
        StateProvince: {description: UpdateAccountRequest_StateProvince, type: string}
        VatNumber: {description: UpdateAccountRequest_VatNumber, type: string}
        ZipCode: {description: UpdateAccountRequest_ZipCode, type: string}
      type: object
    UpdateAccountResponse:
      properties:
        Account: {$ref: '#/components/schemas/Account'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateApiKeyRequest:
      properties:
        ApiKeyId: {description: UpdateApiKeyRequest_ApiKeyId, type: string}
        DryRun: {description: UpdateApiKeyRequest_DryRun, type: boolean}
        State: {description: UpdateApiKeyRequest_State, type: string}
      required: [ApiKeyId, State]
      type: object
    UpdateApiKeyResponse:
      properties:
        ApiKey: {$ref: '#/components/schemas/ApiKey'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateImageRequest:
      properties:
        DryRun: {description: UpdateImageRequest_DryRun, type: boolean}
        ImageId: {description: UpdateImageRequest_ImageId, type: string}
        PermissionsToLaunch: {$ref: '#/components/schemas/PermissionsOnResourceCreation'}
      required: [ImageId, PermissionsToLaunch]
      type: object
    UpdateImageResponse:
      properties:
        Image: {$ref: '#/components/schemas/Image'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateKeypairRequest:
      properties:
        DryRun: {description: UpdateKeypairRequest_DryRun, type: boolean}
        KeypairName: {description: UpdateKeypairRequest_KeypairName, type: string}
        PublicKey: {description: UpdateKeypairRequest_PublicKey, type: string}
      required: [KeypairName, PublicKey]
      type: object
    UpdateKeypairResponse:
      properties:
        Keypair: {$ref: '#/components/schemas/Keypair'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateListenerRuleRequest:
      properties:
        DryRun: {description: UpdateListenerRuleRequest_DryRun, type: boolean}
        HostPattern: {description: UpdateListenerRuleRequest_HostPattern, type: string}
        ListenerRuleName: {description: UpdateListenerRuleRequest_ListenerRuleName,
          type: string}
        PathPattern: {description: UpdateListenerRuleRequest_PathPattern, type: string}
      required: [ListenerRuleName]
      type: object
    UpdateListenerRuleResponse:
      properties:
        ListenerRule: {$ref: '#/components/schemas/ListenerRule'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateLoadBalancerRequest:
      properties:
        AccessLog: {$ref: '#/components/schemas/AccessLog'}
        DryRun: {description: UpdateLoadBalancerRequest_DryRun, type: boolean}
        HealthCheck: {$ref: '#/components/schemas/HealthCheck'}
        LoadBalancerName: {description: UpdateLoadBalancerRequest_LoadBalancerName,
          type: string}
        LoadBalancerPort: {description: UpdateLoadBalancerRequest_LoadBalancerPort,
          type: integer}
        PolicyNames:
          description: UpdateLoadBalancerRequest_PolicyNames
          items: {type: string}
          type: array
        ServerCertificateId: {description: UpdateLoadBalancerRequest_ServerCertificateId,
          type: string}
      required: [LoadBalancerName]
      type: object
    UpdateLoadBalancerResponse:
      properties:
        LoadBalancer: {$ref: '#/components/schemas/LoadBalancer'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateNetAccessPointRequest:
      properties:
        AddRouteTableIds:
          description: UpdateNetAccessPointRequest_AddRouteTableIds
          items: {type: string}
          type: array
        DryRun: {description: UpdateNetAccessPointRequest_DryRun, type: boolean}
        NetAccessPointId: {description: UpdateNetAccessPointRequest_NetAccessPointId,
          type: string}
        RemoveRouteTableIds:
          description: UpdateNetAccessPointRequest_RemoveRouteTableIds
          items: {type: string}
          type: array
      required: [NetAccessPointId]
      type: object
    UpdateNetAccessPointResponse:
      properties:
        NetAccessPoint: {$ref: '#/components/schemas/NetAccessPoint'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateNetRequest:
      properties:
        DhcpOptionsSetId: {description: UpdateNetRequest_DhcpOptionsSetId, type: string}
        DryRun: {description: UpdateNetRequest_DryRun, type: boolean}
        NetId: {description: UpdateNetRequest_NetId, type: string}
      required: [DhcpOptionsSetId, NetId]
      type: object
    UpdateNetResponse:
      properties:
        Net: {$ref: '#/components/schemas/Net'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateNicRequest:
      properties:
        Description: {description: UpdateNicRequest_Description, type: string}
        DryRun: {description: UpdateNicRequest_DryRun, type: boolean}
        LinkNic: {$ref: '#/components/schemas/LinkNicToUpdate'}
        NicId: {description: UpdateNicRequest_NicId, type: string}
        SecurityGroupIds:
          description: UpdateNicRequest_SecurityGroupIds
          items: {type: string}
          type: array
      required: [NicId]
      type: object
    UpdateNicResponse:
      properties:
        Nic: {$ref: '#/components/schemas/Nic'}
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
      type: object
    UpdateRoutePropagationRequest:
      properties:
        DryRun: {description: UpdateRoutePropagationRequest_DryRun, type: boolean}
        Enable: {description: UpdateRoutePropagationRequest_Enable, type: boolean}
        RouteTableId: {description: UpdateRoutePropagationRequest_RouteTableId, type: string}
        VirtualGatewayId: {description: UpdateRoutePropagationRequest_VirtualGatewayId,
          type: string}
      required: [Enable, RouteTableId, VirtualGatewayId]
      type: object
    UpdateRoutePropagationResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        RouteTable: {$ref: '#/components/schemas/RouteTable'}
      type: object
    UpdateRouteRequest:
      properties:
        DestinationIpRange: {description: UpdateRouteRequest_DestinationIpRange, type: string}
        DryRun: {description: UpdateRouteRequest_DryRun, type: boolean}
        GatewayId: {description: UpdateRouteRequest_GatewayId, type: string}
        NatServiceId: {description: UpdateRouteRequest_NatServiceId, type: string}
        NetPeeringId: {description: UpdateRouteRequest_NetPeeringId, type: string}
        NicId: {description: UpdateRouteRequest_NicId, type: string}
        RouteTableId: {description: UpdateRouteRequest_RouteTableId, type: string}
        VmId: {description: UpdateRouteRequest_VmId, type: string}
      required: [RouteTableId, DestinationIpRange]
      type: object
    UpdateRouteResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        RouteTable: {$ref: '#/components/schemas/RouteTable'}
      type: object
    UpdateServerCertificateRequest:
      properties:
        DryRun: {description: UpdateServerCertificateRequest_DryRun, type: boolean}
        NewPath: {description: UpdateServerCertificateRequest_NewPath, type: string}
        NewServerCertificateName: {description: UpdateServerCertificateRequest_NewServerCertificateName,
          type: string}
        ServerCertificateName: {description: UpdateServerCertificateRequest_ServerCertificateName,
          type: string}
      required: [ServerCertificateName]
      type: object
    UpdateServerCertificateResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        ServerCertificate: {$ref: '#/components/schemas/ServerCertificate'}
      type: object
    UpdateSnapshotRequest:
      properties:
        DryRun: {description: UpdateSnapshotRequest_DryRun, type: boolean}
        PermissionsToCreateVolume: {$ref: '#/components/schemas/PermissionsOnResourceCreation'}
        SnapshotId: {description: UpdateSnapshotRequest_SnapshotId, type: string}
      required: [SnapshotId, PermissionsToCreateVolume]
      type: object
    UpdateSnapshotResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Snapshot: {$ref: '#/components/schemas/Snapshot'}
      type: object
    UpdateSubnetRequest:
      properties:
        DryRun: {description: UpdateSubnetRequest_DryRun, type: boolean}
        MapPublicIpOnLaunch: {description: UpdateSubnetRequest_MapPublicIpOnLaunch,
          type: boolean}
        SubnetId: {description: UpdateSubnetRequest_SubnetId, type: string}
      required: [SubnetId, MapPublicIpOnLaunch]
      type: object
    UpdateSubnetResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Subnet: {$ref: '#/components/schemas/Subnet'}
      type: object
    UpdateUserGroupRequest:
      properties:
        DryRun: {description: UpdateUserGroupRequest_DryRun, type: boolean}
        NewPath: {description: UpdateUserGroupRequest_NewPath, type: string}
        NewUserGroupName: {description: UpdateUserGroupRequest_NewUserGroupName, type: string}
        UserGroupName: {description: UpdateUserGroupRequest_UserGroupName, type: string}
      required: [UserGroupName]
      type: object
    UpdateUserGroupResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        UserGroup: {$ref: '#/components/schemas/UserGroup'}
      type: object
    UpdateUserRequest:
      properties:
        DryRun: {description: UpdateUserRequest_DryRun, type: boolean}
        NewPath: {description: UpdateUserRequest_NewPath, type: string}
        NewUserName: {description: UpdateUserRequest_NewUserName, type: string}
        UserName: {description: UpdateUserRequest_UserName, type: string}
      required: [UserName]
      type: object
    UpdateUserResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        User: {$ref: '#/components/schemas/User'}
      type: object
    UpdateVmRequest:
      properties:
        BlockDeviceMappings:
          description: UpdateVmRequest_BlockDeviceMappings
          items: {$ref: '#/components/schemas/BlockDeviceMappingVmUpdate'}
          type: array
        BsuOptimized: {description: UpdateVmRequest_BsuOptimized, type: boolean}
        DeletionProtection: {description: UpdateVmRequest_DeletionProtection, type: boolean}
        DryRun: {description: UpdateVmRequest_DryRun, type: boolean}
        IsSourceDestChecked: {description: UpdateVmRequest_IsSourceDestChecked, type: boolean}
        KeypairName: {description: UpdateVmRequest_KeypairName, type: string}
        SecurityGroupIds:
          description: UpdateVmRequest_SecurityGroupIds
          items: {type: string}
          type: array
        UserData: {description: UpdateVmRequest_UserData, type: string}
        VmId: {description: UpdateVmRequest_VmId, type: string}
        VmInitiatedShutdownBehavior: {description: UpdateVmRequest_VmInitiatedShutdownBehavior,
          type: string}
        VmType: {description: UpdateVmRequest_VmType, type: string}
      required: [VmId]
      type: object
    UpdateVmResponse:
      properties:
        ResponseContext: {$ref: '#/components/schemas/ResponseContext'}
        Vm: {$ref: '#/components/schemas/Vm'}
      type: object
    User:
      description: User
      properties:
        Path: {description: User_Path, type: string}
        UserId: {description: User_UserId, type: string}
        UserName: {description: User_UserName, type: string}
      type: object
    UserGroup:
      description: UserGroup
      properties:
        Path: {description: UserGroup_Path, type: string}
        UserGroupId: {description: UserGroup_UserGroupId, type: string}
        UserGroupName: {description: UserGroup_UserGroupName, type: string}
      type: object
    VirtualGateway:
      description: VirtualGateway
      properties:
        ConnectionType: {description: VirtualGateway_ConnectionType, type: string}
        NetToVirtualGatewayLinks:
          description: VirtualGateway_NetToVirtualGatewayLinks
          items: {$ref: '#/components/schemas/NetToVirtualGatewayLink'}
          type: array
        State: {description: VirtualGateway_State, type: string}
        Tags:
          description: VirtualGateway_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        VirtualGatewayId: {description: VirtualGateway_VirtualGatewayId, type: string}
      type: object
    Vm:
      description: Vm
      properties:
        Architecture: {description: Vm_Architecture, type: string}
        BlockDeviceMappings:
          description: Vm_BlockDeviceMappings
          items: {$ref: '#/components/schemas/BlockDeviceMappingCreated'}
          type: array
        BsuOptimized: {description: Vm_BsuOptimized, type: boolean}
        ClientToken: {description: Vm_ClientToken, type: string}
        DeletionProtection: {description: Vm_DeletionProtection, type: boolean}
        Hypervisor: {description: Vm_Hypervisor, type: string}
        ImageId: {description: Vm_ImageId, type: string}
        IsSourceDestChecked: {description: Vm_IsSourceDestChecked, type: boolean}
        KeypairName: {description: Vm_KeypairName, type: string}
        LaunchNumber: {description: Vm_LaunchNumber, type: integer}
        NetId: {description: Vm_NetId, type: string}
        Nics:
          description: Vm_Nics
          items: {$ref: '#/components/schemas/NicLight'}
          type: array
        OsFamily: {description: Vm_OsFamily, type: string}
        Placement: {$ref: '#/components/schemas/Placement'}
        PrivateDnsName: {description: Vm_PrivateDnsName, type: string}
        PrivateIp: {description: Vm_PrivateIp, type: string}
        ProductCodes:
          description: Vm_ProductCodes
          items: {type: string}
          type: array
        PublicDnsName: {description: Vm_PublicDnsName, type: string}
        PublicIp: {description: Vm_PublicIp, type: string}
        ReservationId: {description: Vm_ReservationId, type: string}
        RootDeviceName: {description: Vm_RootDeviceName, type: string}
        RootDeviceType: {description: Vm_RootDeviceType, type: string}
        SecurityGroups:
          description: Vm_SecurityGroups
          items: {$ref: '#/components/schemas/SecurityGroupLight'}
          type: array
        State: {description: Vm_State, type: string}
        StateReason: {description: Vm_StateReason, type: string}
        SubnetId: {description: Vm_SubnetId, type: string}
        Tags:
          description: Vm_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        UserData: {description: Vm_UserData, type: string}
        VmId: {description: Vm_VmId, type: string}
        VmInitiatedShutdownBehavior: {description: Vm_VmInitiatedShutdownBehavior,
          type: string}
        VmType: {description: Vm_VmType, type: string}
      type: object
    VmState:
      description: VmState
      properties:
        CurrentState: {description: VmState_CurrentState, type: string}
        PreviousState: {description: VmState_PreviousState, type: string}
        VmId: {description: VmState_VmId, type: string}
      type: object
    VmStates:
      description: VmStates
      properties:
        MaintenanceEvents:
          description: VmStates_MaintenanceEvents
          items: {$ref: '#/components/schemas/MaintenanceEvent'}
          type: array
        SubregionName: {description: VmStates_SubregionName, type: string}
        VmId: {description: VmStates_VmId, type: string}
        VmState: {description: VmStates_VmState, type: string}
      type: object
    VmType:
      description: VmType
      properties:
        IsBsuOptimized: {description: VmType_IsBsuOptimized, type: boolean}
        MaxPrivateIps: {description: VmType_MaxPrivateIps, type: integer}
        MemorySize: {description: VmType_MemorySize, format: float, type: number}
        VcoreCount: {description: VmType_VcoreCount, type: integer}
        VmTypeName: {description: VmType_VmTypeName, type: string}
        VolumeCount: {description: VmType_VolumeCount, type: integer}
        VolumeSize: {description: VmType_VolumeSize, type: integer}
      type: object
    Volume:
      description: Volume
      properties:
        Iops: {description: Volume_Iops, type: integer}
        LinkedVolumes:
          description: Volume_LinkedVolumes
          items: {$ref: '#/components/schemas/LinkedVolume'}
          type: array
        Size: {description: Volume_Size, type: integer}
        SnapshotId: {description: Volume_SnapshotId, type: string}
        State: {description: Volume_State, type: string}
        SubregionName: {description: Volume_SubregionName, type: string}
        Tags:
          description: Volume_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        VolumeId: {description: Volume_VolumeId, type: string}
        VolumeType: {description: Volume_VolumeType, type: string}
      type: object
    VpnConnection:
      description: VpnConnection
      properties:
        ClientGatewayConfiguration: {description: VpnConnection_ClientGatewayConfiguration,
          type: string}
        ClientGatewayId: {description: VpnConnection_ClientGatewayId, type: string}
        ConnectionType: {description: VpnConnection_ConnectionType, type: string}
        Routes:
          description: VpnConnection_Routes
          items: {$ref: '#/components/schemas/RouteLight'}
          type: array
        State: {description: VpnConnection_State, type: string}
        StaticRoutesOnly: {description: VpnConnection_StaticRoutesOnly, type: boolean}
        Tags:
          description: VpnConnection_Tags
          items: {$ref: '#/components/schemas/ResourceTag'}
          type: array
        VirtualGatewayId: {description: VpnConnection_VirtualGatewayId, type: string}
        VpnConnectionId: {description: VpnConnection_VpnConnectionId, type: string}
      type: object
    With:
      description: With
      properties:
        AccountId: {description: With_AccountId, type: boolean}
        CallDuration: {description: With_CallDuration, type: boolean}
        QueryAccessKey: {description: With_QueryAccessKey, type: boolean}
        QueryApiName: {description: With_QueryApiName, type: boolean}
        QueryApiVersion: {description: With_QueryApiVersion, type: boolean}
        QueryCallName: {description: With_QueryCallName, type: boolean}
        QueryDate: {description: With_QueryDate, type: boolean}
        QueryHeaderRaw: {description: With_QueryHeaderRaw, type: boolean}
        QueryHeaderSize: {description: With_QueryHeaderSize, type: boolean}
        QueryIpAddress: {description: With_QueryIpAddress, type: boolean}
        QueryPayloadRaw: {description: With_QueryPayloadRaw, type: boolean}
        QueryPayloadSize: {description: With_QueryPayloadSize, type: boolean}
        QueryUserAgent: {description: With_QueryUserAgent, type: boolean}
        RequestId: {description: With_RequestId, type: boolean}
        ResponseSize: {description: With_ResponseSize, type: boolean}
        ResponseStatusCode: {description: With_ResponseStatusCode, type: boolean}
      type: object
  securitySchemes:
    ApiKeyAuth: {description: SecuritySchemes_ApiKeyAuth, in: header, name: Authorization,
      type: apiKey}
info:
  contact: {email: support@outscale.com}
  description: Info_Description
  license: {name: BSD 3 Clause, url: 'https://opensource.org/licenses/BSD-3-Clause'}
  termsOfService: https://en.outscale.com/terms-of-service/
  title: OUTSCALE API
  version: '0.11'
  x-release_date: '2019-04-09'
openapi: 3.0.0
paths:
  /AcceptNetPeering:
    description: _AcceptNetPeering
    post:
      operationId: AcceptNetPeering
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AcceptNetPeeringRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AcceptNetPeeringResponse'}
          description: AcceptNetPeering_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: AcceptNetPeering_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: AcceptNetPeering_Responses_401
        '409':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: AcceptNetPeering_Responses_409
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: AcceptNetPeering_Responses_500
      tags: [NetPeering]
  /AuthenticateAccount:
    description: _AuthenticateAccount
    post:
      operationId: AuthenticateAccount
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AuthenticateAccountRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AuthenticateAccountResponse'}
          description: AuthenticateAccount_Responses_200
      tags: [Account]
  /CheckSignature:
    description: _CheckSignature
    post:
      operationId: CheckSignature
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CheckSignatureRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CheckSignatureResponse'}
          description: CheckSignature_Responses_200
      tags: [Signature]
  /CopyAccount:
    description: _CopyAccount
    post:
      operationId: CopyAccount
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CopyAccountRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CopyAccountResponse'}
          description: CopyAccount_Responses_200
      tags: [Account]
  /CreateAccount:
    description: _CreateAccount
    post:
      operationId: CreateAccount
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateAccountRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateAccountResponse'}
          description: CreateAccount_Responses_200
      tags: [Account]
  /CreateApiKey:
    description: _CreateApiKey
    post:
      operationId: CreateApiKey
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateApiKeyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateApiKeyResponse'}
          description: CreateApiKey_Responses_200
      tags: [ApiKey]
  /CreateClientGateway:
    description: _CreateClientGateway
    post:
      operationId: CreateClientGateway
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateClientGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateClientGatewayResponse'}
          description: CreateClientGateway_Responses_200
      tags: [ClientGateway]
  /CreateDhcpOptions:
    description: _CreateDhcpOptions
    post:
      operationId: CreateDhcpOptions
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateDhcpOptionsResponse'}
          description: CreateDhcpOptions_Responses_200
      tags: [DhcpOption]
  /CreateDirectLink:
    description: _CreateDirectLink
    post:
      operationId: CreateDirectLink
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateDirectLinkRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateDirectLinkResponse'}
          description: CreateDirectLink_Responses_200
      tags: [DirectLink]
  /CreateDirectLinkInterface:
    description: _CreateDirectLinkInterface
    post:
      operationId: CreateDirectLinkInterface
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateDirectLinkInterfaceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateDirectLinkInterfaceResponse'}
          description: CreateDirectLinkInterface_Responses_200
      tags: [DirectLinkInterface]
  /CreateImage:
    description: _CreateImage
    post:
      operationId: CreateImage
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateImageResponse'}
          description: CreateImage_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateImage_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateImage_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateImage_Responses_500
      tags: [Image]
  /CreateImageExportTask:
    description: _CreateImageExportTask
    post:
      operationId: CreateImageExportTask
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateImageExportTaskRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateImageExportTaskResponse'}
          description: CreateImageExportTask_Responses_200
      tags: [Image]
  /CreateInternetService:
    description: _CreateInternetService
    post:
      operationId: CreateInternetService
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateInternetServiceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateInternetServiceResponse'}
          description: CreateInternetService_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateInternetService_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateInternetService_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateInternetService_Responses_500
      tags: [InternetService]
  /CreateKeypair:
    description: _CreateKeypair
    post:
      operationId: CreateKeypair
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateKeypairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateKeypairResponse'}
          description: CreateKeypair_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateKeypair_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateKeypair_Responses_401
        '409':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateKeypair_Responses_409
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateKeypair_Responses_500
      tags: [Keypair]
  /CreateListenerRule:
    description: _CreateListenerRule
    post:
      operationId: CreateListenerRule
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateListenerRuleRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateListenerRuleResponse'}
          description: CreateListenerRule_Responses_200
      tags: [Listener]
  /CreateLoadBalancer:
    description: _CreateLoadBalancer
    post:
      operationId: CreateLoadBalancer
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateLoadBalancerRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateLoadBalancerResponse'}
          description: CreateLoadBalancer_Responses_200
      tags: [LoadBalancer]
  /CreateLoadBalancerListeners:
    description: _CreateLoadBalancerListeners
    post:
      operationId: CreateLoadBalancerListeners
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateLoadBalancerListenersRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateLoadBalancerListenersResponse'}
          description: CreateLoadBalancerListeners_Responses_200
      tags: [Listener]
  /CreateLoadBalancerPolicy:
    description: _CreateLoadBalancerPolicy
    post:
      operationId: CreateLoadBalancerPolicy
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateLoadBalancerPolicyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateLoadBalancerPolicyResponse'}
          description: CreateLoadBalancerPolicy_Responses_200
      tags: [LoadBalancerPolicy]
  /CreateNatService:
    description: _CreateNatService
    post:
      operationId: CreateNatService
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNatServiceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNatServiceResponse'}
          description: CreateNatService_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNatService_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNatService_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNatService_Responses_500
      tags: [NatService]
  /CreateNet:
    description: _CreateNet
    post:
      operationId: CreateNet
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNetResponse'}
          description: CreateNet_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNet_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNet_Responses_401
        '409':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNet_Responses_409
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNet_Responses_500
      tags: [Net]
  /CreateNetAccessPoint:
    description: _CreateNetAccessPoint
    post:
      operationId: CreateNetAccessPoint
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNetAccessPointRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNetAccessPointResponse'}
          description: CreateNetAccessPoint_Responses_200
      tags: [NetAccessPoint]
  /CreateNetPeering:
    description: _CreateNetPeering
    post:
      operationId: CreateNetPeering
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNetPeeringRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNetPeeringResponse'}
          description: CreateNetPeering_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNetPeering_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNetPeering_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNetPeering_Responses_500
      tags: [NetPeering]
  /CreateNic:
    description: _CreateNic
    post:
      operationId: CreateNic
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNicRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNicResponse'}
          description: CreateNic_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNic_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNic_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateNic_Responses_500
      tags: [Nic]
  /CreatePolicy:
    description: _CreatePolicy
    post:
      operationId: CreatePolicy
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreatePolicyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreatePolicyResponse'}
          description: CreatePolicy_Responses_200
      tags: [Policy]
  /CreatePublicIp:
    description: _CreatePublicIp
    post:
      operationId: CreatePublicIp
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreatePublicIpRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreatePublicIpResponse'}
          description: CreatePublicIp_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreatePublicIp_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreatePublicIp_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreatePublicIp_Responses_500
      tags: [PublicIp]
  /CreateRoute:
    description: _CreateRoute
    post:
      operationId: CreateRoute
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateRouteResponse'}
          description: CreateRoute_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateRoute_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateRoute_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateRoute_Responses_500
      tags: [Route]
  /CreateRouteTable:
    description: _CreateRouteTable
    post:
      operationId: CreateRouteTable
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateRouteTableResponse'}
          description: CreateRouteTable_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateRouteTable_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateRouteTable_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateRouteTable_Responses_500
      tags: [RouteTable]
  /CreateSecurityGroup:
    description: _CreateSecurityGroup
    post:
      operationId: CreateSecurityGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSecurityGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSecurityGroupResponse'}
          description: CreateSecurityGroup_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSecurityGroup_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSecurityGroup_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSecurityGroup_Responses_500
      tags: [SecurityGroup]
  /CreateSecurityGroupRule:
    description: _CreateSecurityGroupRule
    post:
      operationId: CreateSecurityGroupRule
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSecurityGroupRuleRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSecurityGroupRuleResponse'}
          description: CreateSecurityGroupRule_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSecurityGroupRule_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSecurityGroupRule_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSecurityGroupRule_Responses_500
      tags: [SecurityGroupRule]
  /CreateServerCertificate:
    description: _CreateServerCertificate
    post:
      operationId: CreateServerCertificate
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateServerCertificateRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateServerCertificateResponse'}
          description: CreateServerCertificate_Responses_200
      tags: [ServerCertificate]
  /CreateSnapshot:
    description: _CreateSnapshot
    post:
      operationId: CreateSnapshot
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSnapshotResponse'}
          description: CreateSnapshot_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSnapshot_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSnapshot_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSnapshot_Responses_500
      tags: [Snapshot]
  /CreateSnapshotExportTask:
    description: _CreateSnapshotExportTask
    post:
      operationId: CreateSnapshotExportTask
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSnapshotExportTaskRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSnapshotExportTaskResponse'}
          description: CreateSnapshotExportTask_Responses_200
      tags: [Snapshot]
  /CreateSubnet:
    description: _CreateSubnet
    post:
      operationId: CreateSubnet
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSubnetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSubnetResponse'}
          description: CreateSubnet_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSubnet_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSubnet_Responses_401
        '409':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSubnet_Responses_409
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateSubnet_Responses_500
      tags: [Subnet]
  /CreateTags:
    description: _CreateTags
    post:
      operationId: CreateTags
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateTagsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateTagsResponse'}
          description: CreateTags_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateTags_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateTags_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateTags_Responses_500
      tags: [Tag]
  /CreateUser:
    description: _CreateUser
    post:
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateUserRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateUserResponse'}
          description: CreateUser_Responses_200
      tags: [User]
  /CreateUserGroup:
    description: _CreateUserGroup
    post:
      operationId: CreateUserGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateUserGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateUserGroupResponse'}
          description: CreateUserGroup_Responses_200
      tags: [UserGroup]
  /CreateVirtualGateway:
    description: _CreateVirtualGateway
    post:
      operationId: CreateVirtualGateway
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVirtualGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVirtualGatewayResponse'}
          description: CreateVirtualGateway_Responses_200
      tags: [VirtualGateway]
  /CreateVms:
    description: _CreateVms
    post:
      operationId: CreateVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVmsResponse'}
          description: CreateVms_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateVms_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateVms_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateVms_Responses_500
      tags: [Vm]
  /CreateVolume:
    description: _CreateVolume
    post:
      operationId: CreateVolume
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVolumeResponse'}
          description: CreateVolume_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateVolume_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateVolume_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: CreateVolume_Responses_500
      tags: [Volume]
  /CreateVpnConnection:
    description: _CreateVpnConnection
    post:
      operationId: CreateVpnConnection
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpnConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpnConnectionResponse'}
          description: CreateVpnConnection_Responses_200
      tags: [VpnConnection]
  /CreateVpnConnectionRoute:
    description: _CreateVpnConnectionRoute
    post:
      operationId: CreateVpnConnectionRoute
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpnConnectionRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpnConnectionRouteResponse'}
          description: CreateVpnConnectionRoute_Responses_200
      tags: [VpnConnection]
  /DeleteApiKey:
    description: _DeleteApiKey
    post:
      operationId: DeleteApiKey
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteApiKeyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteApiKeyResponse'}
          description: DeleteApiKey_Responses_200
      tags: [ApiKey]
  /DeleteClientGateway:
    description: _DeleteClientGateway
    post:
      operationId: DeleteClientGateway
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteClientGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteClientGatewayResponse'}
          description: DeleteClientGateway_Responses_200
      tags: [ClientGateway]
  /DeleteDhcpOptions:
    description: _DeleteDhcpOptions
    post:
      operationId: DeleteDhcpOptions
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteDhcpOptionsResponse'}
          description: DeleteDhcpOptions_Responses_200
      tags: [DhcpOption]
  /DeleteDirectLink:
    description: _DeleteDirectLink
    post:
      operationId: DeleteDirectLink
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteDirectLinkRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteDirectLinkResponse'}
          description: DeleteDirectLink_Responses_200
      tags: [DirectLink]
  /DeleteDirectLinkInterface:
    description: _DeleteDirectLinkInterface
    post:
      operationId: DeleteDirectLinkInterface
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteDirectLinkInterfaceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteDirectLinkInterfaceResponse'}
          description: DeleteDirectLinkInterface_Responses_200
      tags: [DirectLinkInterface]
  /DeleteExportTask:
    description: _DeleteExportTask
    post:
      operationId: DeleteExportTask
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteExportTaskRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteExportTaskResponse'}
          description: DeleteExportTask_Responses_200
      tags: [Task]
  /DeleteImage:
    description: _DeleteImage
    post:
      operationId: DeleteImage
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteImageResponse'}
          description: DeleteImage_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteImage_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteImage_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteImage_Responses_500
      tags: [Image]
  /DeleteInternetService:
    description: _DeleteInternetService
    post:
      operationId: DeleteInternetService
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteInternetServiceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteInternetServiceResponse'}
          description: DeleteInternetService_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteInternetService_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteInternetService_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteInternetService_Responses_500
      tags: [InternetService]
  /DeleteKeypair:
    description: _DeleteKeypair
    post:
      operationId: DeleteKeypair
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteKeypairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteKeypairResponse'}
          description: DeleteKeypair_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteKeypair_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteKeypair_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteKeypair_Responses_500
      tags: [Keypair]
  /DeleteListenerRule:
    description: _DeleteListenerRule
    post:
      operationId: DeleteListenerRule
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteListenerRuleRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteListenerRuleResponse'}
          description: DeleteListenerRule_Responses_200
      tags: [Listener]
  /DeleteLoadBalancer:
    description: _DeleteLoadBalancer
    post:
      operationId: DeleteLoadBalancer
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteLoadBalancerRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteLoadBalancerResponse'}
          description: DeleteLoadBalancer_Responses_200
      tags: [LoadBalancer]
  /DeleteLoadBalancerListeners:
    description: _DeleteLoadBalancerListeners
    post:
      operationId: DeleteLoadBalancerListeners
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteLoadBalancerListenersRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteLoadBalancerListenersResponse'}
          description: DeleteLoadBalancerListeners_Responses_200
      tags: [Listener]
  /DeleteLoadBalancerPolicy:
    description: _DeleteLoadBalancerPolicy
    post:
      operationId: DeleteLoadBalancerPolicy
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteLoadBalancerPolicyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteLoadBalancerPolicyResponse'}
          description: DeleteLoadBalancerPolicy_Responses_200
      tags: [LoadBalancerPolicy]
  /DeleteNatService:
    description: _DeleteNatService
    post:
      operationId: DeleteNatService
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNatServiceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNatServiceResponse'}
          description: DeleteNatService_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNatService_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNatService_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNatService_Responses_500
      tags: [NatService]
  /DeleteNet:
    description: _DeleteNet
    post:
      operationId: DeleteNet
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNetResponse'}
          description: DeleteNet_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNet_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNet_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNet_Responses_500
      tags: [Net]
  /DeleteNetAccessPoint:
    description: _DeleteNetAccessPoint
    post:
      operationId: DeleteNetAccessPoint
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNetAccessPointRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNetAccessPointResponse'}
          description: DeleteNetAccessPoint_Responses_200
      tags: [NetAccessPoint]
  /DeleteNetPeering:
    description: _DeleteNetPeering
    post:
      operationId: DeleteNetPeering
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNetPeeringRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNetPeeringResponse'}
          description: DeleteNetPeering_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNetPeering_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNetPeering_Responses_401
        '409':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNetPeering_Responses_409
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNetPeering_Responses_500
      tags: [NetPeering]
  /DeleteNic:
    description: _DeleteNic
    post:
      operationId: DeleteNic
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNicRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNicResponse'}
          description: DeleteNic_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNic_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNic_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteNic_Responses_500
      tags: [Nic]
  /DeletePolicy:
    description: _DeletePolicy
    post:
      operationId: DeletePolicy
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeletePolicyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeletePolicyResponse'}
          description: DeletePolicy_Responses_200
      tags: [Policy]
  /DeletePublicIp:
    description: _DeletePublicIp
    post:
      operationId: DeletePublicIp
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeletePublicIpRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeletePublicIpResponse'}
          description: DeletePublicIp_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeletePublicIp_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeletePublicIp_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeletePublicIp_Responses_500
      tags: [PublicIp]
  /DeleteRoute:
    description: _DeleteRoute
    post:
      operationId: DeleteRoute
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteRouteResponse'}
          description: DeleteRoute_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteRoute_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteRoute_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteRoute_Responses_500
      tags: [Route]
  /DeleteRouteTable:
    description: _DeleteRouteTable
    post:
      operationId: DeleteRouteTable
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteRouteTableResponse'}
          description: DeleteRouteTable_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteRouteTable_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteRouteTable_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteRouteTable_Responses_500
      tags: [RouteTable]
  /DeleteSecurityGroup:
    description: _DeleteSecurityGroup
    post:
      operationId: DeleteSecurityGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSecurityGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSecurityGroupResponse'}
          description: DeleteSecurityGroup_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSecurityGroup_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSecurityGroup_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSecurityGroup_Responses_500
      tags: [SecurityGroup]
  /DeleteSecurityGroupRule:
    description: _DeleteSecurityGroupRule
    post:
      operationId: DeleteSecurityGroupRule
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSecurityGroupRuleRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSecurityGroupRuleResponse'}
          description: DeleteSecurityGroupRule_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSecurityGroupRule_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSecurityGroupRule_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSecurityGroupRule_Responses_500
      tags: [SecurityGroupRule]
  /DeleteServerCertificate:
    description: _DeleteServerCertificate
    post:
      operationId: DeleteServerCertificate
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteServerCertificateRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteServerCertificateResponse'}
          description: DeleteServerCertificate_Responses_200
      tags: [ServerCertificate]
  /DeleteSnapshot:
    description: _DeleteSnapshot
    post:
      operationId: DeleteSnapshot
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSnapshotResponse'}
          description: DeleteSnapshot_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSnapshot_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSnapshot_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSnapshot_Responses_500
      tags: [Snapshot]
  /DeleteSubnet:
    description: _DeleteSubnet
    post:
      operationId: DeleteSubnet
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSubnetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSubnetResponse'}
          description: DeleteSubnet_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSubnet_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSubnet_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteSubnet_Responses_500
      tags: [Subnet]
  /DeleteTags:
    description: _DeleteTags
    post:
      operationId: DeleteTags
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteTagsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteTagsResponse'}
          description: DeleteTags_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteTags_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteTags_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteTags_Responses_500
      tags: [Tag]
  /DeleteUser:
    description: _DeleteUser
    post:
      operationId: DeleteUser
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteUserRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteUserResponse'}
          description: DeleteUser_Responses_200
      tags: [User]
  /DeleteUserGroup:
    description: _DeleteUserGroup
    post:
      operationId: DeleteUserGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteUserGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteUserGroupResponse'}
          description: DeleteUserGroup_Responses_200
      tags: [UserGroup]
  /DeleteVirtualGateway:
    description: _DeleteVirtualGateway
    post:
      operationId: DeleteVirtualGateway
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVirtualGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVirtualGatewayResponse'}
          description: DeleteVirtualGateway_Responses_200
      tags: [VirtualGateway]
  /DeleteVms:
    description: _DeleteVms
    post:
      operationId: DeleteVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVmsResponse'}
          description: DeleteVms_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteVms_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteVms_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteVms_Responses_500
      tags: [Vm]
  /DeleteVolume:
    description: _DeleteVolume
    post:
      operationId: DeleteVolume
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVolumeResponse'}
          description: DeleteVolume_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteVolume_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteVolume_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: DeleteVolume_Responses_500
      tags: [Volume]
  /DeleteVpnConnection:
    description: _DeleteVpnConnection
    post:
      operationId: DeleteVpnConnection
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpnConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpnConnectionResponse'}
          description: DeleteVpnConnection_Responses_200
      tags: [VpnConnection]
  /DeleteVpnConnectionRoute:
    description: _DeleteVpnConnectionRoute
    post:
      operationId: DeleteVpnConnectionRoute
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpnConnectionRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpnConnectionRouteResponse'}
          description: DeleteVpnConnectionRoute_Responses_200
      tags: [VpnConnection]
  /DeregisterUserInUserGroup:
    description: _DeregisterUserInUserGroup
    post:
      operationId: DeregisterUserInUserGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeregisterUserInUserGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeregisterUserInUserGroupResponse'}
          description: DeregisterUserInUserGroup_Responses_200
      tags: [UserGroup]
  /DeregisterVmsInLoadBalancer:
    description: _DeregisterVmsInLoadBalancer
    post:
      operationId: DeregisterVmsInLoadBalancer
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeregisterVmsInLoadBalancerRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeregisterVmsInLoadBalancerResponse'}
          description: DeregisterVmsInLoadBalancer_Responses_200
      tags: [LoadBalancer]
  /LinkInternetService:
    description: _LinkInternetService
    post:
      operationId: LinkInternetService
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkInternetServiceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkInternetServiceResponse'}
          description: LinkInternetService_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkInternetService_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkInternetService_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkInternetService_Responses_500
      tags: [InternetService]
  /LinkNic:
    description: _LinkNic
    post:
      operationId: LinkNic
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkNicRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkNicResponse'}
          description: LinkNic_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkNic_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkNic_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkNic_Responses_500
      tags: [Nic]
  /LinkPolicy:
    description: _LinkPolicy
    post:
      operationId: LinkPolicy
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkPolicyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkPolicyResponse'}
          description: LinkPolicy_Responses_200
      tags: [Policy]
  /LinkPrivateIps:
    description: _LinkPrivateIps
    post:
      operationId: LinkPrivateIps
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkPrivateIpsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkPrivateIpsResponse'}
          description: LinkPrivateIps_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkPrivateIps_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkPrivateIps_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkPrivateIps_Responses_500
      tags: [Nic]
  /LinkPublicIp:
    description: _LinkPublicIp
    post:
      operationId: LinkPublicIp
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkPublicIpRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkPublicIpResponse'}
          description: LinkPublicIp_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkPublicIp_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkPublicIp_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkPublicIp_Responses_500
      tags: [PublicIp]
  /LinkRouteTable:
    description: _LinkRouteTable
    post:
      operationId: LinkRouteTable
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkRouteTableResponse'}
          description: LinkRouteTable_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkRouteTable_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkRouteTable_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkRouteTable_Responses_500
      tags: [RouteTable]
  /LinkVirtualGateway:
    description: _LinkVirtualGateway
    post:
      operationId: LinkVirtualGateway
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkVirtualGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkVirtualGatewayResponse'}
          description: LinkVirtualGateway_Responses_200
      tags: [VirtualGateway]
  /LinkVolume:
    description: _LinkVolume
    post:
      operationId: LinkVolume
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/LinkVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/LinkVolumeResponse'}
          description: LinkVolume_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkVolume_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkVolume_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: LinkVolume_Responses_500
      tags: [Volume]
  /PurchaseReservedVmsOffer:
    description: _PurchaseReservedVmsOffer
    post:
      operationId: PurchaseReservedVmsOffer
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/PurchaseReservedVmsOfferRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/PurchaseReservedVmsOfferResponse'}
          description: PurchaseReservedVmsOffer_Responses_200
      tags: [ReservedVmsOffer]
  /ReadAccount:
    description: _ReadAccount
    post:
      operationId: ReadAccount
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadAccountRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadAccountResponse'}
          description: ReadAccount_Responses_200
      tags: [Account]
  /ReadAccountConsumption:
    description: _ReadAccountConsumption
    post:
      operationId: ReadAccountConsumption
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadAccountConsumptionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadAccountConsumptionResponse'}
          description: ReadAccountConsumption_Responses_200
      tags: [AccountConsumption]
  /ReadAdminPassword:
    description: _ReadAdminPassword
    post:
      operationId: ReadAdminPassword
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadAdminPasswordRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadAdminPasswordResponse'}
          description: ReadAdminPassword_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadAdminPassword_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadAdminPassword_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadAdminPassword_Responses_500
      tags: [Vm]
  /ReadApiKeys:
    description: _ReadApiKeys
    post:
      operationId: ReadApiKeys
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadApiKeysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadApiKeysResponse'}
          description: ReadApiKeys_Responses_200
      tags: [ApiKey]
  /ReadApiLogs:
    description: _ReadApiLogs
    post:
      operationId: ReadApiLogs
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadApiLogsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadApiLogsResponse'}
          description: ReadApiLogs_Responses_200
      tags: [ApiLog]
  /ReadBillableDigest:
    description: _ReadBillableDigest
    post:
      operationId: ReadBillableDigest
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadBillableDigestRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadBillableDigestResponse'}
          description: ReadBillableDigest_Responses_200
      tags: [BillableDigest]
  /ReadCatalog:
    description: _ReadCatalog
    post:
      operationId: ReadCatalog
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadCatalogRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadCatalogResponse'}
          description: ReadCatalog_Responses_200
      tags: [Catalog]
  /ReadClientGateways:
    description: _ReadClientGateways
    post:
      operationId: ReadClientGateways
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadClientGatewaysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadClientGatewaysResponse'}
          description: ReadClientGateways_Responses_200
      tags: [ClientGateway]
  /ReadConsoleOutput:
    description: _ReadConsoleOutput
    post:
      operationId: ReadConsoleOutput
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadConsoleOutputRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadConsoleOutputResponse'}
          description: ReadConsoleOutput_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadConsoleOutput_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadConsoleOutput_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadConsoleOutput_Responses_500
      tags: [Vm]
  /ReadDhcpOptions:
    description: _ReadDhcpOptions
    post:
      operationId: ReadDhcpOptions
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadDhcpOptionsResponse'}
          description: ReadDhcpOptions_Responses_200
      tags: [DhcpOption]
  /ReadDirectLinkInterfaces:
    description: _ReadDirectLinkInterfaces
    post:
      operationId: ReadDirectLinkInterfaces
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadDirectLinkInterfacesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadDirectLinkInterfacesResponse'}
          description: ReadDirectLinkInterfaces_Responses_200
      tags: [DirectLinkInterface]
  /ReadDirectLinks:
    description: _ReadDirectLinks
    post:
      operationId: ReadDirectLinks
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadDirectLinksRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadDirectLinksResponse'}
          description: ReadDirectLinks_Responses_200
      tags: [DirectLink]
  /ReadImageExportTasks:
    description: _ReadImageExportTasks
    post:
      operationId: ReadImageExportTasks
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadImageExportTasksRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadImageExportTasksResponse'}
          description: ReadImageExportTasks_Responses_200
      tags: [Image]
  /ReadImages:
    description: _ReadImages
    post:
      operationId: ReadImages
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadImagesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadImagesResponse'}
          description: ReadImages_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadImages_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadImages_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadImages_Responses_500
      tags: [Image]
  /ReadInternetServices:
    description: _ReadInternetServices
    post:
      operationId: ReadInternetServices
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadInternetServicesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadInternetServicesResponse'}
          description: ReadInternetServices_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadInternetServices_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadInternetServices_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadInternetServices_Responses_500
      tags: [InternetService]
  /ReadKeypairs:
    description: _ReadKeypairs
    post:
      operationId: ReadKeypairs
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadKeypairsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadKeypairsResponse'}
          description: ReadKeypairs_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadKeypairs_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadKeypairs_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadKeypairs_Responses_500
      tags: [Keypair]
  /ReadListenerRules:
    description: _ReadListenerRules
    post:
      operationId: ReadListenerRules
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadListenerRulesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadListenerRulesResponse'}
          description: ReadListenerRules_Responses_200
      tags: [Listener]
  /ReadLoadBalancers:
    description: _ReadLoadBalancers
    post:
      operationId: ReadLoadBalancers
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadLoadBalancersRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadLoadBalancersResponse'}
          description: ReadLoadBalancers_Responses_200
      tags: [LoadBalancer]
  /ReadLocations:
    description: _ReadLocations
    post:
      operationId: ReadLocations
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadLocationsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadLocationsResponse'}
          description: ReadLocations_Responses_200
      security: []
      tags: [Location]
  /ReadNatServices:
    description: _ReadNatServices
    post:
      operationId: ReadNatServices
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadNatServicesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadNatServicesResponse'}
          description: ReadNatServices_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNatServices_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNatServices_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNatServices_Responses_500
      tags: [NatService]
  /ReadNetAccessPointServices:
    description: _ReadNetAccessPointServices
    post:
      operationId: ReadNetAccessPointServices
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadNetAccessPointServicesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadNetAccessPointServicesResponse'}
          description: ReadNetAccessPointServices_Responses_200
      security: []
      tags: [NetAccessPoint]
  /ReadNetAccessPoints:
    description: _ReadNetAccessPoints
    post:
      operationId: ReadNetAccessPoints
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadNetAccessPointsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadNetAccessPointsResponse'}
          description: ReadNetAccessPoints_Responses_200
      tags: [NetAccessPoint]
  /ReadNetPeerings:
    description: _ReadNetPeerings
    post:
      operationId: ReadNetPeerings
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadNetPeeringsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadNetPeeringsResponse'}
          description: ReadNetPeerings_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNetPeerings_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNetPeerings_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNetPeerings_Responses_500
      tags: [NetPeering]
  /ReadNets:
    description: _ReadNets
    post:
      operationId: ReadNets
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadNetsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadNetsResponse'}
          description: ReadNets_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNets_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNets_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNets_Responses_500
      tags: [Net]
  /ReadNics:
    description: _ReadNics
    post:
      operationId: ReadNics
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadNicsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadNicsResponse'}
          description: ReadNics_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNics_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNics_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadNics_Responses_500
      tags: [Nic]
  /ReadPolicies:
    description: _ReadPolicies
    post:
      operationId: ReadPolicies
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadPoliciesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadPoliciesResponse'}
          description: ReadPolicies_Responses_200
      tags: [Policy]
  /ReadProductTypes:
    description: _ReadProductTypes
    post:
      operationId: ReadProductTypes
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadProductTypesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadProductTypesResponse'}
          description: ReadProductTypes_Responses_200
      security: []
      tags: [ProductType]
  /ReadPublicCatalog:
    description: _ReadPublicCatalog
    post:
      operationId: ReadPublicCatalog
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadPublicCatalogRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadPublicCatalogResponse'}
          description: ReadPublicCatalog_Responses_200
      tags: [PublicCatalog]
  /ReadPublicIpRanges:
    description: _ReadPublicIpRanges
    post:
      operationId: ReadPublicIpRanges
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadPublicIpRangesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadPublicIpRangesResponse'}
          description: ReadPublicIpRanges_Responses_200
      security: []
      tags: [PublicIpRange]
  /ReadPublicIps:
    description: _ReadPublicIps
    post:
      operationId: ReadPublicIps
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadPublicIpsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadPublicIpsResponse'}
          description: ReadPublicIps_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadPublicIps_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadPublicIps_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadPublicIps_Responses_500
      tags: [PublicIp]
  /ReadQuotas:
    description: _ReadQuotas
    post:
      operationId: ReadQuotas
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadQuotasRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadQuotasResponse'}
          description: ReadQuotas_Responses_200
      tags: [Quota]
  /ReadRegionConfig:
    description: _ReadRegionConfig
    post:
      operationId: ReadRegionConfig
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadRegionConfigRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadRegionConfigResponse'}
          description: ReadRegionConfig_Responses_200
      tags: [RegionConfig]
  /ReadRegions:
    description: _ReadRegions
    post:
      operationId: ReadRegions
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadRegionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadRegionsResponse'}
          description: ReadRegions_Responses_200
      tags: [Region]
  /ReadReservedVmOffers:
    description: _ReadReservedVmOffers
    post:
      operationId: ReadReservedVmOffers
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadReservedVmOffersRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadReservedVmOffersResponse'}
          description: ReadReservedVmOffers_Responses_200
      tags: [ReservedVmOffer]
  /ReadReservedVms:
    description: _ReadReservedVms
    post:
      operationId: ReadReservedVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadReservedVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadReservedVmsResponse'}
          description: ReadReservedVms_Responses_200
      tags: [ReservedVm]
  /ReadRouteTables:
    description: _ReadRouteTables
    post:
      operationId: ReadRouteTables
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadRouteTablesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadRouteTablesResponse'}
          description: ReadRouteTables_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadRouteTables_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadRouteTables_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadRouteTables_Responses_500
      tags: [RouteTable]
  /ReadSecurityGroups:
    description: _ReadSecurityGroups
    post:
      operationId: ReadSecurityGroups
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadSecurityGroupsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadSecurityGroupsResponse'}
          description: ReadSecurityGroups_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSecurityGroups_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSecurityGroups_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSecurityGroups_Responses_500
      tags: [SecurityGroup]
  /ReadServerCertificates:
    description: _ReadServerCertificates
    post:
      operationId: ReadServerCertificates
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadServerCertificatesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadServerCertificatesResponse'}
          description: ReadServerCertificates_Responses_200
      tags: [ServerCertificate]
  /ReadSnapshotExportTasks:
    description: _ReadSnapshotExportTasks
    post:
      operationId: ReadSnapshotExportTasks
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadSnapshotExportTasksRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadSnapshotExportTasksResponse'}
          description: ReadSnapshotExportTasks_Responses_200
      tags: [Snapshot]
  /ReadSnapshots:
    description: _ReadSnapshots
    post:
      operationId: ReadSnapshots
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadSnapshotsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadSnapshotsResponse'}
          description: ReadSnapshots_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSnapshots_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSnapshots_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSnapshots_Responses_500
      tags: [Snapshot]
  /ReadSubnets:
    description: _ReadSubnets
    post:
      operationId: ReadSubnets
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadSubnetsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadSubnetsResponse'}
          description: ReadSubnets_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSubnets_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSubnets_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadSubnets_Responses_500
      tags: [Subnet]
  /ReadSubregions:
    description: _ReadSubregions
    post:
      operationId: ReadSubregions
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadSubregionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadSubregionsResponse'}
          description: ReadSubregions_Responses_200
      tags: [Subregion]
  /ReadTags:
    description: _ReadTags
    post:
      operationId: ReadTags
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadTagsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadTagsResponse'}
          description: ReadTags_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadTags_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadTags_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadTags_Responses_500
      tags: [Tag]
  /ReadUserGroups:
    description: _ReadUserGroups
    post:
      operationId: ReadUserGroups
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadUserGroupsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadUserGroupsResponse'}
          description: ReadUserGroups_Responses_200
      tags: [UserGroup]
  /ReadUsers:
    description: _ReadUsers
    post:
      operationId: ReadUsers
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadUsersRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadUsersResponse'}
          description: ReadUsers_Responses_200
      tags: [User]
  /ReadVirtualGateways:
    description: _ReadVirtualGateways
    post:
      operationId: ReadVirtualGateways
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVirtualGatewaysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVirtualGatewaysResponse'}
          description: ReadVirtualGateways_Responses_200
      tags: [VirtualGateway]
  /ReadVmTypes:
    description: _ReadVmTypes
    post:
      operationId: ReadVmTypes
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVmTypesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVmTypesResponse'}
          description: ReadVmTypes_Responses_200
      security: []
      tags: [Vm]
  /ReadVms:
    description: _ReadVms
    post:
      operationId: ReadVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVmsResponse'}
          description: ReadVms_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVms_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVms_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVms_Responses_500
      tags: [Vm]
  /ReadVmsHealth:
    description: _ReadVmsHealth
    post:
      operationId: ReadVmsHealth
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVmsHealthRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVmsHealthResponse'}
          description: ReadVmsHealth_Responses_200
      tags: [Health]
  /ReadVmsState:
    description: _ReadVmsState
    post:
      operationId: ReadVmsState
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVmsStateRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVmsStateResponse'}
          description: ReadVmsState_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVmsState_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVmsState_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVmsState_Responses_500
      tags: [Vm]
  /ReadVolumes:
    description: _ReadVolumes
    post:
      operationId: ReadVolumes
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVolumesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVolumesResponse'}
          description: ReadVolumes_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVolumes_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVolumes_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: ReadVolumes_Responses_500
      tags: [Volume]
  /ReadVpnConnections:
    description: _ReadVpnConnections
    post:
      operationId: ReadVpnConnections
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadVpnConnectionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadVpnConnectionsResponse'}
          description: ReadVpnConnections_Responses_200
      tags: [VpnConnection]
  /RebootVms:
    description: _RebootVms
    post:
      operationId: RebootVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RebootVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RebootVmsResponse'}
          description: RebootVms_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RebootVms_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RebootVms_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RebootVms_Responses_500
      tags: [Vm]
  /RegisterUserInUserGroup:
    description: _RegisterUserInUserGroup
    post:
      operationId: RegisterUserInUserGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RegisterUserInUserGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RegisterUserInUserGroupResponse'}
          description: RegisterUserInUserGroup_Responses_200
      tags: [UserGroup]
  /RegisterVmsInLoadBalancer:
    description: _RegisterVmsInLoadBalancer
    post:
      operationId: RegisterVmsInLoadBalancer
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RegisterVmsInLoadBalancerRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RegisterVmsInLoadBalancerResponse'}
          description: RegisterVmsInLoadBalancer_Responses_200
      tags: [LoadBalancer]
  /RejectNetPeering:
    description: _RejectNetPeering
    post:
      operationId: RejectNetPeering
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RejectNetPeeringRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RejectNetPeeringResponse'}
          description: RejectNetPeering_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RejectNetPeering_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RejectNetPeering_Responses_401
        '409':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RejectNetPeering_Responses_409
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: RejectNetPeering_Responses_500
      tags: [NetPeering]
  /ResetAccountPassword:
    description: _ResetAccountPassword
    post:
      operationId: ResetAccountPassword
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ResetAccountPasswordRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ResetAccountPasswordResponse'}
          description: ResetAccountPassword_Responses_200
      tags: [AccountPassword]
  /SendResetPasswordEmail:
    description: _SendResetPasswordEmail
    post:
      operationId: SendResetPasswordEmail
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/SendResetPasswordEmailRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/SendResetPasswordEmailResponse'}
          description: SendResetPasswordEmail_Responses_200
      tags: [ResetPasswordEmail]
  /StartVms:
    description: _StartVms
    post:
      operationId: StartVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/StartVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/StartVmsResponse'}
          description: StartVms_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: StartVms_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: StartVms_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: StartVms_Responses_500
      tags: [Vm]
  /StopVms:
    description: _StopVms
    post:
      operationId: StopVms
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/StopVmsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/StopVmsResponse'}
          description: StopVms_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: StopVms_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: StopVms_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: StopVms_Responses_500
      tags: [Vm]
  /UnlinkInternetService:
    description: _UnlinkInternetService
    post:
      operationId: UnlinkInternetService
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkInternetServiceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkInternetServiceResponse'}
          description: UnlinkInternetService_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkInternetService_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkInternetService_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkInternetService_Responses_500
      tags: [InternetService]
  /UnlinkNic:
    description: _UnlinkNic
    post:
      operationId: UnlinkNic
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkNicRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkNicResponse'}
          description: UnlinkNic_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkNic_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkNic_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkNic_Responses_500
      tags: [Nic]
  /UnlinkPolicy:
    description: _UnlinkPolicy
    post:
      operationId: UnlinkPolicy
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkPolicyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkPolicyResponse'}
          description: UnlinkPolicy_Responses_200
      tags: [Policy]
  /UnlinkPrivateIps:
    description: _UnlinkPrivateIps
    post:
      operationId: UnlinkPrivateIps
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkPrivateIpsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkPrivateIpsResponse'}
          description: UnlinkPrivateIps_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkPrivateIps_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkPrivateIps_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkPrivateIps_Responses_500
      tags: [Nic]
  /UnlinkPublicIp:
    description: _UnlinkPublicIp
    post:
      operationId: UnlinkPublicIp
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkPublicIpRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkPublicIpResponse'}
          description: UnlinkPublicIp_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkPublicIp_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkPublicIp_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkPublicIp_Responses_500
      tags: [PublicIp]
  /UnlinkRouteTable:
    description: _UnlinkRouteTable
    post:
      operationId: UnlinkRouteTable
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkRouteTableResponse'}
          description: UnlinkRouteTable_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkRouteTable_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkRouteTable_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkRouteTable_Responses_500
      tags: [RouteTable]
  /UnlinkVirtualGateway:
    description: _UnlinkVirtualGateway
    post:
      operationId: UnlinkVirtualGateway
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkVirtualGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkVirtualGatewayResponse'}
          description: UnlinkVirtualGateway_Responses_200
      tags: [VirtualGateway]
  /UnlinkVolume:
    description: _UnlinkVolume
    post:
      operationId: UnlinkVolume
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnlinkVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnlinkVolumeResponse'}
          description: UnlinkVolume_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkVolume_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkVolume_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UnlinkVolume_Responses_500
      tags: [Volume]
  /UpdateAccount:
    description: _UpdateAccount
    post:
      operationId: UpdateAccount
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateAccountRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateAccountResponse'}
          description: UpdateAccount_Responses_200
      tags: [Account]
  /UpdateApiKey:
    description: _UpdateApiKey
    post:
      operationId: UpdateApiKey
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateApiKeyRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateApiKeyResponse'}
          description: UpdateApiKey_Responses_200
      tags: [ApiKey]
  /UpdateImage:
    description: _UpdateImage
    post:
      operationId: UpdateImage
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateImageResponse'}
          description: UpdateImage_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateImage_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateImage_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateImage_Responses_500
      tags: [Image]
  /UpdateKeypair:
    description: _UpdateKeypair
    post:
      operationId: UpdateKeypair
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateKeypairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateKeypairResponse'}
          description: UpdateKeypair_Responses_200
      tags: [Keypair]
  /UpdateListenerRule:
    description: _UpdateListenerRule
    post:
      operationId: UpdateListenerRule
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateListenerRuleRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateListenerRuleResponse'}
          description: UpdateListenerRule_Responses_200
      tags: [Listener]
  /UpdateLoadBalancer:
    description: _UpdateLoadBalancer
    post:
      operationId: UpdateLoadBalancer
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateLoadBalancerRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateLoadBalancerResponse'}
          description: UpdateLoadBalancer_Responses_200
      tags: [LoadBalancer]
  /UpdateNet:
    description: _UpdateNet
    post:
      operationId: UpdateNet
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateNetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateNetResponse'}
          description: UpdateNet_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateNet_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateNet_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateNet_Responses_500
      tags: [Net]
  /UpdateNetAccessPoint:
    description: _UpdateNetAccessPoint
    post:
      operationId: UpdateNetAccessPoint
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateNetAccessPointRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateNetAccessPointResponse'}
          description: UpdateNetAccessPoint_Responses_200
      tags: [NetAccessPoint]
  /UpdateNic:
    description: _UpdateNic
    post:
      operationId: UpdateNic
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateNicRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateNicResponse'}
          description: UpdateNic_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateNic_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateNic_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateNic_Responses_500
      tags: [Nic]
  /UpdateRoute:
    description: _UpdateRoute
    post:
      operationId: UpdateRoute
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateRouteResponse'}
          description: UpdateRoute_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateRoute_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateRoute_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateRoute_Responses_500
      tags: [Route]
  /UpdateRoutePropagation:
    description: _UpdateRoutePropagation
    post:
      operationId: UpdateRoutePropagation
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateRoutePropagationRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateRoutePropagationResponse'}
          description: UpdateRoutePropagation_Responses_200
      tags: [VirtualGateway]
  /UpdateServerCertificate:
    description: _UpdateServerCertificate
    post:
      operationId: UpdateServerCertificate
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateServerCertificateRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateServerCertificateResponse'}
          description: UpdateServerCertificate_Responses_200
      tags: [ServerCertificate]
  /UpdateSnapshot:
    description: _UpdateSnapshot
    post:
      operationId: UpdateSnapshot
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateSnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateSnapshotResponse'}
          description: UpdateSnapshot_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateSnapshot_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateSnapshot_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateSnapshot_Responses_500
      tags: [Snapshot]
  /UpdateSubnet:
    description: _UpdateSubnet
    post:
      operationId: UpdateSubnet
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateSubnetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateSubnetResponse'}
          description: UpdateSubnet_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateSubnet_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateSubnet_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateSubnet_Responses_500
      tags: [Subnet]
  /UpdateUser:
    description: _UpdateUser
    post:
      operationId: UpdateUser
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateUserRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateUserResponse'}
          description: UpdateUser_Responses_200
      tags: [User]
  /UpdateUserGroup:
    description: _UpdateUserGroup
    post:
      operationId: UpdateUserGroup
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateUserGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateUserGroupResponse'}
          description: UpdateUserGroup_Responses_200
      tags: [UserGroup]
  /UpdateVm:
    description: _UpdateVm
    post:
      operationId: UpdateVm
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UpdateVmRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UpdateVmResponse'}
          description: UpdateVm_Responses_200
        '400':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateVm_Responses_400
        '401':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateVm_Responses_401
        '500':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorResponse'}
          description: UpdateVm_Responses_500
      tags: [Vm]
security:
- ApiKeyAuth: []
servers:
- url: https://api.{region}.outscale.com/oapi/v0
  variables:
    region:
      default: eu-west-2
      enum: [cn-southeast-1, eu-west-2, us-east-2, us-west-1]
